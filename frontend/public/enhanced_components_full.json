[
  {
    "id": 1,
    "uid": "e424d3ce-940b-4a96-827e-d3723d2f34fc",
    "packageName": "SmartBots",
    "actionName": "open_application",
    "actionDescription": "Abrir Quirer",
    "actionGroup": "Application",
    "actionLabel": "Open application",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.25 5.78987C5.25 4.42081 6.7512 3.58195 7.91717 4.29947L18.0091 10.5099C19.1196 11.1933 19.1196 12.8074 18.0091 13.4907L7.91717 19.7011C6.7512 20.4187 5.25 19.5798 5.25 18.2107V5.78987Z\" fill=\"currentColor\" />\n</svg>",
    "storageEntity": null,
    "info": "{\r\n  \"properties\": [\r\n    {\r\n      \"name\": \"handler\",\r\n      \"required\": \"true\"\r\n    },\r\n    {\r\n      \"name\": \"application_filename\",\r\n      \"required\": \"true\"\r\n    }\r\n  ],\r\n  \"code\": {\r\n    \"imports\": [\r\n      {\r\n        \"from\": \"pywinauto.application\",\r\n        \"import\": \"Application\"\r\n      }\r\n    ],\r\n    \"template\": \"if 'application_filename' in self.data:\\n\\treturn '{} = Application().start(r\\\"{}\\\")'.format(self.data[\\\"handler\\\"], self.data[\\\"application_filename\\\"])\"\r\n  }\r\n}",
    "code": "#region import\r\nfrom pywinauto.application import Application\r\n#endregion\r\n\r\n#region code\r\n{{handler}} = Application(backend=\"uia\")\r\n{{handler}}.start(r\"{{filename}}\")\n{{handler}}.top_window().wait('exists enabled visible ready')\r\n#endregion\r\n\r\n#region requiredExtensions\r\npywinauto 0.6.8\r\n#endregion\r\n\r\n#region toString\r\n({{handler}}) {{filename}}\r\n#endregion",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"handler\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Handler\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"{{next_handler()}}\",\r\n                    \"content_sources\": null\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"filename\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Filename\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": null,\r\n                    \"content_sources\": [\r\n                        \"variable\",\r\n                        \"local_filename\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n{\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"arguments\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Arguments\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('arguments', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": null,\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"working_dir\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Working directory\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('working_dir', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": null,\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Open application",
      "intent_keywords": [
        "open",
        "application",
        "open_application"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "filename"
        ],
        "optional_inputs": [
          "arguments",
          "working_dir"
        ],
        "input_types": {
          "handler": "variable_name",
          "filename": "file_path",
          "arguments": "string",
          "working_dir": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of open application",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 2,
    "uid": "f78dfe88-63d1-49a9-8d89-c8b0a10c0fb3",
    "packageName": "SmartBots",
    "actionName": "system_pause",
    "actionDescription": "Pause",
    "actionGroup": "System",
    "actionLabel": "Pause",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11 7H13V11.5858L14.7071 13.2929L13.2929 14.7071L11 12.4142V7Z\" fill=\"currentColor\" />\r\n    <path d=\"M15.5398 14.4077C15.7816 14.2199 16.1134 14.1979 16.3779 14.3522L22.3779 17.8522C22.6083 17.9866 22.75 18.2333 22.75 18.5C22.75 18.7668 22.6083 19.0134 22.3779 19.1478L16.3779 22.6478C16.1134 22.8021 15.7816 22.7801 15.5398 22.5923C15.298 22.4044 15.1947 22.0884 15.2788 21.794L16.22 18.5L15.2788 15.206C15.1947 14.9116 15.298 14.5956 15.5398 14.4077Z\" fill=\"currentColor\" />\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3.20455C7.1424 3.20455 3.20455 7.1424 3.20455 12C3.20455 16.8576 7.1424 20.7955 12 20.7955C12.3054 20.7955 12.6069 20.7799 12.9037 20.7497L13.1019 22.6941C12.7393 22.7311 12.3717 22.75 12 22.75C6.06294 22.75 1.25 17.9371 1.25 12C1.25 6.06294 6.06294 1.25 12 1.25C17.9371 1.25 22.75 6.06294 22.75 12C22.75 12.735 22.6761 13.4538 22.535 14.149L20.6195 13.7601C20.7348 13.1922 20.7955 12.6037 20.7955 12C20.7955 7.1424 16.8576 3.20455 12 3.20455Z\" fill=\"currentColor\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"duration\", \"defaultValue\": \"1000\"},\r\n\t\t{\"name\": \"unit\", \"defaultValue\": \"milliseconds\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [\r\n\t\t\t{\"import\": \"time\"}\r\n\t\t],\r\n\t\t\"template\": \"if 'seconds' in self.data:\\\\n\\treturn 'time.sleep({})'.format(self.data['seconds'])\\\\nif 'milliseconds' in self.data:\\\\n\\treturn 'time.sleep({} / 1000)'.format(self.data['milliseconds'])\\\\nif 'minutes' in self.data:\\\\n\\treturn 'time.sleep({} * 60)'.format(self.data['minutes'])\\\\nreturn ''\\\\n\"\r\n\t}\r\n}\r\n",
    "code": "#region import\r\nimport time\r\n#endregion\r\n\r\n#region code\r\n{{#if duration_unit == 'milliseconds'}}\ntime.sleep({{duration}} / 1000)\n{{/if}}\n{{#if duration_unit != 'milliseconds'}}\ntime.sleep({{duration}})\n{{/if}}\n#endregion\r\n\r\n#region toString\r\n{{duration}} {{duration_unit}}\r\n#endregion",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"duration\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Duration\"\r\n                    },\r\n                    \"initialValue\": \"${duration}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"duration_unit\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Unit\"\r\n                    },\r\n                    \"items\": [\r\n                        \"milliseconds\",\r\n                        \"seconds\"\r\n                    ],\r\n                    \"initialValue\": \"${duration_unit}\",\r\n                    \"value\": \"${duration_unit}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Pause",
      "intent_keywords": [
        "system_pause",
        "pause"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "duration_unit"
        ],
        "optional_inputs": [
          "duration"
        ],
        "input_types": {
          "duration": "string",
          "duration_unit": "selection"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of pause",
        "output_variable": "duration_unit"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 3,
    "uid": "43a49213-d7f2-4bda-a6fe-e4d257a6b70a",
    "packageName": "SmartBots",
    "actionName": "applicacion_keystrokes",
    "actionDescription": "Simulate keystrokes",
    "actionGroup": "Application",
    "actionLabel": "Simulate keystrokes",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M19 7H5C3.34315 7 2 8.34315 2 10V19C2 20.6569 3.34315 22 5 22H19C20.6569 22 22 20.6569 22 19V10C22 8.34315 20.6569 7 19 7Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M12 7V5.53078C12 4.92498 12.4123 4.39693 13 4.25V4.25C13.5877 4.10307 14 3.57502 14 2.96922V2\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n    <path d=\"M7 12L8 12M11.5 12L12.5 12M16 12L17 12\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n    <path d=\"M7 17L17 17\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\r\n#endregion\r\n\r\n#region code\r\n{{handler}}.window().type_keys(r\"{{keystrokes}}\")\n#endregion\r\n\r\n#region requiredExtensions\r\npywinauto 0.6.8\r\n#endregion\r\n\r\n#region toString\r\n({{handler}}) {{keystrokes}}\r\n#endregion",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"keystrokes\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Keystrokes\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('keystrokes', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${keystrokes}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Simulate keystrokes",
      "intent_keywords": [
        "applicacion_keystrokes",
        "simulate",
        "keystrokes"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "keystrokes"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "keystrokes": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of simulate keystrokes",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 4,
    "uid": "fce93859-432b-4aa1-8b2e-71eb6d6f1946",
    "packageName": "SmartBots",
    "actionName": "send_email",
    "actionDescription": "Send message",
    "actionGroup": "Email",
    "actionLabel": "Send message",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M11 20H4C2.89543 20 2 19.1046 2 18V6C2 4.89543 2.89543 4 4 4H20C21.1046 4 22 4.89543 22 6V12\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n    <path d=\"M22 7L12.8944 11.5528C12.3314 11.8343 11.6686 11.8343 11.1056 11.5528L2 7\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M19.5 15L22 17.5L19.5 15ZM19.5 20L22 17.5L19.5 20Z\" fill=\"#D9D9D9\" />\r\n    <path d=\"M19.5 15L22 17.5L19.5 20M14.5 17.5L21.3912 17.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Send message",
      "intent_keywords": [
        "send",
        "message",
        "send_email"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of send message",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 5,
    "uid": "731e75bb-40f4-4f37-9ef4-076b3425a318",
    "packageName": "SmartBots",
    "actionName": "read_json",
    "actionDescription": "Read Json",
    "actionGroup": "JSON",
    "actionLabel": "Read Json",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.5875 22.75C12.1575 22.7507 12.662 22.7514 13.1374 22.5827C13.2354 22.548 13.3314 22.508 13.4252 22.4629C13.88 22.2442 14.2363 21.8852 14.6387 21.4795L19.4216 16.6719C19.8889 16.2035 20.3037 15.7879 20.5278 15.2441C20.7518 14.7004 20.7509 14.1116 20.7499 13.4482L20.7498 9.97396C20.7498 8.19195 20.7498 6.7556 20.5987 5.62592C20.4419 4.45306 20.1063 3.46554 19.326 2.68123C18.5458 1.89693 17.5634 1.55958 16.3966 1.40189C15.2727 1.25002 13.8438 1.25004 12.071 1.25006C10.2982 1.25004 8.72712 1.25002 7.60328 1.4019C6.43649 1.55958 5.45408 1.89693 4.67383 2.68123C3.89358 3.46554 3.55798 4.45307 3.40111 5.62592C3.25002 6.75558 3.25004 8.19193 3.25006 9.97389V9.9739V9.97392V9.97394V14.5475V14.5475V14.5475V14.5476C3.25005 16.0812 3.25003 17.3177 3.36431 18.3015C3.48255 19.3195 3.73424 20.1917 4.32688 20.9305C4.54441 21.2017 4.79018 21.4488 5.05999 21.6674C5.79501 22.2632 6.66272 22.5162 7.67541 22.635C8.65417 22.7499 10.0618 22.75 11.5875 22.75ZM18.7314 14.4962C18.6746 14.634 18.5693 14.7644 17.9512 15.3857L13.3463 20.0145C12.8133 20.5502 12.6719 20.6837 12.4903 20.7383C12.4903 19.3765 12.4903 18.7204 12.6066 17.8552C12.7276 16.9551 12.9865 16.1972 13.5884 15.5953C14.1903 14.9934 14.9482 14.7345 15.8483 14.6135C16.7153 14.4969 17.3638 14.4961 18.7314 14.4962ZM16.7501 7.00006C16.7501 7.41428 16.4143 7.75006 16.0001 7.75006L8.00006 7.75006C7.58585 7.75006 7.25006 7.41428 7.25006 7.00006C7.25006 6.58585 7.58585 6.25006 8.00006 6.25006L16.0001 6.25006C16.4143 6.25006 16.7501 6.58585 16.7501 7.00006ZM12.0001 11.7501C12.4143 11.7501 12.7501 11.4143 12.7501 11.0001C12.7501 10.5858 12.4143 10.2501 12.0001 10.2501H8.00006C7.58585 10.2501 7.25006 10.5858 7.25006 11.0001C7.25006 11.4143 7.58585 11.7501 8.00006 11.7501H12.0001Z\" fill=\"currentColor\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\r\nimport json\r\n#endregion\r\n\r\n#region code\r\nwith open(f'{{filename}}', 'r') as file:\r\n    {{handler}} = json.load(file)\r\n#endregion\r\n\r\n#region requiredExtensions\r\njson\r\n#endregion\r\n\r\n#region toString\r\n{{filename}}\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"handler\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Handler\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"initialValue\": \"${handler}\",\r\n                    \"content_sources\": [\r\n                        \"variable\",\r\n                        \"local_filename\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"filename\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Filename\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"initialValue\": \"${filename}\",\r\n                    \"content_sources\": [\r\n                        \"variable\",\r\n                        \"local_filename\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Read Json",
      "intent_keywords": [
        "json",
        "read",
        "read_json"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "filename"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "filename": "file_path"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of read json",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 6,
    "uid": "21e7392d-2e3c-4eb3-a9d9-ff261b1df77f",
    "packageName": "SmartBots",
    "actionName": "excel_read_table",
    "actionDescription": "Reads data from table and loads it for processing",
    "actionGroup": "Excel",
    "actionLabel": "Read excel table",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport pandas as pd\r\nimport json\r\n#endregion\r\n\r\n#region code\r\ndf = pd.read_excel(r'{{excel_file_name}}', sheet_name=0, header=0)\r\n{{destination}} = df.to_json()\r\nwith open(r'{{excel_file_name}}.json', 'w', encoding='utf-8') as f:\r\n    json.dump({{destination}}, f, ensure_ascii=False, indent=4)\r\n#endregion\r\n\r\n#region toString\r\n{{excel_file_name}} [{{sheet_name}}]\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"excel_file_name\",\r\n                \"args\": {\r\n                    \"initialValue\": \"${excel_file_name}\",\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Excel file name\"\r\n                    },\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"sheet_name\",\r\n                \"args\": {\r\n                    \"initialValue\": \"${sheet_name}\",\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Sheet\"\r\n                    },\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"destination\",\r\n                \"args\": {\r\n                    \"initialValue\": \"${destination}\",\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Destination Handler\"\r\n                    },\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Reads data from table and loads it for processing",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "retrieve",
        "excel",
        "xlsx",
        "xls",
        "load",
        "fetch",
        "save",
        "excel_read_table",
        "import",
        "get",
        "table",
        "read"
      ],
      "use_cases": [
        "Reading financial reports and budgets",
        "Processing customer data from Excel files",
        "Importing inventory lists and product catalogs",
        "Loading sales data for analysis"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [
          "excel_file_name",
          "sheet_name",
          "destination"
        ],
        "input_types": {
          "excel_file_name": "file_path",
          "sheet_name": "string",
          "destination": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of read excel table",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library"
      ],
      "typical_next_steps": [
        "data_transform",
        "filter",
        "transform",
        "data_filter",
        "data_analysis",
        "process",
        "analyze"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 7,
    "uid": "bf7c3003-cecc-436c-b180-9949cc8eef41",
    "packageName": "SmartBots",
    "actionName": "database_connect",
    "actionDescription": "Esta es una prueba 2",
    "actionGroup": "Database",
    "actionLabel": "Connect",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <ellipse cx=\"12\" cy=\"5\" rx=\"8\" ry=\"3\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path opacity=\"0.4\" d=\"M7 10.842C7.60158 11.0229 8.27434 11.1718 9 11.282\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" />\r\n    <path d=\"M20 12C20 13.6569 16.4183 15 12 15C7.58172 15 4 13.6569 4 12\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path opacity=\"0.4\" d=\"M7 17.842C7.60158 18.0229 8.27434 18.1718 9 18.282\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" />\r\n    <path d=\"M20 5V19C20 20.6569 16.4183 22 12 22C7.58172 22 4 20.6569 4 19V5\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Connect",
      "intent_keywords": [
        "database_connect",
        "store",
        "update",
        "insert",
        "select",
        "connect",
        "database",
        "query",
        "sql"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of connect",
        "output_variable": "result"
      },
      "complexity_level": "intermediate",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 8,
    "uid": "c2294093-c400-48f3-89f3-deebc213860d",
    "packageName": "SmartBots",
    "actionName": "database_disconnect",
    "actionDescription": "Close connection",
    "actionGroup": "Database",
    "actionLabel": "Close connection",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21 5L21 10.7666L20.9905 10.7766C19.1522 12.7448 16.4961 13.9468 11.9947 13.9995C9.62244 13.999 7.86278 13.6634 6.43875 13.1223C5.11695 12.6201 4.04069 11.9245 3 11.0851L3 5C3 4.19711 3.43749 3.55194 3.96527 3.08401C4.49422 2.61504 5.20256 2.2384 5.99202 1.94235C7.57833 1.34749 9.70269 1 12 1C14.2973 1 16.4217 1.34749 18.008 1.94235C18.7974 2.2384 19.5058 2.61504 20.0347 3.08401C20.5625 3.55194 21 4.19711 21 5ZM5.29209 4.58052C5.01022 4.83042 5 4.97447 5 5C5 5.02553 5.01022 5.16958 5.29209 5.41948C5.57279 5.66834 6.03602 5.93815 6.69427 6.18499C8.0034 6.67591 9.87903 7 12 7C14.121 7 15.9966 6.67591 17.3057 6.18499C17.964 5.93815 18.4272 5.66834 18.7079 5.41948C18.9898 5.16958 19 5.02553 19 5C19 4.97447 18.9898 4.83042 18.7079 4.58052C18.4272 4.33166 17.964 4.06185 17.3057 3.81501C15.9966 3.32409 14.121 3 12 3C9.87903 3 8.0034 3.32409 6.69427 3.81501C6.03602 4.06185 5.57279 4.33166 5.29209 4.58052ZM7.21611 10.2819C6.81943 10.1627 6.40119 10.3876 6.28195 10.7843C6.1627 11.181 6.38761 11.5992 6.78428 11.7184L6.89337 11.7513L6.89339 11.7513C7.46213 11.9228 8.14746 12.1293 8.88764 12.2417C9.29716 12.3039 9.67954 12.0223 9.7417 11.6128C9.80387 11.2032 9.52228 10.8209 9.11276 10.7587C8.48163 10.6629 7.89002 10.4848 7.30515 10.3087L7.30513 10.3087L7.21611 10.2819Z\" fill=\"currentColor\" />\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.0119 15.9998C15.9533 15.9545 18.8246 15.0822 21 13.4492V19.0003C21 19.8032 20.5625 20.4484 20.0347 20.9163C19.5058 21.3853 18.7974 21.7619 18.008 22.058C16.4217 22.6528 14.2973 23.0003 12 23.0003C9.70269 23.0003 7.57833 22.6528 5.99202 22.058C5.20256 21.7619 4.49422 21.3853 3.96527 20.9163C3.43749 20.4484 3 19.8032 3 19.0003L3 13.5723C3.81375 14.1187 4.7042 14.6031 5.7284 14.9923C7.42256 15.6359 9.43204 15.9999 12.0005 15.9999L12.0119 15.9998ZM7.21611 17.2821C6.81943 17.1628 6.40119 17.3877 6.28195 17.7844C6.1627 18.1811 6.38761 18.5993 6.78428 18.7186L6.89337 18.7514C7.46211 18.9229 8.14745 19.1295 8.88764 19.2418C9.29716 19.304 9.67954 19.0224 9.7417 18.6129C9.80387 18.2034 9.52228 17.821 9.11276 17.7588C8.48162 17.663 7.89 17.4849 7.30513 17.3089L7.21611 17.2821Z\" fill=\"currentColor\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Close connection",
      "intent_keywords": [
        "database_disconnect",
        "store",
        "update",
        "insert",
        "select",
        "database",
        "query",
        "sql",
        "connection",
        "close"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of close connection",
        "output_variable": "result"
      },
      "complexity_level": "intermediate",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 9,
    "uid": "e398407a-e18d-4b62-ae31-b7bfb8ae48d3",
    "packageName": "SmartBots",
    "actionName": "database_read",
    "actionDescription": "Reads data from data and loads it for processing",
    "actionGroup": "Database",
    "actionLabel": "Read",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <ellipse cx=\"12\" cy=\"5\" rx=\"8\" ry=\"3\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M12 15C7.58172 15 4 13.6569 4 12\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M11.001 11.4768C9.91904 11.4262 8.90419 11.2946 8.00098 11.0986M11.001 18.4768C9.91904 18.4262 8.90419 18.2946 8.00098 18.0986\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M12 22C7.58172 22 4 20.6569 4 19V5M20 5V12\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M20 19.0002L17 22.0002L14 19.0002M17 14V21.4188\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Reads data from data and loads it for processing",
      "intent_keywords": [
        "retrieve",
        "store",
        "update",
        "insert",
        "select",
        "load",
        "database",
        "fetch",
        "query",
        "sql",
        "database_read",
        "import",
        "get",
        "read"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of read",
        "output_variable": "result"
      },
      "complexity_level": "intermediate",
      "dependencies": [],
      "typical_next_steps": [
        "transform",
        "filter",
        "process",
        "analyze"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 10,
    "uid": "688e3b40-dac9-4ae3-a254-8a6bef156652",
    "packageName": "SmartBots",
    "actionName": "variable_set_variable_value",
    "actionDescription": "Set variable value",
    "actionGroup": "Variable",
    "actionLabel": "Set variable value",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M11.5 20.5H2.5V2.5H20.5V11.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"square\" stroke-linejoin=\"round\" />\r\n    <path d=\"M2.5 8.5H20.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"square\" />\r\n    <path d=\"M2.5 12.5L16.5 12.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"square\" />\r\n    <path d=\"M2.5 16.5H11.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"square\" />\r\n    <path d=\"M11.5 20.5L11.5 8.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"square\" />\r\n    <path d=\"M21.5 16.5L19.5 14.5L14.5 19.5V21.5H16.5L21.5 16.5Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"square\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\n#endregion\n\n#region code\n{{variable}} = {{value}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{variable}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"variable\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Variable name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('variable', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${variable}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"value\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Value\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('value', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${value}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Set variable value",
      "intent_keywords": [
        "variable_set_variable_value",
        "variable",
        "set",
        "value"
      ],
      "use_cases": [
        "Automating variable value operations",
        "Processing variable value in workflows",
        "Managing variable value data efficiently",
        "Streamlining variable value tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "variable",
          "value"
        ],
        "optional_inputs": [],
        "input_types": {
          "variable": "string",
          "value": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of set variable value",
        "output_variable": "variable"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 11,
    "uid": "46074d44-5d90-4dc6-bc41-baf935bf6f26",
    "packageName": "SmartBots",
    "actionName": "aws_s3_upload",
    "actionDescription": "S3 - Upload",
    "actionGroup": "AWS",
    "actionLabel": "S3 - Upload",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M17.4776 9.01106C17.485 9.01102 17.4925 9.01101 17.5 9.01101C19.9853 9.01101 22 11.0294 22 13.5193C22 15.8398 20.25 17.7508 18 18M17.4776 9.01106C17.4924 8.84606 17.5 8.67896 17.5 8.51009C17.5 5.46695 15.0376 3 12 3C9.12324 3 6.76233 5.21267 6.52042 8.03192M17.4776 9.01106C17.3753 10.1476 16.9286 11.1846 16.2428 12.0165M6.52042 8.03192C3.98398 8.27373 2 10.4139 2 13.0183C2 15.4417 3.71776 17.4632 6 17.9273M6.52042 8.03192C6.67826 8.01687 6.83823 8.00917 7 8.00917C8.12582 8.00917 9.16474 8.38194 10.0005 9.01101\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n    <path d=\"M12 13L12 21M12 13C11.2998 13 9.99153 14.9943 9.5 15.5M12 13C12.7002 13 14.0085 14.9943 14.5 15.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "S3 - Upload",
      "intent_keywords": [
        "upload",
        "aws_s3_upload",
        "s3"
      ],
      "use_cases": [
        "Automating upload operations",
        "Processing upload in workflows",
        "Managing upload data efficiently",
        "Streamlining upload tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of s3 - upload",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 12,
    "uid": "f922623d-5602-4594-98b6-94add25f1bf1",
    "packageName": "SmartBots",
    "actionName": "statements_if",
    "actionDescription": "If",
    "actionGroup": "Statements",
    "actionLabel": "If",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path opacity=\"0.4\" d=\"M10 9C10 7.89543 10.8954 7 12 7C13.1046 7 14 7.89543 14 9C14 9.39815 13.8837 9.76913 13.6831 10.0808C13.0854 11.0097 12 11.8954 12 13V13.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" />\r\n    <path opacity=\"0.4\" d=\"M11.992 17H12.001\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"attributes\": {\r\n\t\t\"can_have_children\": true,\r\n\t},\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\n#endregion\n\n#region code\nif {{conditions}}:\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{conditions}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"conditions\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Conditions\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('conditions', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${conditions}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": true,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "If",
      "intent_keywords": [
        "if",
        "statements_if"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "conditions"
        ],
        "optional_inputs": [],
        "input_types": {
          "conditions": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of if",
        "output_variable": "conditions"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 13,
    "uid": "4fe46c02-7932-45ba-afe0-7ba50c457fe0",
    "packageName": "SmartBots",
    "actionName": "statements_elif",
    "actionDescription": "Else If",
    "actionGroup": "Statements",
    "actionLabel": "Else If",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path opacity=\"0.4\" d=\"M10 9C10 7.89543 10.8954 7 12 7C13.1046 7 14 7.89543 14 9C14 9.39815 13.8837 9.76913 13.6831 10.0808C13.0854 11.0097 12 11.8954 12 13V13.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" />\r\n    <path opacity=\"0.4\" d=\"M11.992 17H12.001\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\n#endregion\n\n#region code\nelif {{conditions}}:\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{conditions}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"conditions\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Conditions\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('conditions', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${conditions}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": true,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Else If",
      "intent_keywords": [
        "statements_elif",
        "if",
        "else"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "conditions"
        ],
        "optional_inputs": [],
        "input_types": {
          "conditions": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of else if",
        "output_variable": "conditions"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 14,
    "uid": "c60b8285-d173-4f20-9215-a04e0d58f728",
    "packageName": "SmartBots",
    "actionName": "statements_else",
    "actionDescription": "Else",
    "actionGroup": "Statements",
    "actionLabel": "Else",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path opacity=\"0.4\" d=\"M10 9C10 7.89543 10.8954 7 12 7C13.1046 7 14 7.89543 14 9C14 9.39815 13.8837 9.76913 13.6831 10.0808C13.0854 11.0097 12 11.8954 12 13V13.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" />\r\n    <path opacity=\"0.4\" d=\"M11.992 17H12.001\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"attributes\": {\r\n\t\t\"can_have_children\": true,\r\n\t},\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\r\n#endregion\r\n\r\n#region code\r\nelse:\r\n#endregion\r\n\r\n#region toString\r\n#endregion\r\n",
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": true,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Else",
      "intent_keywords": [
        "statements_else",
        "else"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of else",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 15,
    "uid": "79a3ca9f-e9ad-4dc4-baad-f1b220444bc6",
    "packageName": "SmartBots",
    "actionName": "statements_loop",
    "actionDescription": "Loop",
    "actionGroup": "Statements",
    "actionLabel": "Loop",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.6402 1.50012L19 4.29997V6.26834H9.19422C5.74727 6.26834 3 8.98026 3 12.2683C3 13.5379 3.40602 14.7145 4.10224 15.6857L2.47676 16.851C1.54735 15.5545 1 13.9733 1 12.2683C1 7.82444 4.69465 4.26834 9.19422 4.26834H15.8379L14.3598 3.03656L15.6402 1.50012Z\" fill=\"currentColor\" />\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21 11.7312C21 10.4617 20.594 9.28501 19.8978 8.31382L21.5232 7.14856C22.4527 8.44504 23 10.0262 23 11.7312C23 16.1751 19.3053 19.7312 14.8058 19.7312H8.16205L9.64018 20.963L8.35982 22.4994L5 19.6996V17.7312H14.8058C18.2527 17.7312 21 15.0193 21 11.7312Z\" fill=\"currentColor\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"attributes\": {\r\n\t\t\"can_have_children\": true,\r\n\t},\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": null,
    "childrenIdent": true,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Loop",
      "intent_keywords": [
        "loop",
        "statements_loop"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of loop",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 16,
    "uid": "0ffb56b7-10c5-46d1-9acc-9c612ed5814d",
    "packageName": "SmartBots",
    "actionName": "statements_for",
    "actionDescription": "For",
    "actionGroup": "Statements",
    "actionLabel": "For",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M16.3884 3L17.3913 3.97574C17.8393 4.41165 18.0633 4.62961 17.9844 4.81481C17.9056 5 17.5888 5 16.9552 5H9.19422C5.22096 5 2 8.13401 2 12C2 13.4872 2.47668 14.8662 3.2895 16\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n    <path d=\"M7.61156 21L6.60875 20.0243C6.16074 19.5883 5.93673 19.3704 6.01557 19.1852C6.09441 19 6.4112 19 7.04478 19H14.8058C18.779 19 22 15.866 22 12C22 10.5128 21.5233 9.13383 20.7105 8\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n    <path d=\"M9 12H15\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\n#endregion\n\n#region code\nfor {{counter}} in range({{start_from}}, {{end_to}}, {{step}}):  \n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{counter}} - from: {{start_from}}  to: {{end_to}}  step: {{step}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"counter\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Counter\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('counter', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${counter}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"start_from\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"From\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('start_from', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"0\",\n                    \"initialValue\": \"${start_from}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"end_to\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"To\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('end_to', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${end_to}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"step\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Step\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('step', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"1\",\n                    \"initialValue\": \"${step}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": true,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "For",
      "intent_keywords": [
        "for",
        "statements_for"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "counter",
          "start_from",
          "end_to"
        ],
        "optional_inputs": [
          "step"
        ],
        "input_types": {
          "counter": "string",
          "start_from": "string",
          "end_to": "string",
          "step": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of for",
        "output_variable": "counter"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 17,
    "uid": "6dc8d6f8-b489-41ad-a2e5-6f39230d5b6b",
    "packageName": "SmartBots",
    "actionName": "web_open_url",
    "actionDescription": "Open web page",
    "actionGroup": "Web",
    "actionLabel": "Open web page",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <ellipse cx=\"12\" cy=\"12\" rx=\"4\" ry=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M2 12H22\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\nfrom selenium import webdriver\n#endregion\n\n#region code\n{{handler}} = webdriver.Firefox()\n{{handler}}.get('{{url}}')\n#endregion\n\n#region requiredExtensions\nselenium\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"url\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Url web page\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('url', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${url}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": null\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Open web page",
      "intent_keywords": [
        "open",
        "web_open_url",
        "navigate",
        "browser",
        "web",
        "page",
        "click",
        "find",
        "scrape",
        "element"
      ],
      "use_cases": [
        "Automating url operations",
        "Processing url in workflows",
        "Managing url data efficiently",
        "Streamlining url tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "url"
        ],
        "optional_inputs": [
          "handler"
        ],
        "input_types": {
          "url": "string",
          "handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of open web page",
        "output_variable": "url"
      },
      "complexity_level": "intermediate",
      "dependencies": [
        "selenium_library"
      ],
      "typical_next_steps": [
        "web_navigate",
        "web_wait",
        "web_verify"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 18,
    "uid": "5fba0ded-0bae-46ad-a094-929ffa8a2389",
    "packageName": "SmartBots",
    "actionName": "web_close_url",
    "actionDescription": "Close web page",
    "actionGroup": "Web",
    "actionLabel": "Close web page",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <ellipse cx=\"12\" cy=\"12\" rx=\"4\" ry=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M2 12H22\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\nfrom selenium import webdriver\n#endregion\n\n#region code\n{{handler}}.quit()\n#endregion\n\n#region requiredExtensions\nselenium\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Close web page",
      "intent_keywords": [
        "navigate",
        "browser",
        "web_close_url",
        "web",
        "page",
        "click",
        "find",
        "scrape",
        "element",
        "close"
      ],
      "use_cases": [
        "Automating url operations",
        "Processing url in workflows",
        "Managing url data efficiently",
        "Streamlining url tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of close web page",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [
        "selenium_library"
      ],
      "typical_next_steps": [
        "web_navigate",
        "web_wait",
        "web_verify"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 19,
    "uid": "40702344-3fae-41db-b394-b7baf71def23",
    "packageName": "SmartBots",
    "actionName": "web_find_element",
    "actionDescription": "Locates and identifies element using specified criteria",
    "actionGroup": "Web",
    "actionLabel": "Find element",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <ellipse cx=\"12\" cy=\"12\" rx=\"4\" ry=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M2 12H22\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.by import By\r\nfrom selenium.webdriver.common.keys import Keys\n#endregion\n\n#region code\n{{result}} = {{handler}}.find_element(By.{{find_by}}, '{{find_value}}')\n#endregion\n\n#region requiredExtensions\nselenium \n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"find_by\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Find By\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('find_by', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${find_by}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"find_value\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Find Value\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('find_value', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${find_value}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Locates and identifies element using specified criteria",
      "intent_keywords": [
        "navigate",
        "select",
        "web_find_element",
        "identify",
        "browser",
        "web",
        "click",
        "locate",
        "find",
        "scrape",
        "search",
        "element"
      ],
      "use_cases": [
        "Finding login buttons for automation",
        "Locating form fields for data entry",
        "Searching for specific content on pages",
        "Identifying navigation elements"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "find_by",
          "find_value",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "find_by": "string",
          "find_value": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of find element",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [
        "selenium_library"
      ],
      "typical_next_steps": [
        "web_wait",
        "process",
        "web_navigate",
        "web_verify",
        "click",
        "interact",
        "extract"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 20,
    "uid": "8eb4cbdf-7cd9-4ec9-a609-2cfd521e0b64",
    "packageName": "SmartBots",
    "actionName": "web_execute_script",
    "actionDescription": "Execute script",
    "actionGroup": "Web",
    "actionLabel": "Execute script",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <ellipse cx=\"12\" cy=\"12\" rx=\"4\" ry=\"10\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M2 12H22\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Execute script",
      "intent_keywords": [
        "navigate",
        "web_execute_script",
        "browser",
        "web",
        "execute",
        "click",
        "find",
        "scrape",
        "element",
        "script"
      ],
      "use_cases": [
        "Automating script operations",
        "Processing script in workflows",
        "Managing script data efficiently",
        "Streamlining script tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of execute script",
        "output_variable": "result"
      },
      "complexity_level": "intermediate",
      "dependencies": [],
      "typical_next_steps": [
        "web_navigate",
        "web_wait",
        "web_verify"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 21,
    "uid": "317e9dd1-506b-466e-91b8-245cd3b7f20a",
    "packageName": "SmartBots",
    "actionName": "statements_try",
    "actionDescription": "Try",
    "actionGroup": "Statements",
    "actionLabel": "Try",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path opacity=\"0.4\" d=\"M7.00002 2H19L15.4 11H4.99994L9.49994 6.5L7.00002 2Z\" fill=\"currentColor\" />\r\n    <path d=\"M10.9999 22L19 2H7.00002L9.49994 6.5L4.99994 11H11.9999\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\r\n#endregion\r\n\r\n#region code\r\ntry:\r\n#endregion\r\n\r\n#region toString\r\n#endregion\r\n",
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": true,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Try",
      "intent_keywords": [
        "try",
        "statements_try"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of try",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 22,
    "uid": "2bfd6dc6-e0c4-468d-826c-c2a3a60234ee",
    "packageName": "SmartBots",
    "actionName": "statements_except",
    "actionDescription": "Except",
    "actionGroup": "Statements",
    "actionLabel": "Except",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path opacity=\"0.4\" d=\"M7.00002 2H19L15.4 11H4.99994L9.49994 6.5L7.00002 2Z\" fill=\"currentColor\" />\r\n    <path d=\"M10.9999 22L19 2H7.00002L9.49994 6.5L4.99994 11H11.9999\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"attributes\": {\r\n\t\t\"can_have_children\": true,\r\n\t},\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\r\n#endregion\r\n\r\n#region code\r\nexcept:\r\n#endregion\r\n\r\n#region toString\r\n#endregion\r\n",
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": true,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Except",
      "intent_keywords": [
        "statements_except",
        "except"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of except",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 23,
    "uid": "33e2b7bb-18d2-49b2-a8fd-fd362c70be30",
    "packageName": "SmartBots",
    "actionName": "statements_finally",
    "actionDescription": "Finally",
    "actionGroup": "Statements",
    "actionLabel": "Finally",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path opacity=\"0.4\" d=\"M7.00002 2H19L15.4 11H4.99994L9.49994 6.5L7.00002 2Z\" fill=\"currentColor\" />\r\n    <path d=\"M10.9999 22L19 2H7.00002L9.49994 6.5L4.99994 11H11.9999\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"attributes\": {\r\n\t\t\"can_have_children\": true,\r\n\t},\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\r\n#endregion\r\n\r\n#region code\r\nfinally:\r\n#endregion\r\n\r\n#region toString\r\n#endregion\r\n",
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": true,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Finally",
      "intent_keywords": [
        "finally",
        "statements_finally"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of finally",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 25,
    "uid": "56dcfe0a-c790-4020-a362-88a4489a235c",
    "packageName": "SmartBots",
    "actionName": "statements_exit",
    "actionDescription": "Exit",
    "actionGroup": "Statements",
    "actionLabel": "Exit",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.6 4C7.78858 4 4 7.64154 4 12C4 16.3585 7.78858 20 12.6 20C13.0301 20 13.4522 19.9707 13.8643 19.9142C14.4115 19.8393 14.9158 20.2221 14.9907 20.7693C15.0657 21.3164 14.6829 21.8208 14.1357 21.8957C13.6338 21.9645 13.121 22 12.6 22C6.80756 22 2 17.5827 2 12C2 6.41734 6.80756 2 12.6 2C13.121 2 13.6338 2.03552 14.1357 2.10427C14.6829 2.17922 15.0657 2.68355 14.9907 3.23073C14.9158 3.7779 14.4115 4.16072 13.8643 4.08576C13.4522 4.02931 13.0301 4 12.6 4Z\" fill=\"currentColor\" />\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.1173 8.57615C18.491 8.42137 18.9211 8.50692 19.2071 8.79292L21.7071 11.2929C22.0976 11.6834 22.0976 12.3166 21.7071 12.7071L19.2071 15.2071C18.9211 15.4931 18.491 15.5787 18.1173 15.4239C17.7436 15.2691 17.5 14.9045 17.5 14.5V13L11 13C10.4477 13 10 12.5523 10 12C10 11.4477 10.4477 11 11 11H17.5V9.50003C17.5 9.09557 17.7436 8.73093 18.1173 8.57615Z\" fill=\"currentColor\" />\r\n</svg>",
    "storageEntity": null,
    "info": "{\r\n\t\"properties\": [\r\n\t\t{\"name\": \"data\"}\r\n\t],\r\n\t\"code\": {\r\n\t\t\"imports\": [],\r\n\t\t\"template\": \"\"\r\n\t}\r\n}",
    "code": "#region import\r\n#endregion\r\n\r\n#region code\r\nexit({{status}}\r\n#endregion\r\n\r\n#region toString\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"status\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Status\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Exit",
      "intent_keywords": [
        "statements_exit",
        "exit"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [
          "status"
        ],
        "input_types": {
          "status": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of exit",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 26,
    "uid": "6fc0b24f-8853-45d2-a964-0941e4ea5081",
    "packageName": "SmartBots",
    "actionName": "excel_open_book",
    "actionDescription": "Open Excel Book",
    "actionGroup": "Excel",
    "actionLabel": "Open Excel Book",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport openpyxl\r\n#endregion\r\n\r\n#region code\r\n{{handler}} = openpyxl.load_workbook(f'{{filename}}')\r\n#endregion\r\n\r\n#region requiredExtensions\r\nopenpyxl\r\n#endregion\r\n\r\n#region toString\r\n({{handler}} - {{filename}}\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"handler\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Handler\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": null,\r\n                    \"initialValue\": \"${handler}\",\r\n                    \"content_sources\": null\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"filename\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Filename\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": null,\r\n                    \"initialValue\": \"${filename}\",\r\n                    \"content_sources\": [\r\n                        \"variable\",\r\n                        \"local_filename\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Open Excel Book",
      "intent_keywords": [
        "open",
        "write",
        "spreadsheet",
        "book",
        "excel_open_book",
        "excel",
        "xlsx",
        "xls",
        "load",
        "save",
        "read"
      ],
      "use_cases": [
        "Automating book operations",
        "Processing book in workflows",
        "Managing book data efficiently",
        "Streamlining book tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "filename"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "filename": "file_path"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of open excel book",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library",
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 27,
    "uid": "a541a153-ebd2-44d5-a53e-b629cd595f96",
    "packageName": "SmartBots",
    "actionName": "ui_interface_show_message",
    "actionDescription": "Show message",
    "actionGroup": "UI Interface",
    "actionLabel": "Show message",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M14.1706 20.8905C18.3536 20.6125 21.6856 17.2332 21.9598 12.9909C22.0134 12.1607 22.0134 11.3009 21.9598 10.4707C21.6856 6.22838 18.3536 2.84913 14.1706 2.57107C12.7435 2.47621 11.2536 2.47641 9.8294 2.57107C5.64639 2.84913 2.31441 6.22838 2.04024 10.4707C1.98659 11.3009 1.98659 12.1607 2.04024 12.9909C2.1401 14.536 2.82343 15.9666 3.62791 17.1746C4.09501 18.0203 3.78674 19.0758 3.30021 19.9978C2.94941 20.6626 2.77401 20.995 2.91484 21.2351C3.05568 21.4752 3.37026 21.4829 3.99943 21.4982C5.24367 21.5285 6.08268 21.1757 6.74868 20.6846C7.1264 20.4061 7.31527 20.2668 7.44544 20.2508C7.5756 20.2348 7.83177 20.3403 8.34401 20.5513C8.8044 20.7409 9.33896 20.8579 9.8294 20.8905C11.2536 20.9852 12.7435 20.9854 14.1706 20.8905Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M11.9953 12H12.0043M15.9908 12H15.9998M7.99982 12H8.00879\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 0,
    "canHaveChildren": null,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Show message",
      "intent_keywords": [
        "show",
        "message",
        "ui_interface_show_message"
      ],
      "use_cases": [
        "Automating show message operations",
        "Processing show message in workflows",
        "Managing show message data efficiently",
        "Streamlining show message tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of show message",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 28,
    "uid": "76ffbd69-952e-477a-a178-dcd35b530207",
    "packageName": "SmartBots",
    "actionName": "ui_show_message",
    "actionDescription": "Show message",
    "actionGroup": "UI Interface",
    "actionLabel": "Show message",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M14.1706 20.8905C18.3536 20.6125 21.6856 17.2332 21.9598 12.9909C22.0134 12.1607 22.0134 11.3009 21.9598 10.4707C21.6856 6.22838 18.3536 2.84913 14.1706 2.57107C12.7435 2.47621 11.2536 2.47641 9.8294 2.57107C5.64639 2.84913 2.31441 6.22838 2.04024 10.4707C1.98659 11.3009 1.98659 12.1607 2.04024 12.9909C2.1401 14.536 2.82343 15.9666 3.62791 17.1746C4.09501 18.0203 3.78674 19.0758 3.30021 19.9978C2.94941 20.6626 2.77401 20.995 2.91484 21.2351C3.05568 21.4752 3.37026 21.4829 3.99943 21.4982C5.24367 21.5285 6.08268 21.1757 6.74868 20.6846C7.1264 20.4061 7.31527 20.2668 7.44544 20.2508C7.5756 20.2348 7.83177 20.3403 8.34401 20.5513C8.8044 20.7409 9.33896 20.8579 9.8294 20.8905C11.2536 20.9852 12.7435 20.9854 14.1706 20.8905Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M11.9953 12H12.0043M15.9908 12H15.9998M7.99982 12H8.00879\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport tkinter as tk\r\nfrom tkinter import messagebox\r\n#endregion\r\n\r\n#region code\r\nmessagebox.showinfo(\"{{title}}\", f\"{{content}}\")\r\n#endregion\r\n\r\n#region toString\r\n{{title}} - {{content}}\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"title\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Title\"\r\n                    },\r\n                    \"initialValue\": \"${title}\"\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"content\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Content\"\r\n                    },\r\n                    \"initialValue\": \"${content}\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Show message",
      "intent_keywords": [
        "show",
        "message",
        "ui_show_message"
      ],
      "use_cases": [
        "Automating message operations",
        "Processing message in workflows",
        "Managing message data efficiently",
        "Streamlining message tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [
          "title",
          "content"
        ],
        "input_types": {
          "title": "string",
          "content": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of show message",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 30,
    "uid": "335005d4-ce86-4b6f-99b1-4046d5da2474",
    "packageName": "SmartBots",
    "actionName": "email_read_message",
    "actionDescription": "Reads data from message and loads it for processing",
    "actionGroup": "Email",
    "actionLabel": "Read message",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": null,
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"email\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Email\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('email', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": null,\r\n                    \"content_sources\": [\r\n                        \"variable\",\r\n                        \"local_filename\",\r\n                        \"cloud_filename\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"username\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Username\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('username', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": null,\r\n                    \"content_sources\": [\r\n                        \"variable\",\r\n                        \"local_filename\",\r\n                        \"cloud_filename\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Reads data from message and loads it for processing",
      "intent_keywords": [
        "retrieve",
        "load",
        "email_read_message",
        "fetch",
        "message",
        "import",
        "get",
        "read"
      ],
      "use_cases": [
        "Automating message operations",
        "Processing message in workflows",
        "Managing message data efficiently",
        "Streamlining message tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "email",
          "username"
        ],
        "optional_inputs": [],
        "input_types": {
          "email": "string",
          "username": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of read message",
        "output_variable": "email"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [
        "transform",
        "filter",
        "process",
        "analyze"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 31,
    "uid": "265141f6-fa82-41d8-afb1-021274bc4645",
    "packageName": "SmartBots",
    "actionName": "data_create_dataframe",
    "actionDescription": "Create dataframe",
    "actionGroup": "Data",
    "actionLabel": "Create dataframe",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M3 21H21V3H3V21Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M3 9L21 9\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M15 21L15 3\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M9 21L9 3\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport pandas as pd\r\n#endregion\r\n\r\n#region codeMethods\r\n#endregion\r\n\r\n#region code\r\n\r\n# Define the column names\r\n{{handler}}_column_names = \"{{column_names}}\".split(',')\r\n\r\n# Create an empty DataFrame with only column names\r\n{{handler}} = pd.DataFrame(columns={{handler}}_column_names)\r\n\r\n#endregion\r\n\r\n#region requiredExtensions\r\n#endregion\r\n\r\n#region toString\r\n{{handler}}: Column names: {{column_names}}\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"handler\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Handler\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"initialValue\": \"${handler}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"column_names\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Columns\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('columns', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"initialValue\": \"${column_names}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Create dataframe",
      "intent_keywords": [
        "filter",
        "merge",
        "data",
        "create",
        "transform",
        "data_create_dataframe",
        "process",
        "analyze",
        "dataframe"
      ],
      "use_cases": [
        "Automating dataframe operations",
        "Processing dataframe in workflows",
        "Managing dataframe data efficiently",
        "Streamlining dataframe tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "column_names"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "column_names": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of create dataframe",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [
        "pandas_library"
      ],
      "typical_next_steps": [
        "data_export",
        "data_analysis",
        "data_visualization"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Data format mismatch",
        "Memory insufficient for operation",
        "Column not found in dataset"
      ],
      "performance_notes": "Performance depends on data volume and complexity of operations"
    }
  },
  {
    "id": 32,
    "uid": "d6518cf3-f8f9-4b4a-8415-fb3a9b4d105e",
    "packageName": "SmartBots",
    "actionName": "excel_read_sheet_to_dataframe",
    "actionDescription": "Reads data from sheet to dataframe and loads it for processing",
    "actionGroup": "Excel",
    "actionLabel": "Read sheet to dataframe",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport pandas as pd\r\n#endregion\r\n\r\n#region codeMethods\r\n#endregion\r\n\r\n#region code\r\n\r\n# Lee la hoja de cálculo en un DataFrame de Pandas\r\n_tmp_excel_filename = {{excel_filename}}\r\n_tmp_sheet_name = {{sheet_name}}\r\nif _tmp_sheet_name is None or _tmp_sheet_name == '':\r\n  {{handler}} = pd.read_excel(_tmp_excel_filename)\r\nelse:\r\n  {{handler}} = pd.read_excel(_tmp_excel_filename, sheet_name=_tmp_sheet_name)\r\n\r\n#endregion\r\n\r\n#region requiredExtensions\r\n#endregion\r\n\r\n#region toString\r\n{{handler}} - {{excel_filename}} - {{sheet_name}}\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"handler\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Handler\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"initialValue\": \"${handler}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"excel_filename\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Excel filname\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('excel_filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${excel_filename}\",\r\n                    \"content_sources\": [\r\n                        \"variable\",\r\n                        \"local_filename\",\r\n                        \"cloud_filename\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"sheet_name\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Sheet name\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"initialValue\": \"${sheet_name}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": false,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Reads data from sheet to dataframe and loads it for processing",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "retrieve",
        "excel",
        "sheet",
        "xlsx",
        "xls",
        "load",
        "excel_read_sheet_to_dataframe",
        "fetch",
        "save",
        "to",
        "import",
        "get",
        "read",
        "dataframe"
      ],
      "use_cases": [
        "Reading financial reports and budgets",
        "Processing customer data from Excel files",
        "Importing inventory lists and product catalogs",
        "Loading sales data for analysis"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "excel_filename"
        ],
        "optional_inputs": [
          "sheet_name"
        ],
        "input_types": {
          "handler": "variable_name",
          "excel_filename": "file_path",
          "sheet_name": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of read sheet to dataframe",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library",
        "file_system_access"
      ],
      "typical_next_steps": [
        "data_transform",
        "filter",
        "transform",
        "data_filter",
        "data_analysis",
        "process",
        "analyze"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 33,
    "uid": "c641394c-5d94-4400-909f-3fde2042b7c4",
    "packageName": "SmartBots",
    "actionName": "data_concat_multi_dataframes",
    "actionDescription": "Concatenate multiple dataframes",
    "actionGroup": "Data",
    "actionLabel": "Concatenate multiple dataframes",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M3 21H21V3H3V21Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M3 9L21 9\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M15 21L15 3\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M9 21L9 3\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport pandas as pd\r\n#endregion\r\n\r\n#region codeMethods\r\n#endregion\r\n\r\n#region code\r\n\r\n# Crea un DataFrame de ejemplo\r\n_tmp_dataframes = [{{dataframes}}]\r\n\r\n{{#if direction == 'vertical'}}\r\n{{handler}} = pd.concat(_tmp_dataframes, axis=0, ignore_index=True)\r\n{{/if}}\r\n{{#if direction != 'vertical'}}\r\n{{handler}} = pd.concat(_tmp_dataframes, axis=1)\r\n{{/if}}\r\n\r\n#endregion\r\n\r\n#region requiredExtensions\r\n#endregion\r\n\r\n#region toString\r\n{{dataframes}}\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"handler\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Handler\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"initialValue\": \"${handler}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"dataframes\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Dataframes\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('dataframes', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${dataframes}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"direction\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Unit\"\r\n                    },\r\n                    \"items\": [\r\n                        \"horizontal\",\r\n                        \"vertical\"\r\n                    ],\r\n                    \"value\": \"horizontal\",\r\n                    \"initialValue\": \"${direction}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Concatenate multiple dataframes",
      "intent_keywords": [
        "filter",
        "merge",
        "multiple",
        "data",
        "dataframes",
        "data_concat_multi_dataframes",
        "concatenate",
        "transform",
        "process",
        "analyze",
        "dataframe"
      ],
      "use_cases": [
        "Combining monthly sales reports into yearly data",
        "Merging data from multiple departments",
        "Joining customer data from different sources",
        "Uniting regional performance reports"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "dataframes",
          "direction"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "dataframes": "string",
          "direction": "selection"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of concatenate multiple dataframes",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [
        "pandas_library"
      ],
      "typical_next_steps": [
        "data_export",
        "data_analysis",
        "data_visualization"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Data format mismatch",
        "Memory insufficient for operation",
        "Column not found in dataset"
      ],
      "performance_notes": "Memory usage increases with dataset size. Consider processing in batches for large datasets"
    }
  },
  {
    "id": 34,
    "uid": "7db1e1b2-ef2f-4764-8246-dd6cb024becb",
    "packageName": "SmartBots",
    "actionName": "excel_save_dataframe_excelfile",
    "actionDescription": "Save dataframe to excel file",
    "actionGroup": "Excel",
    "actionLabel": "Save dataframe to excel file",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport pandas as pd\r\n#endregion\r\n\r\n#region codeMethods\r\n#endregion\r\n\r\n#region code\r\n\r\n_tmp_dataframes = [{{dataframes}}]\r\n_tmp_sheet_names = [{{sheet_names}}]\r\n_tmp_excel_filename = f\"{{to_excel_filename}}\"\r\n_tmp_writer = pd.ExcelWriter(_tmp_excel_filename, engine='xlsxwriter')\r\n_tmp_i = 0\r\n\r\nfor df in _tmp_dataframes:\r\n  while len(_tmp_sheet_names) < (_tmp_i + 1):\r\n    _tmp_sheet_names.append(\"Sheet\" + str(_tmp_i + 1))\r\n  df.to_excel(_tmp_writer, sheet_name=_tmp_sheet_names[_tmp_i], index=False)\r\n  _tmp_i += 1\r\n\r\n# Guardar el archivo Excel\r\n_tmp_writer.close()\r\n#endregion\r\n\r\n#region requiredExtensions\r\n#endregion\r\n\r\n#region toString\r\n[{{dataframes}}]\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"dataframes\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Dataframes\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('dataframes', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"initialValue\": \"${dataframes}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"sheet_names\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Sheet names\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('sheet_names', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${sheet_names}\",\r\n                    \"content_sources\": null\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"to_excel_filename\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Excel filename\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('to_excel_filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${to_excel_filename}\",\r\n                    \"content_sources\": [\r\n                        \"variable\",\r\n                        \"local_filename\",\r\n                        \"cloud_filename\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Save dataframe to excel file",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "excel",
        "xlsx",
        "xls",
        "load",
        "file",
        "excel_save_dataframe_excelfile",
        "save",
        "to",
        "read",
        "dataframe"
      ],
      "use_cases": [
        "Exporting processed data to Excel reports",
        "Creating financial summaries for stakeholders",
        "Generating inventory reports for management",
        "Saving analysis results for archival"
      ],
      "input_requirements": {
        "required_inputs": [
          "dataframes",
          "to_excel_filename"
        ],
        "optional_inputs": [
          "sheet_names"
        ],
        "input_types": {
          "dataframes": "string",
          "sheet_names": "string",
          "to_excel_filename": "file_path"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of save dataframe to excel file",
        "output_variable": "dataframes"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library",
        "file_system_access"
      ],
      "typical_next_steps": [
        "file_backup",
        "notification_email"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 35,
    "uid": "58517358-9bb2-403b-94ef-73317a48b1c2",
    "packageName": "SmartBots",
    "actionName": "excel_merge_two_dataframes",
    "actionDescription": "Combines multiple two dataframes into a single result",
    "actionGroup": "Data",
    "actionLabel": "Merge two dataframes",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\r\n    <path d=\"M3 21H21V3H3V21Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\r\n    <path d=\"M3 9L21 9\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M15 21L15 3\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n    <path d=\"M9 21L9 3\" stroke=\"currentColor\" stroke-width=\"1.5\" />\r\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": null,
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"handler\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Handler\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"initialValue\": \"${handler}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"dataframes\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Dataframes\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('dataframes', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${dataframes}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"direction\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Unit\"\r\n                    },\r\n                    \"items\": [\r\n                        \"horizontal\",\r\n                        \"vertical\"\r\n                    ],\r\n                    \"value\": \"horizontal\",\r\n                    \"initialValue\": \"${direction}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Combines multiple two dataframes into a single result",
      "intent_keywords": [
        "excel_merge_two_dataframes",
        "filter",
        "merge",
        "join",
        "data",
        "combine",
        "unite",
        "dataframes",
        "concatenate",
        "transform",
        "two",
        "process",
        "analyze",
        "dataframe"
      ],
      "use_cases": [
        "Combining monthly sales reports into yearly data",
        "Merging data from multiple departments",
        "Joining customer data from different sources",
        "Uniting regional performance reports"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "dataframes",
          "direction"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "dataframes": "string",
          "direction": "selection"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of merge two dataframes",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [],
      "typical_next_steps": [
        "data_export",
        "data_visualization",
        "save",
        "data_analysis",
        "process",
        "analyze"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Data format mismatch",
        "Memory insufficient for operation",
        "Column not found in dataset"
      ],
      "performance_notes": "Memory usage increases with dataset size. Consider processing in batches for large datasets"
    }
  },
  {
    "id": 36,
    "uid": "0a9db572-740c-4ede-a20c-6f18ab7894a4",
    "packageName": "SmartBots",
    "actionName": "application_close",
    "actionDescription": "Close application",
    "actionGroup": "Application",
    "actionLabel": "Close application",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.25 7C3.25 4.92893 4.92893 3.25 7 3.25H17C19.0711 3.25 20.75 4.92893 20.75 7V17C20.75 19.0711 19.0711 20.75 17 20.75H7C4.92893 20.75 3.25 19.0711 3.25 17V7Z\" fill=\"currentColor\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{handler}}.kill(True)\n#endregion\n\n#region requiredExtensions\npywinauto 0.6.8\r\n#endregion\n\n#region toString\n({{handler}})\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Close application",
      "intent_keywords": [
        "application_close",
        "application",
        "close"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of close application",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 37,
    "uid": "d99cd5f3-6080-4386-a4dd-4a288c77b4ad",
    "packageName": "SmartBots",
    "actionName": "application_focus",
    "actionDescription": "Focus to application",
    "actionGroup": "Application",
    "actionLabel": "Focus to application",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.49992 1.49983L8.99992 1.49976C9.55221 1.49975 9.99993 1.94745 9.99994 2.49974C9.99995 3.05202 9.55224 3.49975 8.99995 3.49976L4.49995 3.49983C3.94767 3.49984 3.49996 3.94756 3.49997 4.49985L3.50003 7.99974C3.50004 8.55202 3.05233 8.99975 2.50005 8.99976C1.94776 8.99977 1.50004 8.55206 1.50003 7.99977L1.49997 4.49988C1.49994 2.84303 2.84307 1.49986 4.49992 1.49983ZM19.5 3.49982L15.0001 3.49996C14.4478 3.49998 14 3.05228 14 2.5C14 1.94771 14.4477 1.49998 15 1.49996L19.4999 1.49982C21.1568 1.49977 22.5 2.84293 22.5 4.49982V7.99976C22.5 8.55204 22.0523 8.99976 21.5 8.99976C20.9477 8.99976 20.5 8.55204 20.5 7.99976V4.49982C20.5 3.94752 20.0523 3.4998 19.5 3.49982ZM2.50147 14.9998C3.05375 14.9998 3.50147 15.4475 3.50147 15.9998V19.4998C3.50147 20.0521 3.94916 20.4998 4.50143 20.4998L8.99997 20.5C9.55225 20.5 9.99996 20.9477 9.99994 21.5C9.99992 22.0523 9.55219 22.5 8.9999 22.5L4.50137 22.4998C2.84455 22.4998 1.50147 21.1566 1.50147 19.4998V15.9998C1.50147 15.4475 1.94918 14.9998 2.50147 14.9998ZM21.5 14.9998C22.0523 14.9998 22.5 15.4475 22.5 15.9998V19.5C22.5 21.1568 21.1569 22.5 19.5 22.5H15C14.4477 22.5 14 22.0523 14 21.5C14 20.9477 14.4477 20.5 15 20.5H19.5C20.0523 20.5 20.5 20.0523 20.5 19.5V15.9998C20.5 15.4475 20.9477 14.9998 21.5 14.9998Z\" fill=\"currentColor\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.24997 12C7.24997 9.37665 9.37662 7.25 12 7.25C14.6233 7.25 16.75 9.37665 16.75 12C16.75 14.6234 14.6233 16.75 12 16.75C9.37662 16.75 7.24997 14.6234 7.24997 12Z\" fill=\"currentColor\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{handler}}.window().set_focus()\n#endregion\n\n#region requiredExtensions\npywinauto 0.6.8#endregion\n\n#region toString\n({{handler}})\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Focus to application",
      "intent_keywords": [
        "application_focus",
        "application",
        "focus",
        "to"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of focus to application",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 38,
    "uid": "87e15943-ef5a-4e53-b0d2-1a09ccd2d4cb",
    "packageName": "SmartBots",
    "actionName": "application_image_click",
    "actionDescription": "Click on image",
    "actionGroup": "Application",
    "actionLabel": "Click on image",
    "actionIcon": "<?xml version=\"1.0\" ?><svg height=\"48px\" version=\"1.1\" viewBox=\"0 0 48 48\" width=\"48px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title/><g fill=\"none\" fill-rule=\"evenodd\" id=\"arrow-cursor-click\" stroke=\"none\" stroke-width=\"1\"><path d=\"M17.5327561,33.3220023 L17.5099541,33.3993588 C17.4393958,33.7340104 17.7285288,34.0521421 18.0821995,33.993197 L23.5,33.09 L23.5,43.5 C23.5,43.7761424 23.7238576,44 24,44 L28,44 L28.0898756,43.9919443 C28.3231248,43.9496084 28.5,43.7454599 28.5,43.5 L28.5,33.09 L33.9178005,33.993197 C34.2986766,34.0566763 34.6047043,33.6828359 34.4672439,33.3220023 L26.4672439,12.3220023 C26.3036871,11.8926659 25.6963129,11.8926659 25.5327561,12.3220023 L17.5327561,33.3220023 Z\" fill=\"#000000\" fill-rule=\"nonzero\" id=\"Path\" transform=\"translate(26.000000, 28.000000) rotate(-20.000000) translate(-26.000000, -28.000000) \"/><line id=\"Path-29\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(24.405740, 14.160680) rotate(-15.000000) translate(-24.405740, -14.160680) \" x1=\"22.9057398\" x2=\"25.4367287\" y1=\"13.1606804\" y2=\"14.8817558\"/><line id=\"Path-29\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(24.004330, 11.212735) rotate(-15.000000) translate(-24.004330, -11.212735) \" x1=\"22.5043302\" x2=\"25.131432\" y1=\"11.3212896\" y2=\"10.2592254\"/><line id=\"Path-29\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(21.710780, 9.056948) rotate(-15.000000) translate(-21.710780, -9.056948) \" x1=\"20.7107804\" x2=\"21.7640552\" y1=\"10.3737979\" y2=\"7.79553369\"/><line id=\"Path-29\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(17.061579, 13.109654) rotate(-15.000000) translate(-17.061579, -13.109654) \" x1=\"15.7529031\" x2=\"18.405156\" y1=\"12.5042563\" y2=\"13.2149253\"/><line id=\"Path-29\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(18.298616, 15.842361) rotate(-15.000000) translate(-18.298616, -15.842361) \" x1=\"16.9550266\" x2=\"19.5722523\" y1=\"16.3534171\" y2=\"14.8423611\"/><line id=\"Path-29\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(18.127455, 10.024819) rotate(-15.000000) translate(-18.127455, -10.024819) \" x1=\"17.3889055\" x2=\"18.792176\" y1=\"8.90407877\" y2=\"11.3346146\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport pyautogui\n#endregion\r\n\r\n#region code_add:find_image\r\nimport pyautogui\r\nimport time\r\n\r\ndef find_pos_image(image, confidence=0.9, min_confidence=None, interval=0.2):\r\n  n = 0\r\n  c = confidence\r\n  pos = None\r\n  while n < 8:\r\n    try:\r\n      pos = pyautogui.locateCenterOnScreen(str(image), grayscale=False, confidence=c)\r\n      if not pos is None:\r\n        break\r\n    except Exception as e:\r\n      print(str(e))    \n      pos = None\r\n    if pos is None:\r\n      time.sleep(interval)\r\n      c -= 0.03\r\n      if not min_confidence is None and c < min_confidence:\r\n        break\r\n    else:\r\n      break\r\n    n += 1\r\n  return pos\r\n    \r\ndef find_image(image_s, how_many=\"first\"):\r\n  r = None  \r\n  list = image_s.split(\"|\")\r\n  for img in list:\r\n    pos_img = find_pos_image(img)\r\n    if not pos_img is None:\r\n      if how_many == 'first':\r\n        return pos_img\r\n      if r is None:\r\n        r = []\r\n      r.add(pos_img)                                      \r\n  return r\r\n#endregion\r\n\r\n#region code\r\n_temp_pos = find_image.find_image(\"{{image}}\")\nif _temp_pos is None:\n  {{result}} = False\n  raise Exception(\"Image not found: {{image}}\")  \nelse:\n  pyautogui.click(_temp_pos.x, _temp_pos.y)  \n  {{result}} = True      \n#endregion\r\n\r\n#region requiredExtensions\r\npyscreeze\npyautogui\n#endregion\r\n\r\n#region toString\r\n{{image}}\r\n#endregion\r\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"image\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Image\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('image', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${image}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Set result to\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Click on image",
      "intent_keywords": [
        "on",
        "click",
        "application_image_click",
        "image"
      ],
      "use_cases": [
        "Automating click operations",
        "Processing click in workflows",
        "Managing click data efficiently",
        "Streamlining click tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "image"
        ],
        "optional_inputs": [
          "result"
        ],
        "input_types": {
          "image": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of click on image",
        "output_variable": "image"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pyautogui_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 39,
    "uid": "88e942b7-0d9d-4258-8762-603735db5705",
    "packageName": "SmartBots",
    "actionName": "application_find_image",
    "actionDescription": "Locates and identifies image using specified criteria",
    "actionGroup": "Application",
    "actionLabel": "Find image",
    "actionIcon": "<?xml version=\"1.0\" ?><svg height=\"309\" version=\"1.1\" width=\"338\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"dp_dp001\" transform=\"matrix(1,0,0,1,-641.856,-1186.58)\"><path d=\"M 904.82,1321.71 C 904.82,1392.84 847.217,1450.49 776.163,1450.49 C 705.107,1450.49 647.504,1392.84 647.504,1321.71 C 647.504,1250.58 705.107,1192.93 776.163,1192.93 C 847.217,1192.93 904.82,1250.58 904.82,1321.71 Z \" fill=\"none\" fill-rule=\"evenodd\" id=\"dp_path002\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\"/><path d=\"M 878.919,1403.78 L 970.928,1487.07\" fill=\"none\" fill-rule=\"evenodd\" id=\"dp_path003\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"17.3333\"/><path d=\"M 740.647,1271.48 C 747.827,1271.48 753.647,1277.3 753.647,1284.48 C 753.647,1291.66 747.827,1297.48 740.647,1297.48 C 733.467,1297.48 727.647,1291.66 727.647,1284.48 C 727.647,1277.3 733.467,1271.48 740.647,1271.48 Z \" fill=\"white\" fill-rule=\"evenodd\" id=\"dp_path004\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\"/><path d=\"M 775.373,1356.03 L 808.523,1292.6 L 847.405,1371.21\" fill=\"none\" fill-rule=\"evenodd\" id=\"dp_path005\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\"/><path d=\"M 727.647,1371.21 L 754.224,1320.21 L 779.647,1371.21\" fill=\"none\" fill-rule=\"evenodd\" id=\"dp_path006\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\"/><path d=\"M 847.404,1252.03 L 704.92,1252.03 L 704.92,1391.39 L 847.404,1391.39\" fill=\"none\" fill-rule=\"evenodd\" id=\"dp_path007\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code_add:find_image\nimport pyautogui\nimport time\n\ndef find_pos_image(image, confidence=0.9, min_confidence=None, interval=0.2):\n  n = 0\n  c = confidence\n  pos = None\n  while n < 8:\n    try:\n      pos = pyautogui.locateCenterOnScreen(str(image), grayscale=False, confidence=c)\n      if not pos is None:\n        break\n    except:\n      pos = None\n    if pos is None:\n      time.sleep(interval)\n      c -= 0.03\n      if not min_confidence is None and c < min_confidence:\n        break\n    else:\n      break\n   n += 1\n  return pos\n    \ndef find_image(image_s, how_many=\"first\"):\n  r = None  \n  list = image_s.split(\"|\")\n  for img in list:\n    pos_img = find_pos_image(img)\n    if not pos_img is None:\n      if how_many == 'first':\n        return pos_img\n      if r is None:\n        r = []\n      r.add(pos_img)                                      \n  return r\n#endregion\n\n#region code\n{{result}} = find_image.find_image(\"{{image}}\", \"{{how_many}}\")\n#endregion\n\n#region requiredExtensions\npyscreeze\npyautogui\n#endregion\n\n#region toString\n{{how_many}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"image\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Image\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('image', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${image}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"dropdown_button_form_field\",\n                \"id\": \"how_many\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"How Many\"\n                    },\n                    \"items\": [\n                        \"first\",\n                        \"all\"\n                    ],\n                    \"validators\": [\n                        {\n                            \"type\": \"required\"\n                        }\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Set result to\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Locates and identifies image using specified criteria",
      "intent_keywords": [
        "image",
        "select",
        "application_find_image",
        "locate",
        "find",
        "identify",
        "search"
      ],
      "use_cases": [
        "Automating image operations",
        "Processing image in workflows",
        "Managing image data efficiently",
        "Streamlining image tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "image",
          "how_many",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "image": "string",
          "how_many": "selection",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of find image",
        "output_variable": "image"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pyautogui_library"
      ],
      "typical_next_steps": [
        "extract",
        "click",
        "interact",
        "process"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 40,
    "uid": "df4b0030-2fc2-4d8b-a0de-53903c48b9c8",
    "packageName": "SmartBots",
    "actionName": "application_set_mouse_pos",
    "actionDescription": "Set mouse position",
    "actionGroup": "Application",
    "actionLabel": "Set mouse position",
    "actionIcon": "<?xml version=\"1.0\" ?><svg enable-background=\"new 0 0 52 52\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 52 52\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g><g><g><g><path d=\"M13.5333815,25.325386c-0.3583984-3.6289063,0.7319336-6.871582,3.0703115-9.1318359      c2.3623047-2.2836914,5.6875-3.2724609,9.3686523-2.7817383l-0.2636719,1.9824219      c-3.0649414-0.4072266-5.8012695,0.3876953-7.7148438,2.2373047c-1.8901367,1.8266602-2.7670889,4.4892578-2.4702139,7.4975586      L13.5333815,25.325386z\"/></g></g><g><g><path d=\"M7.5387526,24.8102493c-0.199707-4.9760742,1.5571289-9.5195313,4.9458008-12.7929688      c3.4077148-3.2905273,8.0454092-4.898438,13.0546865-4.5209966l-0.1494141,1.9941411      c-4.4414063-0.331543-8.5244141,1.0756836-11.515624,3.965332c-2.9731445,2.8720703-4.5136719,6.8759766-4.3374023,11.2744141      L7.5387526,24.8102493z\"/></g></g><g><g><path d=\"M2.0084791,23.8810501c-0.1811523-6.2094727,2.0717773-11.9008789,6.34375-16.0268555      c4.2900391-4.144043,10.0878897-6.2084961,16.3393555-5.8071289L24.5636539,4.043159      c-5.6762695-0.3632813-10.940917,1.5009766-14.8222647,5.2495122      c-3.8618164,3.7299805-5.8984375,8.8901367-5.7338867,14.5297852L2.0084791,23.8810501z\"/></g></g></g><g><g><g><path d=\"M39.405941,50.0021439c-0.918457,0-1.8740234-0.0898438-2.8583984-0.2724609      c-4.1362305-0.765625-8.3105488-3.0839844-11.7534199-6.5268555c-7.2050781-7.2045898-8.937499-17.1953125-3.8623047-22.2705078      c2.5092773-2.5097656,6.2446289-3.4570313,10.5175781-2.6645508c4.1362324,0.765625,8.3100605,3.0839844,11.7529316,6.5268555      l0,0l0,0c3.4428711,3.4428711,5.7612305,7.6166992,6.5268555,11.7529297      c0.7915039,4.2729492-0.1547852,8.0083008-2.6645508,10.5175781      C45.1334801,48.9967728,42.4757652,50.0021439,39.405941,50.0021439z M28.6012516,19.9962845      c-2.5395508,0-4.7089844,0.8037109-6.2553711,2.3500977c-4.2954102,4.2954102-2.5625,13.0170898,3.8623047,19.4423828      c3.159668,3.159668,6.9609394,5.2817383,10.7036152,5.9746094c3.6064453,0.6674805,6.7089844-0.0825195,8.7387695-2.1123047      s2.7797852-5.1337891,2.1123047-8.7392578c-0.6928711-3.7421875-2.8149414-7.543457-5.9746094-10.703125l0,0      c-3.159668-3.159668-6.9609375-5.2817383-10.7031269-5.9746094      C30.2262516,20.0748978,29.3956852,19.9962845,28.6012516,19.9962845z\"/></g></g><g><g><path d=\"M20.2369938,34.8082962l-0.5820313-1.9135742c0.1015625-0.03125,10.2011719-3.230957,13.2387714-13.2387695      l1.9140625,0.5810547C31.4533024,31.2882767,20.6935368,34.6696243,20.2369938,34.8082962z\"/></g></g><g><g><rect height=\"9.7669125\" transform=\"matrix(0.7071068 -0.7071068 0.7071068 0.7071068 -10.3937902 25.0921211)\" width=\"1.9997864\" x=\"24.0920811\" y=\"20.2090187\"/></g></g></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport pyautogui\nimport time\n#endregion\n\n#region code\npyautogui.moveTo({{pos_x}}, {{pos_y}})\ntime.sleep(0.25)\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\nx: {{pos_x}}, y: {{pos_y}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"pos_x\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Position X\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('pos_x', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${pos_x}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"pos_y\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Position Y\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('pos_y', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${pos_y}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Set mouse position",
      "intent_keywords": [
        "application_set_mouse_pos",
        "mouse",
        "set",
        "position"
      ],
      "use_cases": [
        "Automating mouse pos operations",
        "Processing mouse pos in workflows",
        "Managing mouse pos data efficiently",
        "Streamlining mouse pos tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "pos_x",
          "pos_y"
        ],
        "optional_inputs": [],
        "input_types": {
          "pos_x": "string",
          "pos_y": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of set mouse position",
        "output_variable": "pos_x"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pyautogui_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 41,
    "uid": "bbcfc869-7f38-4b50-8e4e-f6513e440fcf",
    "packageName": "SmartBots",
    "actionName": "statements_section",
    "actionDescription": "Section",
    "actionGroup": "Statements",
    "actionLabel": "Section",
    "actionIcon": "<?xml version=\"1.0\" ?><svg id=\"Layer_1\" style=\"enable-background:new 0 0 48 48;\" version=\"1.1\" viewBox=\"0 0 48 48\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g><path d=\"M24,16c-2.2,0-4,1.8-4,4s1.8,4,4,4s4-1.8,4-4S26.2,16,24,16z M24,22c-1.1,0-2-0.9-2-2s0.9-2,2-2s2,0.9,2,2S25.1,22,24,22z\"/><path d=\"M13,16c-2.2,0-4,1.8-4,4s1.8,4,4,4s4-1.8,4-4S15.2,16,13,16z M13,22c-1.1,0-2-0.9-2-2s0.9-2,2-2s2,0.9,2,2S14.1,22,13,22z\"/><path d=\"M35,16c-2.2,0-4,1.8-4,4s1.8,4,4,4s4-1.8,4-4S37.2,16,35,16z M35,22c-1.1,0-2-0.9-2-2s0.9-2,2-2s2,0.9,2,2S36.1,22,35,22z\"/><path d=\"M43,6H5C3.3,6,2,7.3,2,9v22c0,1.7,1.3,3,3,3h11.5l7.5,8.5l7.5-8.5H43c1.7,0,3-1.3,3-3V9C46,7.3,44.7,6,43,6z M44,31   c0,0.6-0.4,1-1,1H30.5L24,39.5L17.5,32H5c-0.6,0-1-0.4-1-1V9c0-0.6,0.4-1,1-1h38c0.6,0,1,0.4,1,1V31z\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n# // region - {{comments}}\n#endregion\n\n#region code_end\n# // endregion - {{comments}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{comments}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"comments\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Comments\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('comments', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${comments}\",\n                    \"content_sources\": null\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": false,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Section",
      "intent_keywords": [
        "section",
        "statements_section"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [
          "comments"
        ],
        "input_types": {
          "comments": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of section",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 42,
    "uid": "00da1ade-2203-407b-bedd-44f57591e031",
    "packageName": "SmartBots",
    "actionName": "scripts_python_script",
    "actionDescription": "Python Script",
    "actionGroup": "Scripts",
    "actionLabel": "Python Script",
    "actionIcon": "<?xml version=\"1.0\" ?><!DOCTYPE svg  PUBLIC '-//W3C//DTD SVG 1.1//EN'  'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'><svg height=\"512px\" style=\"enable-background:new 0 0 512 512;\" version=\"1.1\" viewBox=\"0 0 512 512\" width=\"512px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"comp_x5F_267-python\"><g><path d=\"M477.564,199.009c-7.906-31.726-22.895-55.649-54.827-55.649h-41.172v48.668c0,37.784-32.036,69.612-68.588,69.612    H203.322c-29.982,0-54.829,25.671-54.829,55.754v104.523c0,29.773,25.874,47.228,54.829,55.752    c34.703,10.164,68.072,12.013,109.655,0c27.621-8.011,54.83-24.128,54.83-55.752v-41.789H258.255v-13.965h164.482    c31.933,0,43.739-22.28,54.827-55.649C489.064,276.117,488.552,243.056,477.564,199.009L477.564,199.009z M319.857,407.951    c11.397,0,20.638,9.345,20.638,20.845c0,11.6-9.24,20.945-20.638,20.945c-11.293,0-20.638-9.446-20.638-20.945    C299.322,417.192,308.564,407.951,319.857,407.951z M198.291,247.883h109.656c30.495,0,54.83-25.156,54.83-55.754V87.504    c0-29.774-25.054-52.055-54.83-57.087c-36.756-6.058-76.697-5.75-109.656,0.102c-46.409,8.215-54.828,25.362-54.828,57.089v41.788    h109.758v13.964H102.29c-31.931,0-59.86,19.199-68.587,55.649c-10.063,41.789-10.472,67.868,0,111.505    c7.803,32.446,26.387,55.649,58.318,55.649h37.682V316.06C129.704,279.815,161.02,247.883,198.291,247.883L198.291,247.883z     M191.411,101.468c-11.396,0-20.637-9.343-20.637-20.843c0.103-11.603,9.241-20.945,20.637-20.945    c11.295,0,20.638,9.445,20.638,20.945S202.809,101.468,191.411,101.468z\"/></g></g><g id=\"Layer_1\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{script_python}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"script_python\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Script Python\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('script_python', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${script_python}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ],\n\"maxLines\": \"10\"                    \n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Python Script",
      "intent_keywords": [
        "scripts_python_script",
        "script",
        "python"
      ],
      "use_cases": [
        "Automating script operations",
        "Processing script in workflows",
        "Managing script data efficiently",
        "Streamlining script tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [
          "script_python"
        ],
        "input_types": {
          "script_python": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of python script",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 43,
    "uid": "0f4eaedb-03b1-4d55-aacd-f7f11feec13b",
    "packageName": "SmartBots",
    "actionName": "ai_extract_data_pdf",
    "actionDescription": "Extract data from PDF",
    "actionGroup": "AI",
    "actionLabel": "Extract data from PDF",
    "actionIcon": "<?xml version=\"1.0\" ?><svg id=\"Layer_1\" style=\"enable-background:new 0 0 512 512;\" version=\"1.1\" viewBox=\"0 0 512 512\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g><path d=\"M246.8,44.8L224.5,6H113.4v38.8H77v354.3L184.6,506H435V44.8H246.8z M128.6,140.5c3.3-4.3,9-4.7,12.7-0.9l17.9,18.2V75.2   c0-5.7,4-10.4,9-10.4s9,4.6,9,10.4v82.6l17.9-18.2c3.7-3.8,9.4-3.4,12.7,0.9c3.3,4.3,3,10.8-0.8,14.6l-32.8,33.4c0,0,0,0,0,0   l-0.1,0.1c-0.2,0.2-0.4,0.4-0.7,0.6c-0.1,0.1-0.2,0.1-0.2,0.2c-0.2,0.1-0.3,0.3-0.5,0.4c-0.1,0.1-0.2,0.1-0.3,0.2   c-0.2,0.1-0.3,0.2-0.5,0.3c-0.1,0.1-0.2,0.1-0.3,0.1c-0.2,0.1-0.4,0.2-0.5,0.2c-0.1,0-0.2,0.1-0.3,0.1c-0.2,0.1-0.4,0.1-0.6,0.2   c-0.1,0-0.2,0.1-0.3,0.1c-0.2,0-0.4,0.1-0.6,0.1c-0.1,0-0.2,0-0.2,0c-0.3,0-0.6,0.1-0.9,0.1c0,0,0,0,0,0s0,0,0,0   c-0.3,0-0.6,0-0.9-0.1c-0.1,0-0.2,0-0.2,0c-0.2,0-0.4-0.1-0.6-0.1c-0.1,0-0.2,0-0.3-0.1c-0.2-0.1-0.4-0.1-0.6-0.2   c-0.1,0-0.2-0.1-0.3-0.1c-0.2-0.1-0.4-0.1-0.5-0.2c-0.1,0-0.2-0.1-0.3-0.1c-0.2-0.1-0.3-0.2-0.5-0.3c-0.1-0.1-0.2-0.1-0.3-0.2   c-0.2-0.1-0.4-0.3-0.5-0.4c-0.1-0.1-0.2-0.1-0.2-0.2c-0.2-0.2-0.5-0.4-0.7-0.6l-0.1-0.1c0,0,0,0,0,0l-32.8-33.4   C125.6,151.3,125.3,144.8,128.6,140.5z M415.9,486.9H193.6v-97.1H96.1V63.9h17.3v121.5l55.5,50.3l55.5-50.3V63.9h191.4V486.9z\"/><rect height=\"21.3\" width=\"132.6\" x=\"256\" y=\"114.5\"/><rect height=\"21.3\" width=\"132.6\" x=\"256\" y=\"187.1\"/><rect height=\"21.3\" width=\"267\" x=\"121.6\" y=\"332.4\"/><rect height=\"21.3\" width=\"267\" x=\"121.6\" y=\"259.7\"/><path d=\"M254.9,394.6h-22.4v58.5h9.8v-22.2h12.7c6.5,0,11.5-1.7,15.2-5c3.7-3.3,5.5-7.7,5.5-13.2c0-5.4-1.8-9.8-5.5-13.2   C266.4,396.2,261.4,394.6,254.9,394.6z M263.1,420.2c-1.8,1.9-4.5,2.9-8.2,2.9h-12.7v-20.7h12.7c3.6,0,6.3,1,8.2,3   c1.8,2,2.7,4.5,2.7,7.4C265.8,415.8,264.9,418.2,263.1,420.2z\"/><path d=\"M306.7,394.6h-19.3v58.5h19.3c7.4,0,13.5-2.3,18.1-6.9c4.6-4.6,7-10.6,7-17.9v-8.9c0-7.3-2.3-13.3-7-17.9   C320.2,396.9,314.1,394.6,306.7,394.6z M322,428.3c0,5-1.4,9.1-4.1,12.2c-2.8,3.2-6.5,4.8-11.2,4.8h-9.6v-42.9h9.6   c4.7,0,8.4,1.6,11.2,4.8c2.8,3.2,4.1,7.2,4.1,12.2V428.3z\"/><polygon points=\"345,453.1 354.8,453.1 354.8,428.1 378.4,428.1 378.4,420.3 354.8,420.3 354.8,402.4 382.5,402.4 382.5,394.6    345,394.6  \"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport json\n#endregion\n\n#region code_add:gen_vertexai\nimport base64\nimport vertexai\nfrom vertexai.generative_models import GenerativeModel, Part, SafetySetting\n\ndef generate(pdfInputB64, text1):\n    vertexai.init(project=\"smart-bots-441417\", location=\"us-central1\")\n    model = GenerativeModel(\n        \"gemini-2.0-flash-001\",\n    )\n\n    document1 = Part.from_data(\n        mime_type=\"application/pdf\",\n        data=base64.b64decode(pdfInputB64),\n    )\n    generation_config = {\n        \"max_output_tokens\": 8192,\n        \"temperature\": 0,\n        \"top_p\": 0.95,\n    }\n    safety_settings = [\n        SafetySetting(\n          category=SafetySetting.HarmCategory.HARM_CATEGORY_HATE_SPEECH,\n          threshold=SafetySetting.HarmBlockThreshold.OFF\n        ),\n        SafetySetting(\n          category=SafetySetting.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\n          threshold=SafetySetting.HarmBlockThreshold.OFF\n        ),\n        SafetySetting(\n          category=SafetySetting.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,\n          threshold=SafetySetting.HarmBlockThreshold.OFF\n        ),\n        SafetySetting(\n          category=SafetySetting.HarmCategory.HARM_CATEGORY_HARASSMENT,\n          threshold=SafetySetting.HarmBlockThreshold.OFF\n        ),\n    ]\n\n    responses = model.generate_content(\n        [document1, text1],\n        generation_config=generation_config,\n        safety_settings=safety_settings,\n        stream=True,\n    )\n\n    r = \"\"\n    for response in responses:\n        print(response.text, end=\"\")\n        r += response.text\n\n    return r\n#endregion\n\n#region code\n_temp_text1 = f\"\"\"\nYou are a document entity extraction specialist. Given a document, your task is to extract the text value of the following entities: \n{{entities_json}}\n\"\"\"\n_temp_s = gen_vertexai.generate({{pdf_input}}, _temp_text1)\n_temp_s = _temp_s.replace(\"```json\", \"\").replace(\"```\", \"\")\n{{result}} = json.loads(_temp_s)\n#endregion\n\n#region requiredExtensions\nvertexai\n#endregion\n\n#region toString\n{{pdf_input}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"pdf_input\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"PDF Input\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('pdf_input', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${pdf_input}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"entities_json\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Entities to extract (JSON)\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('entities_json', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${entities_json}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ], \"maxLines\": \"10\"\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Extract data from PDF",
      "intent_keywords": [
        "pdf",
        "from",
        "data",
        "ai_extract_data_pdf",
        "extract"
      ],
      "use_cases": [
        "Automating data pdf operations",
        "Processing data pdf in workflows",
        "Managing data pdf data efficiently",
        "Streamlining data pdf tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "pdf_input",
          "entities_json",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "pdf_input": "string",
          "entities_json": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of extract data from pdf",
        "output_variable": "pdf_input"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 44,
    "uid": "62efa778-7d4f-4223-846e-6b87c2611281",
    "packageName": "SmartBots",
    "actionName": "convert_file_to_base64",
    "actionDescription": "Convert file to base64",
    "actionGroup": "Convert",
    "actionLabel": "Convert file to base64",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g data-name=\"transition, conversion, convert, transfer, motion, split, slide\" id=\"transition_conversion_convert_transfer_motion_split_slide\"><path d=\"M14,19a1,1,0,0,0-1,1v4H4V8h9v4a1,1,0,0,0,2,0V7a1,1,0,0,0-1-1H3A1,1,0,0,0,2,7V25a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V20A1,1,0,0,0,14,19Z\"/><path d=\"M29,6H18a1,1,0,0,0-1,1v5a1,1,0,0,0,2,0V8h9V24H19V20a1,1,0,0,0-2,0v5a1,1,0,0,0,1,1H29a1,1,0,0,0,1-1V7A1,1,0,0,0,29,6Z\"/><path d=\"M7,16a1,1,0,0,0,1,1H22.59l-.3.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0l2-2a1,1,0,0,0,0-1.42l-2-2a1,1,0,0,0-1.42,1.42l.3.29H8A1,1,0,0,0,7,16Z\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport base64\n#endregion\n\n#region code\nwith open(f\"{{filename}}\", \"rb\") as file:\r\n    {{result}} = base64.b64encode(file.read())\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{filename}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Convert file to base64",
      "intent_keywords": [
        "convert_file_to_base64",
        "file",
        "to",
        "base64",
        "convert"
      ],
      "use_cases": [
        "Automating to base64 operations",
        "Processing to base64 in workflows",
        "Managing to base64 data efficiently",
        "Streamlining to base64 tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "filename",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "filename": "file_path",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of convert file to base64",
        "output_variable": "filename"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 45,
    "uid": "0a4a429b-d93f-4ffc-b22e-cf71f7c7ea5a",
    "packageName": "SmartBots",
    "actionName": "files_save_text_to_file",
    "actionDescription": "Save text to file",
    "actionGroup": "Files",
    "actionLabel": "Save text to file",
    "actionIcon": "<?xml version=\"1.0\" ?><svg height=\"1792\" viewBox=\"0 0 1792 1792\" width=\"1792\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M512 1536h768v-384h-768v384zm896 0h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zm-384-928v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zm640 32v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{#if create_append == 'create'}}\r\n_temp_mode = \"w\"\n{{/if}}\r\n{{#if create_append == 'append'}}\r\n_temp_mode = \"a\"\n{{/if}}\n_temp_file = open(f\"{{filename}}\", _temp_mode)\r\n_temp_file.write(f\"{{source}}\")\r\n_temp_file.close()\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{filename}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"create_append\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Create/Append\"\r\n                    },\r\n                    \"items\": [\r\n                        \"create\",\r\n                        \"append\"\r\n                    ],\r\n                    \"initialValue\": \"${create_append}\",\r\n                    \"value\": \"${create_append}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n            \n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Save text to file",
      "intent_keywords": [
        "file",
        "save",
        "to",
        "text",
        "files_save_text_to_file"
      ],
      "use_cases": [
        "Automating text to file operations",
        "Processing text to file in workflows",
        "Managing text to file data efficiently",
        "Streamlining text to file tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source",
          "filename",
          "create_append"
        ],
        "optional_inputs": [],
        "input_types": {
          "source": "string",
          "filename": "file_path",
          "create_append": "selection"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of save text to file",
        "output_variable": "source"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 46,
    "uid": "ec83704d-88de-4b23-939a-67028268eeab",
    "packageName": "SmartBots",
    "actionName": "scripts_include_script",
    "actionDescription": "Include",
    "actionGroup": "Scripts",
    "actionLabel": "Include",
    "actionIcon": "<?xml version=\"1.0\" ?><svg style=\"enable-background:new 0 0 50 50;\" version=\"1.1\" viewBox=\"0 0 50 50\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"Layer_1\"><path d=\"M11.899,49c2.911,0,5.648-1.134,7.707-3.192l9.201-9.201C30.866,34.548,32,31.811,32,28.899   c0-4.825-3.098-9.014-7.708-10.424l-0.584,1.912C27.472,21.539,30,24.959,30,28.899c0,2.377-0.926,4.612-2.606,6.293l-9.201,9.201   C16.512,46.074,14.276,47,11.899,47C6.992,47,3,43.008,3,38.101c0-2.377,0.926-4.612,2.606-6.293l9.201-9.201   c0.291-0.291,0.604-0.563,0.93-0.809l-1.205-1.597c-0.398,0.301-0.782,0.634-1.139,0.991l-9.201,9.201   C2.134,32.452,1,35.189,1,38.101C1,44.11,5.89,49,11.899,49z\"/><path d=\"M38.101,1c-2.911,0-5.648,1.134-7.707,3.192l-9.201,9.201C19.134,15.452,18,18.189,18,21.101   c0,5.208,3.705,9.707,8.81,10.699l0.381-1.963c-4.166-0.81-7.19-4.483-7.19-8.736c0-2.377,0.926-4.612,2.606-6.293l9.201-9.201   C33.488,3.926,35.724,3,38.101,3C43.008,3,47,6.992,47,11.899c0,2.377-0.926,4.612-2.606,6.293l-9.2,9.201   c-0.259,0.258-0.53,0.499-0.809,0.716l1.23,1.576c0.342-0.267,0.676-0.562,0.991-0.877l9.201-9.201   C47.866,17.548,49,14.811,49,11.899C49,5.89,44.11,1,38.101,1z\"/></g><g/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{script}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{include_name}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"include_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Include name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('include_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${include_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"script\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Script\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('script', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${script}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ],\n\"maxLines\": \"10\"\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Include",
      "intent_keywords": [
        "scripts_include_script",
        "include"
      ],
      "use_cases": [
        "Automating script operations",
        "Processing script in workflows",
        "Managing script data efficiently",
        "Streamlining script tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "include_name",
          "script"
        ],
        "optional_inputs": [],
        "input_types": {
          "include_name": "string",
          "script": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of include",
        "output_variable": "include_name"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 47,
    "uid": "e7680fe9-a60b-4df6-8d0c-7626e4ba1a03",
    "packageName": "SmartBots",
    "actionName": "testing_comp",
    "actionDescription": "Testing comp",
    "actionGroup": "Application",
    "actionLabel": "Testing comp",
    "actionIcon": null,
    "storageEntity": null,
    "info": null,
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Testing comp",
      "intent_keywords": [
        "comp",
        "testing",
        "testing_comp"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of testing comp",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 48,
    "uid": "aea35da1-965e-4168-8d1e-e87bf88c72e6",
    "packageName": "SmartBots",
    "actionName": "ai_resume_document",
    "actionDescription": "Resume document",
    "actionGroup": "AI",
    "actionLabel": "Resume document",
    "actionIcon": "<?xml version=\"1.0\" ?><!DOCTYPE svg  PUBLIC '-//W3C//DTD SVG 1.1//EN'  'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'><svg height=\"512px\" style=\"enable-background:new 0 0 512 512;\" version=\"1.1\" viewBox=\"0 0 512 512\" width=\"512px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"C_-_65_x2C__Employee_x2C__hr_x2C__human_x2C__hunting_x2C__personal_x2C__resources_x2C__resume_x2C__search\"><g><path d=\"M234.281,221.882c0.003-0.076,0.01-0.151,0.013-0.227c0.041-1.102,0.105-2.201,0.194-3.3    c0.016-0.19,0.032-0.38,0.049-0.57c0.089-1.011,0.198-2.02,0.328-3.027c0.041-0.32,0.086-0.641,0.131-0.96    c0.121-0.852,0.253-1.701,0.403-2.549c0.088-0.5,0.184-0.999,0.281-1.497c0.13-0.658,0.264-1.314,0.413-1.968    c0.156-0.698,0.326-1.391,0.5-2.083c0.117-0.458,0.233-0.915,0.359-1.37c0.242-0.886,0.504-1.764,0.779-2.639    c0.085-0.272,0.167-0.543,0.256-0.814c0.342-1.05,0.708-2.088,1.096-3.12c0.042-0.113,0.082-0.226,0.125-0.339    c1.368-3.593,3.004-7.076,4.908-10.421c-3.53-1.645-7.374-2.5-11.317-2.5h-71.176c-15.014,0-27.23,12.145-27.23,27.073v35.06    h103.127c-0.375-1.23-0.715-2.47-1.026-3.72c-0.009-0.034-0.017-0.069-0.025-0.104c-0.281-1.136-0.537-2.279-0.765-3.429    c-0.052-0.264-0.1-0.527-0.149-0.791c-0.168-0.899-0.325-1.801-0.46-2.707c-0.077-0.506-0.144-1.012-0.21-1.519    c-0.084-0.653-0.165-1.307-0.231-1.963c-0.078-0.741-0.142-1.482-0.198-2.225c-0.03-0.423-0.061-0.846-0.085-1.271    c-0.055-0.944-0.091-1.889-0.111-2.834c-0.004-0.241-0.009-0.48-0.012-0.721c-0.012-1.08,0-2.158,0.032-3.236    C234.281,222.035,234.278,221.959,234.281,221.882z M201.533,224.503h-17.964v-17.879h17.964V224.503z\"/><path d=\"M197.053,148.307c17.224,0,31.235-13.937,31.235-31.067c0-17.128-14.012-31.064-31.235-31.064    c-17.223,0-31.235,13.936-31.235,31.064C165.817,134.371,179.83,148.307,197.053,148.307z\"/><path d=\"M244.062,232.328c0.099,0.845,0.219,1.685,0.35,2.523c0.04,0.253,0.074,0.506,0.117,0.759    c0.126,0.754,0.273,1.502,0.425,2.25c0.105,0.514,0.216,1.029,0.334,1.542c0.045,0.196,0.095,0.39,0.141,0.585    c0.274,1.143,0.574,2.282,0.91,3.414c0.005,0.019,0.011,0.038,0.017,0.056c0.575,1.929,1.238,3.841,1.993,5.73    c0.112,0.221,0.202,0.457,0.279,0.696c3.044,7.366,7.419,14.206,13.043,20.203c12.653,13.487,30.551,21.223,49.106,21.223    c11.645,0,22.916-2.978,32.869-8.55c0.172-0.097,0.344-0.194,0.516-0.292c0.777-0.444,1.547-0.9,2.307-1.376    c0.046-0.029,0.094-0.057,0.141-0.086c0.782-0.492,1.552-1.006,2.314-1.531c0.2-0.139,0.398-0.277,0.596-0.418    c0.688-0.482,1.366-0.978,2.035-1.486c0.081-0.063,0.164-0.121,0.245-0.184c0.722-0.555,1.428-1.13,2.128-1.715    c0.196-0.165,0.393-0.33,0.588-0.497c0.704-0.603,1.401-1.214,2.084-1.849c0.002-0.002,0.004-0.004,0.008-0.006v-0.001    c0.723-0.671,1.421-1.36,2.107-2.057c0.178-0.18,0.354-0.358,0.529-0.54c0.647-0.671,1.283-1.351,1.9-2.044    c0.17-0.192,0.334-0.392,0.503-0.586c0.438-0.503,0.866-1.014,1.288-1.529c0.26-0.318,0.52-0.636,0.773-0.959    c0.38-0.483,0.749-0.973,1.115-1.465c0.422-0.568,0.834-1.144,1.236-1.725c0.18-0.255,0.355-0.513,0.529-0.771    c0.33-0.489,0.657-0.98,0.973-1.478c0.007-0.011,0.016-0.02,0.021-0.028c6.303-9.909,9.885-21.34,10.297-33.372    c0.61-17.831-5.791-34.831-18.025-47.872c-12.655-13.49-30.557-21.227-49.111-21.227c-17.068,0-33.342,6.389-45.822,17.99    c-3.98,3.7-7.441,7.806-10.358,12.223c-0.008,0.013-0.012,0.026-0.021,0.039c-0.313,0.477-0.618,0.958-0.918,1.441    c-0.113,0.182-0.225,0.364-0.336,0.546c-0.985,1.614-1.896,3.263-2.733,4.94c-0.059,0.117-0.114,0.236-0.172,0.354    c-0.481,0.982-0.937,1.975-1.368,2.975c-0.094,0.219-0.189,0.438-0.281,0.658c-0.221,0.526-0.437,1.053-0.643,1.584    c-0.249,0.644-0.49,1.29-0.718,1.94c-0.146,0.417-0.284,0.836-0.422,1.255c-0.188,0.571-0.37,1.144-0.543,1.721    c-0.086,0.287-0.176,0.574-0.259,0.862c-0.248,0.873-0.477,1.752-0.689,2.637c-0.041,0.167-0.081,0.334-0.12,0.501    c-0.969,4.182-1.544,8.487-1.695,12.871c-0.114,3.315,0.017,6.6,0.38,9.838C244.037,232.137,244.05,232.232,244.062,232.328z\"/><path d=\"M428.545,390.334c-0.07,0.044-0.147,0.071-0.221,0.111c-0.192,0.104-0.385,0.207-0.588,0.282    c-0.099,0.037-0.201,0.055-0.302,0.085c-0.183,0.055-0.364,0.111-0.551,0.143c-0.115,0.02-0.231,0.021-0.347,0.031    c-0.146,0.014-0.292,0.041-0.439,0.041c-0.027,0-0.055-0.008-0.082-0.009c-0.17-0.003-0.336-0.029-0.504-0.05    c-0.135-0.018-0.271-0.024-0.404-0.053c-0.175-0.038-0.344-0.102-0.514-0.159c-0.121-0.041-0.246-0.069-0.363-0.121    c-0.187-0.08-0.36-0.19-0.536-0.295c-0.095-0.056-0.192-0.099-0.284-0.161c-0.26-0.183-0.506-0.392-0.73-0.633l-61.289-65.334    c-0.852-0.908-1.309-2.12-1.266-3.366s0.581-2.424,1.494-3.272l3.112-2.892l-20.386-21.731    c-10.354,5.041-21.792,7.728-33.568,7.728c-21.135,0-41.523-8.814-55.941-24.183c-5.761-6.143-10.368-13.063-13.766-20.495    H129.706c-2.587,0-4.686-2.098-4.686-4.686V211.57c0-20.095,16.419-36.444,36.602-36.444h71.176    c5.781,0,11.394,1.383,16.484,3.992c2.746-3.671,5.827-7.135,9.261-10.325c14.218-13.217,32.758-20.496,52.201-20.496    c21.135,0,41.525,8.815,55.945,24.186c13.953,14.872,21.254,34.263,20.557,54.604c-0.428,12.491-3.852,24.413-9.881,34.976    l20.489,21.843l3.148-2.926c0.944-0.879,2.154-1.292,3.349-1.251c1.195,0.041,2.375,0.537,3.258,1.478l22.214,23.678v-263.4    H98.449v383.911h331.375v-36.12l-0.536,0.499C429.055,389.989,428.806,390.175,428.545,390.334z M197.053,76.805    c22.391,0,40.606,18.139,40.606,40.435c0,22.297-18.216,40.438-40.606,40.438s-40.606-18.141-40.606-40.438    C156.446,94.944,174.662,76.805,197.053,76.805z M138.665,318.134h98.789c2.588,0,4.686,2.098,4.686,4.686    s-2.098,4.686-4.686,4.686h-98.789c-2.587,0-4.685-2.098-4.685-4.686S136.078,318.134,138.665,318.134z M318.275,381.135h-179.61    c-2.587,0-4.685-2.098-4.685-4.686s2.098-4.686,4.685-4.686h179.61c2.588,0,4.686,2.098,4.686,4.686    S320.863,381.135,318.275,381.135z M318.275,354.324h-179.61c-2.587,0-4.685-2.098-4.685-4.686c0-2.589,2.098-4.686,4.685-4.686    h179.61c2.588,0,4.686,2.097,4.686,4.686C322.961,352.227,320.863,354.324,318.275,354.324z\"/><path d=\"M376.859,303.413l14.127-13.133l-18.919-20.17c-0.138,0.183-0.284,0.356-0.423,0.536    c-0.468,0.609-0.939,1.216-1.427,1.813c-0.32,0.393-0.651,0.776-0.979,1.164c-0.417,0.489-0.832,0.981-1.262,1.463    c-0.475,0.53-0.965,1.046-1.453,1.563c-0.318,0.337-0.629,0.681-0.955,1.013c-0.842,0.859-1.701,1.702-2.585,2.522    c-0.84,0.779-1.697,1.537-2.569,2.277c-0.338,0.287-0.686,0.56-1.027,0.84c-0.543,0.446-1.086,0.893-1.641,1.322    c-0.396,0.308-0.801,0.603-1.202,0.901c-0.519,0.387-1.037,0.771-1.563,1.145c-0.418,0.295-0.841,0.579-1.264,0.864    c-0.326,0.222-0.646,0.454-0.977,0.67l18.856,20.1L376.859,303.413z\"/><path d=\"M431.116,319.958c-0.009-0.008-0.018-0.014-0.024-0.022l-27.127-28.917l-21.371,19.859l-8.031,7.467    c-0.008,0.006-0.016,0.011-0.023,0.017l-3.092,2.874l54.875,58.499l4.996-4.644c0.002-0.002,0.004-0.003,0.006-0.005    l27.519-25.574L431.116,319.958z M426.045,358.578c-4.963,0-8.982-4.008-8.982-8.939c0-4.94,4.02-8.94,8.982-8.94    c4.955,0,8.981,4,8.981,8.94C435.026,354.57,431,358.578,426.045,358.578z\"/><path d=\"M345.213,461.146H62.528V174.059c0-2.588-2.098-4.686-4.686-4.686c-2.587,0-4.686,2.098-4.686,4.686v291.773    c0,2.588,2.098,4.686,4.686,4.686h287.37c2.589,0,4.686-2.098,4.686-4.686S347.802,461.146,345.213,461.146z\"/></g></g><g id=\"Layer_1\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code_add:gen_vertexai\nimport base64\nimport vertexai\nfrom vertexai.generative_models import GenerativeModel, Part, SafetySetting\n\ndef generate(pdfInputB64, text1):\n    vertexai.init(project=\"smart-bots-441417\", location=\"us-central1\")\n    model = GenerativeModel(\n        \"gemini-1.5-flash-002\",\n    )\n\n    document1 = Part.from_data(\n        mime_type=\"application/pdf\",\n        data=base64.b64decode(pdfInputB64),\n    )\n    generation_config = {\n        \"max_output_tokens\": 8192,\n        \"temperature\": 0,\n        \"top_p\": 0.95,\n    }\n    safety_settings = [\n        SafetySetting(\n          category=SafetySetting.HarmCategory.HARM_CATEGORY_HATE_SPEECH,\n          threshold=SafetySetting.HarmBlockThreshold.OFF\n        ),\n        SafetySetting(\n          category=SafetySetting.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\n          threshold=SafetySetting.HarmBlockThreshold.OFF\n        ),\n        SafetySetting(\n          category=SafetySetting.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,\n          threshold=SafetySetting.HarmBlockThreshold.OFF\n        ),\n        SafetySetting(\n          category=SafetySetting.HarmCategory.HARM_CATEGORY_HARASSMENT,\n          threshold=SafetySetting.HarmBlockThreshold.OFF\n        ),\n    ]\n\n    responses = model.generate_content(\n        [document1, text1],\n        generation_config=generation_config,\n        safety_settings=safety_settings,\n        stream=True,\n    )\n\n    r = \"\"\n    for response in responses:\n        print(response.text, end=\"\")\n        r += response.text\n\n    return r\n#endregion\n\n#region code\n_temp_text1 = \"\"\"You are a very professional document summarization specialist. Given a document, your task is to strictly follow the user\\'s instructions.\"\"\"\n{{result}} = gen_vertexai.generate({{pdf_input}}, _temp_text1)\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{pdf_input}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"pdf_input\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"PDF Input\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('pdf_input', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${pdf_input}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Resume document",
      "intent_keywords": [
        "resume",
        "ai_resume_document",
        "document"
      ],
      "use_cases": [
        "Automating document operations",
        "Processing document in workflows",
        "Managing document data efficiently",
        "Streamlining document tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "pdf_input",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "pdf_input": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of resume document",
        "output_variable": "pdf_input"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 49,
    "uid": "c245a77c-51e8-44de-a134-d75013a2a28e",
    "packageName": "SmartBots",
    "actionName": "application_player_mouse_keyboard",
    "actionDescription": "Player mouse/keyboard",
    "actionGroup": "Application",
    "actionLabel": "Player mouse/keyboard",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g data-name=\"Layer 2\" id=\"Layer_2\"><path d=\"M21,2H3A1,1,0,0,0,2,3V21a1,1,0,0,0,1,1H21a1,1,0,0,0,1-1V3A1,1,0,0,0,21,2ZM20,20H4V4H20Z\"/><path d=\"M9.55,15.89a1,1,0,0,0,1-.09l4-3a1,1,0,0,0,0-1.6l-4-3A1,1,0,0,0,9,9v6A1,1,0,0,0,9.55,15.89ZM11,11l1.33,1L11,13Z\"/><rect height=\"2\" width=\"2\" x=\"5\" y=\"5\"/><rect height=\"2\" width=\"2\" x=\"9\" y=\"5\"/><rect height=\"2\" width=\"2\" x=\"13\" y=\"5\"/><rect height=\"2\" width=\"2\" x=\"17\" y=\"5\"/><rect height=\"2\" width=\"2\" x=\"5\" y=\"17\"/><rect height=\"2\" width=\"2\" x=\"9\" y=\"17\"/><rect height=\"2\" width=\"2\" x=\"13\" y=\"17\"/><rect height=\"2\" width=\"2\" x=\"17\" y=\"17\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": null,
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"elevated_button\",\n                \"args\": {\n                    \"onPressed\": \"${navigate_named('/recorder-mouse-keyboard')}\",\n                    \"child\": {\n                        \"type\": \"text\",\n                        \"args\": {\n                            \"text\": \"OK\",\n                            \"style\": {\n                                \"color\": \"#fff\"\n                            }\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Player mouse/keyboard",
      "intent_keywords": [
        "application_player_mouse_keyboard",
        "player",
        "keyboard",
        "mouse"
      ],
      "use_cases": [
        "Automating mouse keyboard operations",
        "Processing mouse keyboard in workflows",
        "Managing mouse keyboard data efficiently",
        "Streamlining mouse keyboard tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of player mouse/keyboard",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 50,
    "uid": "46bd406a-7123-4885-ba55-33e91957eb42",
    "packageName": "SmartBots",
    "actionName": "web_elem_simulate_keyboard",
    "actionDescription": "Keystrokes on Element",
    "actionGroup": "Web",
    "actionLabel": "Keystrokes on Element",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M19 7H5C3.34315 7 2 8.34315 2 10V19C2 20.6569 3.34315 22 5 22H19C20.6569 22 22 20.6569 22 19V10C22 8.34315 20.6569 7 19 7Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\n    <path d=\"M12 7V5.53078C12 4.92498 12.4123 4.39693 13 4.25V4.25C13.5877 4.10307 14 3.57502 14 2.96922V2\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M7 12L8 12M11.5 12L12.5 12M16 12L17 12\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M7 17L17 17\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom selenium.webdriver.common.keys import Keys\n#endregion\n\n#region code\n_temp1_keys = f'{{keystrokes}}'\n_temp1_keys = _temp1_keys.replace('[ENTER]', Keys.ENTER)\n_temp1_keys = _temp1_keys.replace('[TAB]', Keys.TAB)\n_temp1_keys = _temp1_keys.replace('[SPACE]', Keys.SPACE)\n{{handler}}.send_keys(_temp1_keys)\n#endregion\n\n#region requiredExtensions\nselenium\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"keystrokes\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Keystrokes\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('keystrokes', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${keystrokes}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Keystrokes on Element",
      "intent_keywords": [
        "navigate",
        "web_elem_simulate_keyboard",
        "browser",
        "keystrokes",
        "web",
        "on",
        "click",
        "find",
        "scrape",
        "element"
      ],
      "use_cases": [
        "Automating simulate keyboard operations",
        "Processing simulate keyboard in workflows",
        "Managing simulate keyboard data efficiently",
        "Streamlining simulate keyboard tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "keystrokes"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "keystrokes": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of keystrokes on element",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [
        "selenium_library"
      ],
      "typical_next_steps": [
        "web_navigate",
        "web_wait",
        "web_verify"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 51,
    "uid": "5a6834a0-4589-4f7b-b415-97078390ecee",
    "packageName": "SmartBots",
    "actionName": "web_anticaptcha",
    "actionDescription": "Anticaptcha",
    "actionGroup": "Web",
    "actionLabel": "Anticaptcha",
    "actionIcon": "<?xml version=\"1.0\" ?><!DOCTYPE svg  PUBLIC '-//W3C//DTD SVG 1.1//EN'  'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'><svg enable-background=\"new 0 0 48 48\" height=\"48px\" id=\"Layer_3\" version=\"1.1\" viewBox=\"0 0 48 48\" width=\"48px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><path d=\"M32.615,10.883V8.615C32.615,3.857,28.759,0,24,0c-4.758,0-8.615,3.857-8.615,8.615v2.268H12.33V28h23.34  V10.883H32.615z M26.432,22.715h-4.734l1.175-2.963c-0.831-0.415-1.406-1.265-1.406-2.257c0-1.4,1.134-2.535,2.534-2.535  c1.4,0,2.533,1.135,2.533,2.535c0,0.98-0.561,1.82-1.375,2.243L26.432,22.715z M19.012,10.883V8.615  c0-2.754,2.233-4.988,4.988-4.988c2.754,0,4.988,2.233,4.988,4.988v2.268H19.012z\" fill=\"#241F20\"/><path d=\"M0,32v16h48V32H0z M44,44H4v-8h40V44z\" fill=\"#241F20\"/><rect fill=\"#241F20\" height=\"3\" width=\"6\" x=\"11\" y=\"38.5\"/><rect fill=\"#241F20\" height=\"3\" width=\"6\" x=\"21\" y=\"38.5\"/><rect fill=\"#241F20\" height=\"3\" width=\"6\" x=\"31\" y=\"38.5\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom anticaptchaofficial.imagecaptcha import *\n#endregion\n\n#region code\nsolver = imagecaptcha()\r\nsolver.set_verbose(1)\r\nsolver.set_key(\"{{api_key}}\")\n{{text_result}} = solver.solve_and_return_solution(r\"{{img_filename}}\")\n#endregion\n\n#region requiredExtensions\nanticaptchaofficial\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"img_filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Image filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('img_filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${img_filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"api_key\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"API Key\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('api_key', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${api_key}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"text_result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Text result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('text_result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${text_result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Anticaptcha",
      "intent_keywords": [
        "anticaptcha",
        "navigate",
        "browser",
        "web",
        "click",
        "web_anticaptcha",
        "find",
        "scrape",
        "element"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "img_filename",
          "api_key",
          "text_result"
        ],
        "optional_inputs": [],
        "input_types": {
          "img_filename": "file_path",
          "api_key": "string",
          "text_result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of anticaptcha",
        "output_variable": "img_filename"
      },
      "complexity_level": "intermediate",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [
        "web_navigate",
        "web_wait",
        "web_verify"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 52,
    "uid": "e9268305-b953-441d-b369-c905c699c768",
    "packageName": "SmartBots",
    "actionName": "web_get_element_attribute",
    "actionDescription": "Get Element Attribute",
    "actionGroup": "Web",
    "actionLabel": "Get Element Attribute",
    "actionIcon": "<?xml version=\"1.0\" ?><svg height=\"20px\" version=\"1.1\" viewBox=\"0 0 20 20\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title/><desc/><defs/><g fill=\"none\" fill-rule=\"evenodd\" id=\"Page-1\" stroke=\"none\" stroke-width=\"1\"><g fill=\"#000000\" id=\"Core\" transform=\"translate(-296.000000, -296.000000)\"><g id=\"language\" transform=\"translate(296.000000, 296.000000)\"><path d=\"M10,0 C4.5,0 0,4.5 0,10 C0,15.5 4.5,20 10,20 C15.5,20 20,15.5 20,10 C20,4.5 15.5,0 10,0 L10,0 Z M16.9,6 L14,6 C13.7,4.7 13.2,3.6 12.6,2.4 C14.4,3.1 16,4.3 16.9,6 L16.9,6 Z M10,2 C10.8,3.2 11.5,4.5 11.9,6 L8.1,6 C8.5,4.6 9.2,3.2 10,2 L10,2 Z M2.3,12 C2.1,11.4 2,10.7 2,10 C2,9.3 2.1,8.6 2.3,8 L5.7,8 C5.6,8.7 5.6,9.3 5.6,10 C5.6,10.7 5.7,11.3 5.7,12 L2.3,12 L2.3,12 Z M3.1,14 L6,14 C6.3,15.3 6.8,16.4 7.4,17.6 C5.6,16.9 4,15.7 3.1,14 L3.1,14 Z M6,6 L3.1,6 C4.1,4.3 5.6,3.1 7.4,2.4 C6.8,3.6 6.3,4.7 6,6 L6,6 Z M10,18 C9.2,16.8 8.5,15.5 8.1,14 L11.9,14 C11.5,15.4 10.8,16.8 10,18 L10,18 Z M12.3,12 L7.7,12 C7.6,11.3 7.5,10.7 7.5,10 C7.5,9.3 7.6,8.7 7.7,8 L12.4,8 C12.5,8.7 12.6,9.3 12.6,10 C12.6,10.7 12.4,11.3 12.3,12 L12.3,12 Z M12.6,17.6 C13.2,16.5 13.7,15.3 14,14 L16.9,14 C16,15.7 14.4,16.9 12.6,17.6 L12.6,17.6 Z M14.4,12 C14.5,11.3 14.5,10.7 14.5,10 C14.5,9.3 14.4,8.7 14.4,8 L17.8,8 C18,8.6 18.1,9.3 18.1,10 C18.1,10.7 18,11.4 17.8,12 L14.4,12 L14.4,12 Z\" id=\"Shape\"/></g></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = {{handler}}.get_attribute('{{attribute}}')\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"attribute\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Attribute\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('attribute', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${attribute}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Get Element Attribute",
      "intent_keywords": [
        "navigate",
        "browser",
        "web",
        "click",
        "web_get_element_attribute",
        "find",
        "scrape",
        "get",
        "element",
        "attribute"
      ],
      "use_cases": [
        "Automating element attribute operations",
        "Processing element attribute in workflows",
        "Managing element attribute data efficiently",
        "Streamlining element attribute tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "attribute",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "attribute": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of get element attribute",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [],
      "typical_next_steps": [
        "web_navigate",
        "web_wait",
        "web_verify"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 53,
    "uid": "fa71e873-3c65-4435-aed4-bbd5581fce4f",
    "packageName": "SmartBots",
    "actionName": "convert_base64_to_image_file",
    "actionDescription": "Image file from Base64",
    "actionGroup": "Convert",
    "actionLabel": "Image file from Base64",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g data-name=\"transition, conversion, convert, transfer, motion, split, slide\" id=\"transition_conversion_convert_transfer_motion_split_slide\"><path d=\"M14,19a1,1,0,0,0-1,1v4H4V8h9v4a1,1,0,0,0,2,0V7a1,1,0,0,0-1-1H3A1,1,0,0,0,2,7V25a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V20A1,1,0,0,0,14,19Z\"/><path d=\"M29,6H18a1,1,0,0,0-1,1v5a1,1,0,0,0,2,0V8h9V24H19V20a1,1,0,0,0-2,0v5a1,1,0,0,0,1,1H29a1,1,0,0,0,1-1V7A1,1,0,0,0,29,6Z\"/><path d=\"M7,16a1,1,0,0,0,1,1H22.59l-.3.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0l2-2a1,1,0,0,0,0-1.42l-2-2a1,1,0,0,0-1.42,1.42l.3.29H8A1,1,0,0,0,7,16Z\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport base64\n#endregion\n\n#region code\nwith open(f\"{{filename}}\", \"wb\") as fh:\r\n  fh.write(base64.urlsafe_b64decode({{handler}}.replace('data:image/png;base64,', '')))\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Output Filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Image file from Base64",
      "intent_keywords": [
        "base64",
        "from",
        "image",
        "file",
        "convert_base64_to_image_file"
      ],
      "use_cases": [
        "Automating to image file operations",
        "Processing to image file in workflows",
        "Managing to image file data efficiently",
        "Streamlining to image file tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "filename"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "filename": "file_path"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of image file from base64",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 54,
    "uid": "ab505559-e6b5-43a4-b00b-2d7c6bebc801",
    "packageName": "SmartBots",
    "actionName": "web_maximize_window",
    "actionDescription": "Web Maximize Window",
    "actionGroup": "Web",
    "actionLabel": "Web Maximize Window",
    "actionIcon": "<?xml version=\"1.0\" ?><svg height=\"20px\" version=\"1.1\" viewBox=\"0 0 20 20\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title/><desc/><defs/><g fill=\"none\" fill-rule=\"evenodd\" id=\"Page-1\" stroke=\"none\" stroke-width=\"1\"><g fill=\"#000000\" id=\"Core\" transform=\"translate(-296.000000, -296.000000)\"><g id=\"language\" transform=\"translate(296.000000, 296.000000)\"><path d=\"M10,0 C4.5,0 0,4.5 0,10 C0,15.5 4.5,20 10,20 C15.5,20 20,15.5 20,10 C20,4.5 15.5,0 10,0 L10,0 Z M16.9,6 L14,6 C13.7,4.7 13.2,3.6 12.6,2.4 C14.4,3.1 16,4.3 16.9,6 L16.9,6 Z M10,2 C10.8,3.2 11.5,4.5 11.9,6 L8.1,6 C8.5,4.6 9.2,3.2 10,2 L10,2 Z M2.3,12 C2.1,11.4 2,10.7 2,10 C2,9.3 2.1,8.6 2.3,8 L5.7,8 C5.6,8.7 5.6,9.3 5.6,10 C5.6,10.7 5.7,11.3 5.7,12 L2.3,12 L2.3,12 Z M3.1,14 L6,14 C6.3,15.3 6.8,16.4 7.4,17.6 C5.6,16.9 4,15.7 3.1,14 L3.1,14 Z M6,6 L3.1,6 C4.1,4.3 5.6,3.1 7.4,2.4 C6.8,3.6 6.3,4.7 6,6 L6,6 Z M10,18 C9.2,16.8 8.5,15.5 8.1,14 L11.9,14 C11.5,15.4 10.8,16.8 10,18 L10,18 Z M12.3,12 L7.7,12 C7.6,11.3 7.5,10.7 7.5,10 C7.5,9.3 7.6,8.7 7.7,8 L12.4,8 C12.5,8.7 12.6,9.3 12.6,10 C12.6,10.7 12.4,11.3 12.3,12 L12.3,12 Z M12.6,17.6 C13.2,16.5 13.7,15.3 14,14 L16.9,14 C16,15.7 14.4,16.9 12.6,17.6 L12.6,17.6 Z M14.4,12 C14.5,11.3 14.5,10.7 14.5,10 C14.5,9.3 14.4,8.7 14.4,8 L17.8,8 C18,8.6 18.1,9.3 18.1,10 C18.1,10.7 18,11.4 17.8,12 L14.4,12 L14.4,12 Z\" id=\"Shape\"/></g></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{handler}}.maximize_window()\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Web Maximize Window",
      "intent_keywords": [
        "navigate",
        "web_maximize_window",
        "browser",
        "web",
        "maximize",
        "click",
        "window",
        "find",
        "scrape",
        "element"
      ],
      "use_cases": [
        "Automating window operations",
        "Processing window in workflows",
        "Managing window data efficiently",
        "Streamlining window tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of web maximize window",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [],
      "typical_next_steps": [
        "web_navigate",
        "web_wait",
        "web_verify"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 55,
    "uid": "c2f929e5-faad-4847-8fa7-604edd7e7fa1",
    "packageName": "SmartBots",
    "actionName": "web_keystrokes_window",
    "actionDescription": "Keystrokes on Window",
    "actionGroup": "Web",
    "actionLabel": "Keystrokes on Window",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M19 7H5C3.34315 7 2 8.34315 2 10V19C2 20.6569 3.34315 22 5 22H19C20.6569 22 22 20.6569 22 19V10C22 8.34315 20.6569 7 19 7Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\n    <path d=\"M12 7V5.53078C12 4.92498 12.4123 4.39693 13 4.25V4.25C13.5877 4.10307 14 3.57502 14 2.96922V2\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M7 12L8 12M11.5 12L12.5 12M16 12L17 12\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M7 17L17 17\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.action_chains import ActionChains\n#endregion\n\n#region code\n_temp1_keys = f'{{keystrokes}}'\n_temp1_keys = _temp1_keys.replace('[ENTER]', Keys.ENTER)\n_temp1_keys = _temp1_keys.replace('[TAB]', Keys.TAB)\n_temp1_keys = _temp1_keys.replace('[SPACE]', Keys.SPACE)\nActionChains({{handler}}).send_keys(_temp1_keys)\n#endregion\n\n#region requiredExtensions\nselenium\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n           \n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n {\n                \"type\": \"text_form_field\",\n                \"id\": \"keystrokes\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Keystrokes\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('keystrokes', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${keystrokes}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }            \n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Keystrokes on Window",
      "intent_keywords": [
        "navigate",
        "browser",
        "keystrokes",
        "web",
        "on",
        "click",
        "window",
        "web_keystrokes_window",
        "find",
        "scrape",
        "element"
      ],
      "use_cases": [
        "Automating window operations",
        "Processing window in workflows",
        "Managing window data efficiently",
        "Streamlining window tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "keystrokes"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "keystrokes": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of keystrokes on window",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [
        "selenium_library"
      ],
      "typical_next_steps": [
        "web_navigate",
        "web_wait",
        "web_verify"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 56,
    "uid": "0499056c-3174-4568-b549-77836574e783",
    "packageName": "SmartBots",
    "actionName": "web_element_click",
    "actionDescription": "Click on Element",
    "actionGroup": "Web",
    "actionLabel": "Click on Element",
    "actionIcon": "<?xml version=\"1.0\" ?><svg height=\"20px\" version=\"1.1\" viewBox=\"0 0 20 20\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title/><desc/><defs/><g fill=\"none\" fill-rule=\"evenodd\" id=\"Page-1\" stroke=\"none\" stroke-width=\"1\"><g fill=\"#000000\" id=\"Core\" transform=\"translate(-296.000000, -296.000000)\"><g id=\"language\" transform=\"translate(296.000000, 296.000000)\"><path d=\"M10,0 C4.5,0 0,4.5 0,10 C0,15.5 4.5,20 10,20 C15.5,20 20,15.5 20,10 C20,4.5 15.5,0 10,0 L10,0 Z M16.9,6 L14,6 C13.7,4.7 13.2,3.6 12.6,2.4 C14.4,3.1 16,4.3 16.9,6 L16.9,6 Z M10,2 C10.8,3.2 11.5,4.5 11.9,6 L8.1,6 C8.5,4.6 9.2,3.2 10,2 L10,2 Z M2.3,12 C2.1,11.4 2,10.7 2,10 C2,9.3 2.1,8.6 2.3,8 L5.7,8 C5.6,8.7 5.6,9.3 5.6,10 C5.6,10.7 5.7,11.3 5.7,12 L2.3,12 L2.3,12 Z M3.1,14 L6,14 C6.3,15.3 6.8,16.4 7.4,17.6 C5.6,16.9 4,15.7 3.1,14 L3.1,14 Z M6,6 L3.1,6 C4.1,4.3 5.6,3.1 7.4,2.4 C6.8,3.6 6.3,4.7 6,6 L6,6 Z M10,18 C9.2,16.8 8.5,15.5 8.1,14 L11.9,14 C11.5,15.4 10.8,16.8 10,18 L10,18 Z M12.3,12 L7.7,12 C7.6,11.3 7.5,10.7 7.5,10 C7.5,9.3 7.6,8.7 7.7,8 L12.4,8 C12.5,8.7 12.6,9.3 12.6,10 C12.6,10.7 12.4,11.3 12.3,12 L12.3,12 Z M12.6,17.6 C13.2,16.5 13.7,15.3 14,14 L16.9,14 C16,15.7 14.4,16.9 12.6,17.6 L12.6,17.6 Z M14.4,12 C14.5,11.3 14.5,10.7 14.5,10 C14.5,9.3 14.4,8.7 14.4,8 L17.8,8 C18,8.6 18.1,9.3 18.1,10 C18.1,10.7 18,11.4 17.8,12 L14.4,12 L14.4,12 Z\" id=\"Shape\"/></g></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{handler}}.click()\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Click on Element",
      "intent_keywords": [
        "navigate",
        "web_element_click",
        "browser",
        "web",
        "on",
        "click",
        "find",
        "scrape",
        "element"
      ],
      "use_cases": [
        "Automating click operations",
        "Processing click in workflows",
        "Managing click data efficiently",
        "Streamlining click tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of click on element",
        "output_variable": "handler"
      },
      "complexity_level": "intermediate",
      "dependencies": [],
      "typical_next_steps": [
        "web_navigate",
        "web_wait",
        "web_verify"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "Element not found on page",
        "Page load timeout",
        "Browser connection lost"
      ],
      "performance_notes": "Performance affected by page load times and network latency. Consider adding appropriate waits"
    }
  },
  {
    "id": 57,
    "uid": "0ac6984e-2406-4762-a1b6-c8f22c147b95",
    "packageName": "SmartBots",
    "actionName": "strings_to_upper",
    "actionDescription": "Uppercase",
    "actionGroup": "Strings",
    "actionLabel": "Uppercase",
    "actionIcon": "<?xml version=\"1.0\" ?><svg fill=\"none\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path clip-rule=\"evenodd\" d=\"M13 9H10V17H8V9H5V7H13V9ZM18 13H16V17H14V13H12V11H18V13Z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = str({{handler}}).upper()\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Uppercase",
      "intent_keywords": [
        "strings_to_upper",
        "uppercase"
      ],
      "use_cases": [
        "Automating upper operations",
        "Processing upper in workflows",
        "Managing upper data efficiently",
        "Streamlining upper tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of uppercase",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 58,
    "uid": "27621263-b3f6-47f8-aa3b-a821639924c0",
    "packageName": "SmartBots",
    "actionName": "email_imap_find",
    "actionDescription": "Find IMAP messages",
    "actionGroup": "Email",
    "actionLabel": "Find IMAP messages",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M11 19H4C2.89543 19 2 18.1046 2 17V5C2 3.89543 2.89543 3 4 3H20C21.1046 3 22 3.89543 22 5V10\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M22 6L12.8944 10.5528C12.3314 10.8343 11.6686 10.8343 11.1056 10.5528L2 6\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\n    <path d=\"M20.017 19.0233L22 21M21.0531 16.5265C21.0531 14.5789 19.4742 13 17.5265 13C15.5789 13 14 14.5789 14 16.5265C14 18.4742 15.5789 20.0531 17.5265 20.0531C19.4742 20.0531 21.0531 18.4742 21.0531 16.5265Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport imaplib\r\nimport email\r\nimport os\r\n#endregion\r\n\n#region code_add:tempadd_imap\nfrom email.header import decode_header\r\nimport os\r\nimport temp\n\ndef clean(text):\r\n    return \"\".join(c if c.isalnum() else \"_\" for c in text)\r\n\r\ndef creaMessage(msg):\r\n    _temp_subject, _temp_encoding = decode_header(msg[\"Subject\"])[0]\r\n    if isinstance(_temp_subject, bytes) and not _temp_encoding is None:\r\n        _temp_subject = _temp_subject.decode(_temp_encoding)\r\n    _temp_from, _temp_encoding = decode_header(msg.get(\"From\"))[0]\r\n    if isinstance(_temp_from, bytes):\r\n        _temp_from = _temp_from.decode(_temp_encoding)\r\n    _temp_content_type = None\r\n    _temp_body = None\r\n    _temp_attachment = []\r\n    if msg.is_multipart():\r\n        for part in msg.walk():\r\n            _temp_content_type = part.get_content_type()\r\n            content_disposition = str(part.get(\"Content-Disposition\"))\r\n            try:\r\n                _temp_body = part.get_payload(decode=True).decode()\r\n            except:\r\n                pass\r\n            if _temp_content_type == \"text/plain\" and \"attachment\" not in content_disposition:\r\n                pass\r\n            elif \"attachment\" in content_disposition:\r\n                _temp_filename = part.get_filename()\r\n                if _temp_filename:\n                    _temp_folder_name = clean(_temp_subject)\n                    _temp_dir = temp.tempdir()                    \n                    _temp_fn = os.path.join(_temp_dir, _temp_filename)\n                    _temp_fp = open(_temp_fn, 'wb')\n                    _temp_fp.write(part.get_payload(decode=True))\n                    _temp_fp.close()\n                    _temp_attachment.append({\n                       \"filename\":  _temp_filename,\n                       \"temp_filename\":  _temp_fn,\n                    })\n    else:\r\n        _temp_content_type = msg.get_content_type()\r\n        _temp_body = msg.get_payload(decode=True).decode()\r\n\r\n    return {\r\n        \"subject\": _temp_subject,\r\n        \"encoding\": _temp_encoding,\r\n        \"from\": _temp_from,\r\n        \"content_type\": _temp_content_type,\r\n        \"body\": _temp_body,\r\n        \"attachment\": _temp_attachment,\r\n    }\r\n#endregion\r\n\r\n#region code\r\n_temp_imap = imaplib.IMAP4_SSL(f\"{{imap_host}}\")\r\n_temp_imap.login(f\"{{imap_username}}\", f\"{{imap_password}}\")\r\n_temp_status, _temp_messages = _temp_imap.select(f\"{{imap_mailbox}}\")\r\n_temp_tt, _temp_list_uid = _temp_imap.search(None, f'{{imap_search_criteria}}')\r\n{{imap_search_result}} = []\r\nfor num in _temp_list_uid[0].split():\r\n    _temp_res, _temp_msg = _temp_imap.fetch(num, \"(RFC822)\")\r\n    for response in _temp_msg:\r\n        if isinstance(response, tuple):\r\n            _temp_msg = email.message_from_bytes(response[1])\r\n            _temp_item = tempadd_imap.creaMessage(_temp_msg)\r\n            {{imap_search_result}}.append(_temp_item)\r\n#endregion\r\n\r\n#region requiredExtensions\r\ntemp\n#endregion\r\n\r\n#region toString\r\nFind messages: {{imap_host}} : {{imap_mailbox}} : {{imap_search_criteria}}\r\n#endregion\r\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"imap_host\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"IMAP Host\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('imap_host', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${imap_host}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"imap_username\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"IMAP Username\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('imap_username', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${imap_username}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"imap_password\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"IMAP Password\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('imap_password', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${imap_password}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"imap_mailbox\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"IMAP Mailbox\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('imap_mailbox', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"INBOX\",\r\n                    \"initialValue\": \"${imap_mailbox}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"imap_search_criteria\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Search criteria\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('imap_search_criteria', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"(ALL)\",\r\n                    \"initialValue\": \"${imap_search_criteria}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"imap_search_result\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Result\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('imap_search_result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${imap_search_result}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Find IMAP messages",
      "intent_keywords": [
        "messages",
        "email_imap_find",
        "find",
        "imap"
      ],
      "use_cases": [
        "Automating find operations",
        "Processing find in workflows",
        "Managing find data efficiently",
        "Streamlining find tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "imap_host",
          "imap_username",
          "imap_password",
          "imap_mailbox"
        ],
        "optional_inputs": [
          "imap_search_criteria",
          "imap_search_result"
        ],
        "input_types": {
          "imap_host": "string",
          "imap_username": "string",
          "imap_password": "string",
          "imap_mailbox": "string",
          "imap_search_criteria": "string",
          "imap_search_result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of find imap messages",
        "output_variable": "imap_host"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 59,
    "uid": "58607915-8118-4fb1-9180-bee0e5fe6a92",
    "packageName": "SmartBots",
    "actionName": "statements_foreach",
    "actionDescription": "For Each",
    "actionGroup": "Statements",
    "actionLabel": "For Each",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M16.3884 3L17.3913 3.97574C17.8393 4.41165 18.0633 4.62961 17.9844 4.81481C17.9056 5 17.5888 5 16.9552 5H9.19422C5.22096 5 2 8.13401 2 12C2 13.4872 2.47668 14.8662 3.2895 16\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M7.61156 21L6.60875 20.0243C6.16074 19.5883 5.93673 19.3704 6.01557 19.1852C6.09441 19 6.4112 19 7.04478 19H14.8058C18.779 19 22 15.866 22 12C22 10.5128 21.5233 9.13383 20.7105 8\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M9 12H15\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\nfor {{item}} in {{collection}}:\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\nfor each {{item}} in {{collection}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"item\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Item\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('item', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${item}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"collection\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Collection\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('collection', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${collection}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": true,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "For Each",
      "intent_keywords": [
        "for",
        "each",
        "statements_foreach"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "item",
          "collection"
        ],
        "optional_inputs": [],
        "input_types": {
          "item": "string",
          "collection": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of for each",
        "output_variable": "item"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 60,
    "uid": "0439e30c-7367-4fb8-b257-9e19cf1a4aec",
    "packageName": "SmartBots",
    "actionName": "statements_print_console",
    "actionDescription": "Print Console",
    "actionGroup": "Statements",
    "actionLabel": "Print Console",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M16 7C18.357 7 19.5355 7 20.2678 7.73223C21 8.46447 21 9.64298 21 12C21 14.357 21 15.5355 20.2678 16.2678C19.5355 17 18.357 17 16 17H8C5.64298 17 4.46447 17 3.73223 16.2678C3 15.5355 3 14.357 3 12C3 9.64298 3 8.46447 3.73223 7.73223C4.46447 7 5.64298 7 8 7L16 7Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M17 2C16.8955 2.54697 16.7107 2.94952 16.3838 3.26777C15.6316 4 14.4211 4 12 4C9.5789 4 8.36835 4 7.61621 3.26777C7.28931 2.94952 7.10449 2.54697 7 2\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M17 22C16.8955 21.453 16.7107 21.0505 16.3838 20.7322C15.6316 20 14.4211 20 12 20C9.5789 20 8.36835 20 7.61621 20.7322C7.28931 21.0505 7.10449 21.453 7 22\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\nprint(f\"{{content}}\")\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{content}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"content\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Content to show\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('content', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${content}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Print Console",
      "intent_keywords": [
        "print",
        "console",
        "statements_print_console"
      ],
      "use_cases": [
        "Automating console operations",
        "Processing console in workflows",
        "Managing console data efficiently",
        "Streamlining console tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "content"
        ],
        "optional_inputs": [],
        "input_types": {
          "content": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of print console",
        "output_variable": "content"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 61,
    "uid": "96f5c78f-e07f-4119-9514-7e1c6492e22d",
    "packageName": "SmartBots",
    "actionName": "email_save_attachments_to",
    "actionDescription": "Save Attachments To",
    "actionGroup": "Email",
    "actionLabel": "Save Attachments To",
    "actionIcon": "<?xml version=\"1.0\" ?><svg data-name=\"Layer 1\" id=\"Layer_1\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M25.5,8H25V7a5,5,0,0,0-9.58-2H6.5A2.5,2.5,0,0,0,4,7.5v17A2.5,2.5,0,0,0,6.5,27H7v.5A2.5,2.5,0,0,0,9.5,30h16A2.5,2.5,0,0,0,28,27.5v-17A2.5,2.5,0,0,0,25.5,8ZM6.5,26A1.5,1.5,0,0,1,5,24.5V7.5A1.5,1.5,0,0,1,6.5,6h8.6A5.47,5.47,0,0,0,15,7V8H9.5A2.5,2.5,0,0,0,7,10.5V26ZM27,27.5A1.5,1.5,0,0,1,25.5,29H9.5A1.5,1.5,0,0,1,8,27.5v-17A1.5,1.5,0,0,1,9.5,9H15v2.5a.5.5,0,0,0,1,0V7a4,4,0,0,1,8,0v8.5a2.5,2.5,0,0,1-5,0V7a1,1,0,0,1,2,0v8.5a.5.5,0,0,0,1,0V7a2,2,0,0,0-4,0v8.5a3.5,3.5,0,0,0,7,0V9h.5A1.5,1.5,0,0,1,27,10.5Z\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport shutil\nimport io\n#endregion\n\n#region code\n{{result_files}} = []\nif \"attachment\" in {{email_message_item}}:\n  _temp_items =  {{email_message_item}}[\"attachment\"]\n  if type(_temp_items) is list:\n    for _temp_item in _temp_items:\n      if \"temp_filename\" in _temp_item:\n        _temp_fn = os.path.basename(_temp_item[\"temp_filename\"])\n        _temp_filename_output = os.path.join(f\"{{path_to_save}}\", _temp_fn)\n        shutil.copyfile(_temp_item[\"temp_filename\"], _temp_filename_output)        \n        {{result_files}}.append(_temp_filename_output)\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"email_message_item\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Email Message Item\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('email_message_item', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${email_message_item}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"path_to_save\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Path To Save\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('path_to_save', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${path_to_save}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result_files\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result Files\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result_files', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result_files}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Save Attachments To",
      "intent_keywords": [
        "email_save_attachments_to",
        "save",
        "attachments",
        "to"
      ],
      "use_cases": [
        "Automating attachments to operations",
        "Processing attachments to in workflows",
        "Managing attachments to data efficiently",
        "Streamlining attachments to tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "email_message_item",
          "path_to_save"
        ],
        "optional_inputs": [
          "result_files"
        ],
        "input_types": {
          "email_message_item": "string",
          "path_to_save": "string",
          "result_files": "file_path"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of save attachments to",
        "output_variable": "email_message_item"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 62,
    "uid": "32188b3f-b881-4496-93e5-5e50519645f4",
    "packageName": "SmartBots",
    "actionName": "files_extract_filename",
    "actionDescription": "Extract File Name",
    "actionGroup": "Files",
    "actionLabel": "Extract File Name",
    "actionIcon": "<?xml version=\"1.0\" ?><svg fill=\"none\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.5 20C18.5 20.275 18.276 20.5 18 20.5H6C5.724 20.5 5.5 20.275 5.5 20V17H4V20C4 21.104 4.896 22 6 22H18C19.104 22 20 21.104 20 20V9.828C20 9.298 19.789 8.789 19.414 8.414L13.585 2.586C13.57 2.57105 13.5531 2.55808 13.5363 2.5452C13.5238 2.53567 13.5115 2.5262 13.5 2.516C13.429 2.452 13.359 2.389 13.281 2.336C13.2557 2.31894 13.2281 2.30548 13.2005 2.29207C13.1845 2.28426 13.1685 2.27647 13.153 2.268C13.1363 2.25859 13.1197 2.24897 13.103 2.23933C13.0488 2.20797 12.9944 2.17648 12.937 2.152C12.74 2.07 12.528 2.029 12.313 2.014C12.2933 2.01274 12.2738 2.01008 12.2542 2.00741C12.2271 2.00371 12.1999 2 12.172 2H6C4.896 2 4 2.896 4 4V13H5.5V4C5.5 3.725 5.724 3.5 6 3.5H12V8C12 9.104 12.896 10 14 10H18.5V20ZM13.5 4.621L17.378 8.5H14C13.724 8.5 13.5 8.275 13.5 8V4.621ZM8.75 11.5C8.33579 11.5 8 11.8358 8 12.25C8 12.6642 8.33579 13 8.75 13H15.25C15.6642 13 16 12.6642 16 12.25C16 11.8358 15.6642 11.5 15.25 11.5H8.75ZM2.75 14.25C2.33579 14.25 2 14.5858 2 15C2 15.4142 2.33579 15.75 2.75 15.75H9.25C9.66421 15.75 10 15.4142 10 15C10 14.5858 9.66421 14.25 9.25 14.25H2.75ZM8.75 17C8.33579 17 8 17.3358 8 17.75C8 18.1642 8.33579 18.5 8.75 18.5H15.25C15.6642 18.5 16 18.1642 16 17.75C16 17.3358 15.6642 17 15.25 17H8.75Z\" fill=\"#212121\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport os\r\n#endregion\n\n#region code\n_temp_filename = os.path.basename(f\"{{filename}}\")\n{{result}} = _temp_filename\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"filename\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Filename\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${filename}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"result\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Result\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${result}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Extract File Name",
      "intent_keywords": [
        "name",
        "extract",
        "files_extract_filename",
        "file"
      ],
      "use_cases": [
        "Automating filename operations",
        "Processing filename in workflows",
        "Managing filename data efficiently",
        "Streamlining filename tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "filename",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "filename": "file_path",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of extract file name",
        "output_variable": "filename"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 63,
    "uid": "74c86c8a-5f2e-4c41-9c2c-d88352b31820",
    "packageName": "SmartBots",
    "actionName": "files_extract_fileextension",
    "actionDescription": "Extract File Extension",
    "actionGroup": "Files",
    "actionLabel": "Extract File Extension",
    "actionIcon": "<?xml version=\"1.0\" ?><svg fill=\"none\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.5 20C18.5 20.275 18.276 20.5 18 20.5H6C5.724 20.5 5.5 20.275 5.5 20V17H4V20C4 21.104 4.896 22 6 22H18C19.104 22 20 21.104 20 20V9.828C20 9.298 19.789 8.789 19.414 8.414L13.585 2.586C13.57 2.57105 13.5531 2.55808 13.5363 2.5452C13.5238 2.53567 13.5115 2.5262 13.5 2.516C13.429 2.452 13.359 2.389 13.281 2.336C13.2557 2.31894 13.2281 2.30548 13.2005 2.29207C13.1845 2.28426 13.1685 2.27647 13.153 2.268C13.1363 2.25859 13.1197 2.24897 13.103 2.23933C13.0488 2.20797 12.9944 2.17648 12.937 2.152C12.74 2.07 12.528 2.029 12.313 2.014C12.2933 2.01274 12.2738 2.01008 12.2542 2.00741C12.2271 2.00371 12.1999 2 12.172 2H6C4.896 2 4 2.896 4 4V13H5.5V4C5.5 3.725 5.724 3.5 6 3.5H12V8C12 9.104 12.896 10 14 10H18.5V20ZM13.5 4.621L17.378 8.5H14C13.724 8.5 13.5 8.275 13.5 8V4.621ZM8.75 11.5C8.33579 11.5 8 11.8358 8 12.25C8 12.6642 8.33579 13 8.75 13H15.25C15.6642 13 16 12.6642 16 12.25C16 11.8358 15.6642 11.5 15.25 11.5H8.75ZM2.75 14.25C2.33579 14.25 2 14.5858 2 15C2 15.4142 2.33579 15.75 2.75 15.75H9.25C9.66421 15.75 10 15.4142 10 15C10 14.5858 9.66421 14.25 9.25 14.25H2.75ZM8.75 17C8.33579 17 8 17.3358 8 17.75C8 18.1642 8.33579 18.5 8.75 18.5H15.25C15.6642 18.5 16 18.1642 16 17.75C16 17.3358 15.6642 17 15.25 17H8.75Z\" fill=\"#212121\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport os\n#endregion\n\n#region code\n_temp_filename, _temp_file_extension = os.path.splitext(f\"{{filename}}\")\n{{result}} = _temp_file_extension\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Extract File Extension",
      "intent_keywords": [
        "extract",
        "extension",
        "file",
        "files_extract_fileextension"
      ],
      "use_cases": [
        "Automating fileextension operations",
        "Processing fileextension in workflows",
        "Managing fileextension data efficiently",
        "Streamlining fileextension tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "filename",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "filename": "file_path",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of extract file extension",
        "output_variable": "filename"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 64,
    "uid": "98e09f88-36a8-4ffe-ba84-36f682c99a31",
    "packageName": "SmartBots",
    "actionName": "files_extract_basepath",
    "actionDescription": "Extract Filename Base Path",
    "actionGroup": "Files",
    "actionLabel": "Extract Filename Base Path",
    "actionIcon": "<?xml version=\"1.0\" ?><svg fill=\"none\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.5 20C18.5 20.275 18.276 20.5 18 20.5H6C5.724 20.5 5.5 20.275 5.5 20V17H4V20C4 21.104 4.896 22 6 22H18C19.104 22 20 21.104 20 20V9.828C20 9.298 19.789 8.789 19.414 8.414L13.585 2.586C13.57 2.57105 13.5531 2.55808 13.5363 2.5452C13.5238 2.53567 13.5115 2.5262 13.5 2.516C13.429 2.452 13.359 2.389 13.281 2.336C13.2557 2.31894 13.2281 2.30548 13.2005 2.29207C13.1845 2.28426 13.1685 2.27647 13.153 2.268C13.1363 2.25859 13.1197 2.24897 13.103 2.23933C13.0488 2.20797 12.9944 2.17648 12.937 2.152C12.74 2.07 12.528 2.029 12.313 2.014C12.2933 2.01274 12.2738 2.01008 12.2542 2.00741C12.2271 2.00371 12.1999 2 12.172 2H6C4.896 2 4 2.896 4 4V13H5.5V4C5.5 3.725 5.724 3.5 6 3.5H12V8C12 9.104 12.896 10 14 10H18.5V20ZM13.5 4.621L17.378 8.5H14C13.724 8.5 13.5 8.275 13.5 8V4.621ZM8.75 11.5C8.33579 11.5 8 11.8358 8 12.25C8 12.6642 8.33579 13 8.75 13H15.25C15.6642 13 16 12.6642 16 12.25C16 11.8358 15.6642 11.5 15.25 11.5H8.75ZM2.75 14.25C2.33579 14.25 2 14.5858 2 15C2 15.4142 2.33579 15.75 2.75 15.75H9.25C9.66421 15.75 10 15.4142 10 15C10 14.5858 9.66421 14.25 9.25 14.25H2.75ZM8.75 17C8.33579 17 8 17.3358 8 17.75C8 18.1642 8.33579 18.5 8.75 18.5H15.25C15.6642 18.5 16 18.1642 16 17.75C16 17.3358 15.6642 17 15.25 17H8.75Z\" fill=\"#212121\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport os\n#endregion\n\n#region code\n_temp_dirname = os.path.dirname(f\"{{filename}}\")\n{{result}} = _temp_dirname\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"filename\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Filename\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${filename}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"result\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Result\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": \"\",\r\n                    \"initialValue\": \"${result}\",\r\n                    \"content_sources\": [\r\n                        \"variable\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Extract Filename Base Path",
      "intent_keywords": [
        "files_extract_basepath",
        "path",
        "base",
        "extract",
        "filename"
      ],
      "use_cases": [
        "Automating basepath operations",
        "Processing basepath in workflows",
        "Managing basepath data efficiently",
        "Streamlining basepath tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "filename",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "filename": "file_path",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of extract filename base path",
        "output_variable": "filename"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 65,
    "uid": "98a68e0b-874f-48a2-8cbd-16273c11c611",
    "packageName": "SmartBots",
    "actionName": "statements_loop_continue",
    "actionDescription": "Loop Continue",
    "actionGroup": "Statements",
    "actionLabel": "Loop Continue",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M8.5 12H15.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.7453 8C21.5362 9.13383 22 10.5128 22 12C22 15.866 18.866 19 15 19H5.5L8.5 21.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M3.25469 16C2.46381 14.8662 2 13.4872 2 12C2 8.13401 5.13401 5 9 5H18.5L15.5 2.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\ncontinue\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Loop Continue",
      "intent_keywords": [
        "continue",
        "loop",
        "statements_loop_continue"
      ],
      "use_cases": [
        "Automating continue operations",
        "Processing continue in workflows",
        "Managing continue data efficiently",
        "Streamlining continue tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of loop continue",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 66,
    "uid": "0a57947c-698d-4f41-8443-7bd4dd80be77",
    "packageName": "SmartBots",
    "actionName": "statements_loop_break",
    "actionDescription": "Loop Break",
    "actionGroup": "Statements",
    "actionLabel": "Loop Break",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M8.5 12H15.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.7453 8C21.5362 9.13383 22 10.5128 22 12C22 15.866 18.866 19 15 19H5.5L8.5 21.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M3.25469 16C2.46381 14.8662 2 13.4872 2 12C2 8.13401 5.13401 5 9 5H18.5L15.5 2.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\nbreak\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Loop Break",
      "intent_keywords": [
        "break",
        "loop",
        "statements_loop_break"
      ],
      "use_cases": [
        "Automating break operations",
        "Processing break in workflows",
        "Managing break data efficiently",
        "Streamlining break tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of loop break",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 67,
    "uid": "c53b66ef-f5c8-4326-acdf-50054063ce28",
    "packageName": "SmartBots",
    "actionName": "files_unzip_files",
    "actionDescription": "Unzip Files",
    "actionGroup": "Files",
    "actionLabel": "Unzip Files",
    "actionIcon": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n<svg fill=\"#000000\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \r\n\t width=\"800px\" height=\"800px\" viewBox=\"0 0 31.519 31.519\"\r\n\t xml:space=\"preserve\">\r\n<g>\r\n\t<path d=\"M11.183,0L3.021,8.619v22.9h25.477V0H11.183z M21.132,24.505c-0.06,0.096-0.201,0.315-0.834,0.321\r\n\t\tc-0.635-0.006-0.777-0.227-0.836-0.321c-0.535-0.866,0.027-3.132,0.791-5.104h0.088C21.105,21.373,21.666,23.639,21.132,24.505z\r\n\t\t M10.464,3.625v3.818H6.847L10.464,3.625z M26.527,29.55H4.99V9.413h7.443V1.971h4.598v1.595h2.178v1.681h-2.178v1.857h2.178v1.857\r\n\t\th-2.178v1.857h2.178v1.761h-2.178v1.825H16.36v4.995h1.397c-0.715,2.07-1.276,4.707-0.28,6.327\r\n\t\tc0.397,0.646,1.208,1.411,2.794,1.429v0.004c0.009,0,0.018-0.002,0.025-0.002c0.009,0,0.017,0.002,0.025,0.002v-0.004\r\n\t\tc1.585-0.018,2.395-0.783,2.793-1.429c0.996-1.62,0.436-4.257-0.281-6.327h1.401v-4.995h-2.851v-1.825h2.179v-1.856h-2.177V8.961\r\n\t\th2.179V7.104h-2.179V5.327h2.179V3.47h-2.179V1.971h5.142L26.527,29.55L26.527,29.55z\"/>\r\n</g>\r\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport zipfile\n#endregion\n\n#region code\nwith zipfile.ZipFile(f\"{{zip_filename}}\",\"r\") as _temp_zip_ref:\n{{#if result_filenames != ''}}  \n  {{result_filenames}} = _temp_zip_ref.namelist()  \n{{/if}}  \n  _temp_zip_ref.extractall(f\"{{path_extract_to}}\")  \n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"zip_filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Zip Filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('zip_filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${zip_filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"path_extract_to\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Path To Extract\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('path_extract_to', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${path_extract_to}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result_filenames\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result Filenames\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result_filenames', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result_filenames}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Unzip Files",
      "intent_keywords": [
        "unzip",
        "files",
        "files_unzip_files"
      ],
      "use_cases": [
        "Automating files operations",
        "Processing files in workflows",
        "Managing files data efficiently",
        "Streamlining files tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "zip_filename"
        ],
        "optional_inputs": [
          "path_extract_to",
          "result_filenames"
        ],
        "input_types": {
          "zip_filename": "file_path",
          "path_extract_to": "string",
          "result_filenames": "file_path"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of unzip files",
        "output_variable": "zip_filename"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 68,
    "uid": "06ae49c7-e908-4e1e-865b-d8ebaf9d155e",
    "packageName": "SmartBots",
    "actionName": "statements_block",
    "actionDescription": "Block",
    "actionGroup": "Statements",
    "actionLabel": "Block",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 20C2 19.4477 2.44772 19 3 19H9C9.55228 19 10 19.4477 10 20C10 20.5523 9.55228 21 9 21H3C2.44772 21 2 20.5523 2 20Z\" fill=\"currentColor\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14 20C14 19.4477 14.4477 19 15 19H21C21.5523 19 22 19.4477 22 20C22 20.5523 21.5523 21 21 21H15C14.4477 21 14 20.5523 14 20Z\" fill=\"currentColor\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 4C2 3.44772 2.44772 3 3 3H9.52344C11.1803 3 12.5234 4.34315 12.5234 6V13.5244H14C14.4045 13.5244 14.7691 13.768 14.9239 14.1417C15.0787 14.5154 14.9931 14.9455 14.7071 15.2315L12.2306 17.7083C11.8426 18.0963 11.2145 18.0992 10.823 17.7149L8.29952 15.2381C8.00965 14.9536 7.92067 14.522 8.07435 14.146C8.22803 13.7701 8.59384 13.5244 9 13.5244H10.5234V6C10.5234 5.44772 10.0757 5 9.52344 5H3C2.44772 5 2 4.55228 2 4Z\" fill=\"currentColor\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{block_comment}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"block_comment\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Comment\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('block_comment', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${block_comment}\",\n                    \"content_sources\": null\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": true,
    "status": "S",
    "childrenIdent": false,
    "blockPropName": "block_comment",
    "ai_metadata": {
      "natural_language_description": "Block",
      "intent_keywords": [
        "statements_block",
        "block"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [
          "block_comment"
        ],
        "input_types": {
          "block_comment": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of block",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 69,
    "uid": "4ddc18e2-1ea8-44ad-b1fa-d77a5fad9d2a",
    "packageName": "SmartBots",
    "actionName": "dataframe_read_excel_table",
    "actionDescription": "Reads data from excel table and loads it for processing",
    "actionGroup": "Dataframe",
    "actionLabel": "Read Excel Table To Dataframe",
    "actionIcon": "<?xml version=\"1.0\" ?><svg id=\"Layer_1\" style=\"enable-background:new 0 0 24 24;\" version=\"1.1\" viewBox=\"0 0 24 24\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g><g><path d=\"M13.5,23.5c-0.025,0-0.051-0.002-0.076-0.006l-13-2C0.18,21.456,0,21.246,0,21V4c0-0.233,0.161-0.435,0.388-0.487l13-3    c0.148-0.033,0.305,0.001,0.424,0.096C13.931,0.703,14,0.847,14,1v22c0,0.146-0.063,0.285-0.174,0.379    C13.734,23.458,13.619,23.5,13.5,23.5z M1,20.571l12,1.846V1.628L1,4.398V20.571z\"/></g><g><path d=\"M23.5,21.5h-10c-0.276,0-0.5-0.224-0.5-0.5s0.224-0.5,0.5-0.5H23v-17h-9.5C13.224,3.5,13,3.276,13,3s0.224-0.5,0.5-0.5h10    C23.776,2.5,24,2.723,24,3v18C24,21.276,23.776,21.5,23.5,21.5z\"/></g><g><path d=\"M9.5,16.5c-0.167,0-0.33-0.083-0.424-0.235l-5-8C3.93,8.03,4.001,7.722,4.235,7.576C4.47,7.429,4.778,7.5,4.924,7.735l5,8    c0.146,0.234,0.075,0.543-0.159,0.689C9.683,16.475,9.591,16.5,9.5,16.5z\"/></g><g><path d=\"M4.5,16.5c-0.09,0-0.182-0.024-0.265-0.076c-0.234-0.146-0.305-0.455-0.159-0.689l5-8C9.222,7.5,9.53,7.429,9.765,7.576    C9.999,7.722,10.07,8.03,9.924,8.265l-5,8C4.829,16.417,4.666,16.5,4.5,16.5z\"/></g><g><path d=\"M17.5,21.5c-0.276,0-0.5-0.224-0.5-0.5V3c0-0.276,0.224-0.5,0.5-0.5S18,2.723,18,3v18C18,21.276,17.776,21.5,17.5,21.5z\"/></g><g><path d=\"M23.5,18.5h-10c-0.276,0-0.5-0.224-0.5-0.5s0.224-0.5,0.5-0.5h10c0.276,0,0.5,0.224,0.5,0.5S23.776,18.5,23.5,18.5z\"/></g><g><path d=\"M23.5,15.5h-10c-0.276,0-0.5-0.224-0.5-0.5s0.224-0.5,0.5-0.5h10c0.276,0,0.5,0.224,0.5,0.5S23.776,15.5,23.5,15.5z\"/></g><g><path d=\"M23.5,12.5h-10c-0.276,0-0.5-0.224-0.5-0.5s0.224-0.5,0.5-0.5h10c0.276,0,0.5,0.224,0.5,0.5S23.776,12.5,23.5,12.5z\"/></g><g><path d=\"M23.5,9.5h-10C13.224,9.5,13,9.276,13,9s0.224-0.5,0.5-0.5h10C23.776,8.5,24,8.723,24,9S23.776,9.5,23.5,9.5z\"/></g><g><path d=\"M23.5,6.5h-10C13.224,6.5,13,6.276,13,6s0.224-0.5,0.5-0.5h10C23.776,5.5,24,5.723,24,6S23.776,6.5,23.5,6.5z\"/></g></g><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport pandas as pd\n#endregion\n\n#region code\n_temp_args = \\{\\}\n{{#isNotEmpty excel_sheet_name}}_temp_args[\"sheet_name\"] = f\"{{excel_sheet_name}}\"{{/isNotEmpty}}\n{{#isNotEmpty skip_rows}}_temp_args[\"skiprows\"] = {{skip_rows}}{{/isNotEmpty}}\n{{#isNotEmpty skip_footer_rows}}_temp_args[\"skipfooter\"] = {{skip_footer_rows}}{{/isNotEmpty}}\n{{#isNotEmpty column_names}}\n_temp_args[\"usecols\"] = lambda x: x in [f\"{{column_names}}\"]\n{{/isNotEmpty}}\n{{#isNotEmpty converters}}\n_temp_args[\"converters\"] = {{converters}}\n{{/isNotEmpty}}\n{{result_dataframe}} = pd.read_excel(f\"{{excel_filename}}\", **_temp_args)\n#endregion\n\n#region requiredExtensions\npandas\n#endregion\n\n#region toString\n{{excel_filename}} - {{excel_sheet_name}} \n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"excel_filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Excel Filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('excel_filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${excel_filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"excel_sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Excel Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('excel_sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"0\",\n                    \"initialValue\": \"${excel_sheet_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"skip_rows\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Skip Rows\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('skip_rows', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"0\",\n                    \"initialValue\": \"${skip_rows}\",\n                    \"content_sources\": null\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"skip_footer_rows\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Skip Footer Rows\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('skip_footer_rows', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"0\",\n                    \"initialValue\": \"${skip_footer_rows}\",\n                    \"content_sources\": null\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"column_names\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Column Names\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('column_names', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${column_names}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"converters\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Converters\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('converters', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${converters}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result_dataframe\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result Dataframe\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result_dataframe', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result_dataframe}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Reads data from excel table and loads it for processing",
      "intent_keywords": [
        "dataframe_read_excel_table",
        "retrieve",
        "excel",
        "load",
        "fetch",
        "to",
        "import",
        "get",
        "table",
        "read",
        "dataframe"
      ],
      "use_cases": [
        "Automating excel table operations",
        "Processing excel table in workflows",
        "Managing excel table data efficiently",
        "Streamlining excel table tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "excel_filename",
          "result_dataframe"
        ],
        "optional_inputs": [
          "excel_sheet_name",
          "skip_rows",
          "skip_footer_rows",
          "column_names",
          "converters"
        ],
        "input_types": {
          "excel_filename": "file_path",
          "excel_sheet_name": "string",
          "skip_rows": "string",
          "skip_footer_rows": "string",
          "column_names": "string",
          "converters": "string",
          "result_dataframe": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of read excel table to dataframe",
        "output_variable": "excel_filename"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library",
        "file_system_access"
      ],
      "typical_next_steps": [
        "transform",
        "filter",
        "process",
        "analyze"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 70,
    "uid": "26566189-1d93-47db-b2b1-69679ff3a959",
    "packageName": "SmartBots",
    "actionName": "dataframe_write_to_file",
    "actionDescription": "Saves or exports data to to file",
    "actionGroup": "Dataframe",
    "actionLabel": "Write Dataframe To File",
    "actionIcon": "<?xml version=\"1.0\" ?><svg fill=\"none\" height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5 3C3.89543 3 3 3.89543 3 5V13C3 14.1046 3.89543 15 5 15H13C14.1046 15 15 14.1046 15 13V6.62132C15 6.09089 14.7893 5.58218 14.4142 5.20711L12.7929 3.58579C12.4178 3.21071 11.9091 3 11.3787 3H5ZM4 5C4 4.44772 4.44772 4 5 4H6V5.5C6 6.32843 6.67157 7 7.5 7H9.5C10.3284 7 11 6.32843 11 5.5V4H11.3787C11.6439 4 11.8982 4.10536 12.0858 4.29289L13.7071 5.91421C13.8946 6.10175 14 6.3561 14 6.62132V13C14 13.5523 13.5523 14 13 14V10.5C13 9.67157 12.3284 9 11.5 9H6.5C5.67157 9 5 9.67157 5 10.5V14C4.44772 14 4 13.5523 4 13V5ZM7 5.5V4H10V5.5C10 5.77614 9.77614 6 9.5 6H7.5C7.22386 6 7 5.77614 7 5.5ZM12 10.5V14H6V10.5C6 10.2239 6.22386 10 6.5 10H11.5C11.7761 10 12 10.2239 12 10.5ZM8.49978 17.0003C7.54613 17.0003 6.68156 16.6189 6.05029 16.0003H13.4998C14.8805 16.0003 15.9998 14.881 15.9998 13.5003V6.05078C16.6184 6.68205 16.9998 7.54662 16.9998 8.50027V13.5003C16.9998 15.4333 15.4328 17.0003 13.4998 17.0003H8.49978Z\" fill=\"#212121\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport pandas as pd\n#endregion\n\n#region code\n{{#if output_format == 'xlsx'}}\nif isinstance({{source_dataframe}}, dict):\n  _temp_writer = pd.ExcelWriter(f\"{{output_filename}}\", engine='xlsxwriter')\n  for _temp_name, _temp_df in {{source_dataframe}}.items():\n    _temp_df.to_excel(_temp_writer, sheet_name=_temp_name, index=False)\n  _temp_writer.close()    \nelse:    \n  {{source_dataframe}}.to_excel(f\"{{output_filename}}\", index=False)\n{{/if}}\n{{#if output_format != 'xlsx'}}\n{{source_dataframe}}.to_{{output_format}}(f\"{{output_filename}}\", index=False, encoding=\"utf-8-sig\")\n{{/if}}\n#endregion\n\n#region requiredExtensions\npandas\nnumpy\n#endregion\n\n#region toString\n{{output_format}} - {{output_filename}}\n#endregion\n",
    "parameters": "{\n  \"type\": \"wrap\",\n  \"args\": {\n    \"runSpacing\": 12.0,\n    \"children\": [\n      {\n        \"type\": \"text_form_field\",\n        \"id\": \"source_dataframe\",\n        \"args\": {\n          \"decoration\": {\n            \"labelText\": \"Dataframe\",\n            \"suffixIcon\": {\n              \"type\": \"icon_button\",\n              \"args\": {\n                \"icon\": {\n                  \"type\": \"icon\",\n                  \"args\": {\n                    \"icon\": {\n                      \"codePoint\": 58369,\n                      \"fontFamily\": \"MaterialIcons\",\n                      \"size\": 50\n                    }\n                  }\n                },\n                \"onPressed\": \"${select_content_source('source_dataframe', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n              }\n            }\n          },\n          \"value\": \"\",\n          \"initialValue\": \"${source_dataframe}\",\n          \"content_sources\": [\n            \"variable\"\n          ]\n        },\n        \"validators\": [\n          {\n            \"type\": \"required\"\n          }\n        ]\n      },\n      {\n        \"type\": \"dropdown_button_form_field\",\n        \"id\": \"output_format\",\n        \"args\": {\n          \"decoration\": {\n            \"labelText\": \"Output Format\"\n          },\n          \"items\": [\n            \"json\",\n            \"csv\",\n            \"xlsx\",\n            \"html\",\n            \"xml\",\n            \"latex\",\n            \"parquet\",\n            \"orc\",\n            \"sql\"\n          ],\n          \"value\": \"${output_format}\",\n          \"validators\": [\n            {\n              \"type\": \"required\"\n            }\n          ]\n        }\n      },\n      {\n        \"type\": \"text_form_field\",\n        \"id\": \"output_filename\",\n        \"args\": {\n          \"decoration\": {\n            \"labelText\": \"Output Filename\",\n            \"suffixIcon\": {\n              \"type\": \"icon_button\",\n              \"args\": {\n                \"icon\": {\n                  \"type\": \"icon\",\n                  \"args\": {\n                    \"icon\": {\n                      \"codePoint\": 58369,\n                      \"fontFamily\": \"MaterialIcons\",\n                      \"size\": 50\n                    }\n                  }\n                },\n                \"onPressed\": \"${select_content_source('output_filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n              }\n            }\n          },\n          \"value\": \"\",\n          \"initialValue\": \"${output_filename}\",\n          \"content_sources\": [\n            \"variable\"\n          ]\n        },\n        \"validators\": [\n          {\n            \"type\": \"required\"\n          }\n        ]\n      }\n    ]\n  }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Saves or exports data to to file",
      "intent_keywords": [
        "write",
        "dataframe_write_to_file",
        "store",
        "create",
        "file",
        "save",
        "export",
        "to",
        "dataframe"
      ],
      "use_cases": [
        "Automating to file operations",
        "Processing to file in workflows",
        "Managing to file data efficiently",
        "Streamlining to file tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source_dataframe",
          "output_format",
          "output_filename"
        ],
        "optional_inputs": [],
        "input_types": {
          "source_dataframe": "string",
          "output_format": "selection",
          "output_filename": "file_path"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of write dataframe to file",
        "output_variable": "source_dataframe"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library",
        "file_system_access"
      ],
      "typical_next_steps": [
        "notify",
        "backup",
        "validate"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 71,
    "uid": "06f719dd-cd81-4a2b-b597-008f88e80144",
    "packageName": "SmartBots",
    "actionName": "dataframe_get_maxminprom",
    "actionDescription": "Get Sum, Avg, Max, Min, Count, Distinct from Dataframe",
    "actionGroup": "Dataframe",
    "actionLabel": "Get Sum, Avg, Max, Min, Count, Distinct from Dataframe",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17 6.5L15 6.5C14.4477 6.5 14 6.05229 14 5.5C14 4.94772 14.4477 4.5 15 4.5L17 4.5C17.5523 4.5 18 4.94772 18 5.5C18 6.05229 17.5523 6.5 17 6.5Z\" fill=\"currentColor\" />\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 1C3.34315 1 2 2.34315 2 4V19C2 20.6569 3.34315 22 5 22H18C19.6569 22 21 20.6569 21 19V4C21 2.34315 19.6569 1 18 1H5ZM4 4C4 3.44772 4.44772 3 5 3H18C18.5523 3 19 3.44772 19 4V8.25H4V4ZM5.5 13C5.5 12.4477 5.94772 12 6.5 12H7.5C8.05228 12 8.5 12.4477 8.5 13C8.5 13.5523 8.05228 14 7.5 14H6.5C5.94772 14 5.5 13.5523 5.5 13ZM10 13C10 12.4477 10.4477 12 11 12H12C12.5523 12 13 12.4477 13 13C13 13.5523 12.5523 14 12 14H11C10.4477 14 10 13.5523 10 13ZM14.5 13C14.5 12.4477 14.9477 12 15.5 12H16.5C17.0523 12 17.5 12.4477 17.5 13C17.5 13.5523 17.0523 14 16.5 14H15.5C14.9477 14 14.5 13.5523 14.5 13ZM6.5 16C5.94772 16 5.5 16.4477 5.5 17C5.5 17.5523 5.94772 18 6.5 18H7.5C8.05228 18 8.5 17.5523 8.5 17C8.5 16.4477 8.05228 16 7.5 16H6.5ZM11 16C10.4477 16 10 16.4477 10 17C10 17.5523 10.4477 18 11 18H12C12.5523 18 13 17.5523 13 17C13 16.4477 12.5523 16 12 16H11ZM15.5 16C14.9477 16 14.5 16.4477 14.5 17C14.5 17.5523 14.9477 18 15.5 18H16.5C17.0523 18 17.5 17.5523 17.5 17C17.5 16.4477 17.0523 16 16.5 16H15.5Z\" fill=\"currentColor\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n_temp_serie = {{source_dataframe}}[f\"{{by_column}}\"]\n{{#if calculation_kind == 'sum'}}\n{{result}} = _temp_serie.sum()\n{{/if}}\n{{#if calculation_kind == 'avg'}}\n{{result}} = _temp_serie.mean()\n{{/if}}\n{{#if calculation_kind == 'max'}}\n{{result}} = _temp_serie.max()\n{{/if}}\n{{#if calculation_kind == 'min'}}\n{{result}} = _temp_serie.min()\n{{/if}}\n{{#if calculation_kind == 'count'}}\n{{result}} = _temp_serie.count()\n{{/if}}\n{{#if calculation_kind == 'distinct'}}\n{{result}} = _temp_serie.unique()\n{{/if}}\n#endregion\n\n#region requiredExtensions\npandas\n#endregion\n\n#region toString\n{{calculation_kind}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source_dataframe\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source Dataframe\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source_dataframe', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source_dataframe}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"dropdown_button_form_field\",\n                \"id\": \"calculation_kind\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Calculation Kind\"\n                    },\n                    \"items\": [\n                        \"sum\",\n                        \"avg\",\n                        \"min\",\n                        \"max\",\n                        \"count\",\n                        \"distinct\"                        \n                    ],\n                    \"initialValue\": \"${calculation_kind}\",\n                    \"value\": \"${calculation_kind}\",\n                    \"validators\": [\n                        {\n                            \"type\": \"required\"\n                        }\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"by_column\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"By Column\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('by_column', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${by_column}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Get Sum, Avg, Max, Min, Count, Distinct from Dataframe",
      "intent_keywords": [
        "dataframe_get_maxminprom",
        "avg",
        "from",
        "min",
        "count",
        "distinct",
        "max",
        "get",
        "sum",
        "dataframe"
      ],
      "use_cases": [
        "Automating maxminprom operations",
        "Processing maxminprom in workflows",
        "Managing maxminprom data efficiently",
        "Streamlining maxminprom tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source_dataframe",
          "calculation_kind",
          "by_column",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "source_dataframe": "string",
          "calculation_kind": "selection",
          "by_column": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of get sum, avg, max, min, count, distinct from dataframe",
        "output_variable": "source_dataframe"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 72,
    "uid": "b96d350b-a3fb-4694-9692-70d3d4c4d2fc",
    "packageName": "SmartBots",
    "actionName": "dataframe_filter",
    "actionDescription": "Dateframe Filter By Expression",
    "actionGroup": "Dataframe",
    "actionLabel": "Dateframe Filter By Expression",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M8.50006 12H15.5001M10.5001 15.5H13.5001M7.50006 8.5H16.5001\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M19 3H5C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = {{source_dataframe}}.query(f\"{{filter_expression}}\")\n#endregion\n\n#region requiredExtensions\npandas\n#endregion\n\n#region toString\n{{filter_expression}} - {{result_dataframe}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source_dataframe\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source Dataframe\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source_dataframe', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source_dataframe}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"filter_expression\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Filter Expression\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('filter_expression', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${filter_expression}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result Dataframe\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Dateframe Filter By Expression",
      "intent_keywords": [
        "filter",
        "by",
        "expression",
        "dataframe_filter",
        "dateframe"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source_dataframe",
          "filter_expression",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "source_dataframe": "string",
          "filter_expression": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of dateframe filter by expression",
        "output_variable": "source_dataframe"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 73,
    "uid": "b9971f0a-f55c-4d47-9171-63faf4a3f263",
    "packageName": "SmartBots",
    "actionName": "system_calculate",
    "actionDescription": "Calculate",
    "actionGroup": "System",
    "actionLabel": "Calculate",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M21.5 12.95V11.05C21.5 7.01949 21.5 5.00424 20.1088 3.75212C18.7175 2.5 16.4783 2.5 12 2.5C7.52166 2.5 5.28249 2.5 3.89124 3.75212C2.5 5.00424 2.5 7.01949 2.5 11.05V12.95C2.5 16.9805 2.5 18.9958 3.89124 20.2479C5.28249 21.5 7.52166 21.5 12 21.5C16.4783 21.5 18.7175 21.5 20.1088 20.2479C21.5 18.9958 21.5 16.9805 21.5 12.95Z\" stroke=\"currentColor\" stroke-width=\"1.5\" />\n    <path d=\"M18 8H14M16 6L16 10\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M18 17.5H14\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M18 14.5H14\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M10 17.5L8.25 15.75M8.25 15.75L6.5 14M8.25 15.75L10 14M8.25 15.75L6.5 17.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M10 8H6\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = {{calculation}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{result}} = {{calculation}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"calculation\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Calculation\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('calculation', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${calculation}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Calculate",
      "intent_keywords": [
        "calculate",
        "system_calculate"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "calculation",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "calculation": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of calculate",
        "output_variable": "calculation"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 74,
    "uid": "2d1556d4-c201-4190-bbd4-d422262d7b2b",
    "packageName": "SmartBots",
    "actionName": "variable_add_datetime",
    "actionDescription": "Add To Datetime",
    "actionGroup": "Variable",
    "actionLabel": "Add To Datetime",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M17.5 15V22M21 18.5L14 18.5\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M16.5 2V6M7.5 2V6\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21 13V6C21 4.89543 20.1046 4 19 4H5C3.89543 4 3 4.89543 3 6V20C3 21.1046 3.89543 22 5 22H12\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M3 10H21\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom datetime import timedelta\nfrom dateutil.relativedelta import relativedelta\n#endregion\n\n#region code\n{{#inList amount_unit 'years' 'months'}}\n{{datetime_result}} = {{source}} + relativedelta({{amount_unit}}={{amount}})\n{{/inList}}\n{{#inList amount_unit 'milliseconds' 'seconds' 'minutes' 'hours' 'days' 'weeks'}}\n{{datetime_result}} = {{source}} + timedelta({{amount_unit}}={{amount}})\n{{/inList}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{datetime_result}} = add {{amount}} {{amount_unit}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Datetime Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"amount_unit\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Amount Unit\"\r\n                    },\r\n                    \"items\": [\r\n                        \"milliseconds\",\r\n                        \"seconds\",\r\n                        \"minutes\",\r\n                        \"hours\",\r\n                        \"days\",\r\n                        \"weeks\",\r\n                        \"months\",\r\n                        \"years\"\r\n                    ],\r\n                    \"initialValue\": \"${amount_unit}\",\r\n                    \"value\": \"${amount_unit}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"amount\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Amount\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('amount', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${amount}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\r,\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"datetime_result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Datetime Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('datetime_result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${datetime_result}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Add To Datetime",
      "intent_keywords": [
        "add",
        "variable_add_datetime",
        "datetime",
        "to"
      ],
      "use_cases": [
        "Automating datetime operations",
        "Processing datetime in workflows",
        "Managing datetime data efficiently",
        "Streamlining datetime tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source",
          "amount_unit",
          "amount",
          "datetime_result"
        ],
        "optional_inputs": [],
        "input_types": {
          "source": "string",
          "amount_unit": "selection",
          "amount": "string",
          "datetime_result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of add to datetime",
        "output_variable": "source"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 75,
    "uid": "afe73fe5-fd03-42d8-9bba-4b86192fd77d",
    "packageName": "SmartBots",
    "actionName": "excel_append_row_sheet",
    "actionDescription": "Append Rows to Excel Sheet",
    "actionGroup": "Excel",
    "actionLabel": "Append Rows to Excel Sheet",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M21 12.0278V5C21 3.34315 19.6569 2 18 2H5C3.34315 2 2 3.34315 2 5V18C2 19.6569 3.34315 21 5 21L12.0278 21\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M2 7H21\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M11 16H12.5M7 16H8M11 12H16M7 12H8\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M15 18.5H22M18.5 22V15\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom openpyxl.utils.cell import coordinate_from_string, column_index_from_string\n#endregion\n\n#region code_add:temp_append_rows_xlsx\nfrom openpyxl.utils.cell import coordinate_from_string, column_index_from_string\n\ndef appendAfter(ws, dfToAppend):\n  for _temp_index, _temp_row in dfToAppend.iterrows():\r\n    ws.append(_temp_row)\n\ndef appendIn(ws, dfToAppend, fromCell, frmtCols):\n  _temp_xy = coordinate_from_string(fromCell)\n  _temp_col_index = column_index_from_string(_temp_xy[0])\n  _temp_row_index = _temp_xy[1]\n  for _temp_index, _temp_row in dfToAppend.iterrows():\n    _temp_col_i = _temp_col_index\n    for _temp_key, _temp_value in _temp_row.items():\n      if _temp_key in frmtCols:\n        ws.cell(row=_temp_row_index, column=_temp_col_i).value = frmtCols[_temp_key]%(_temp_value)\n      else:\n        ws.cell(row=_temp_row_index, column=_temp_col_i).value = _temp_value\n      _temp_col_i = _temp_col_i + 1\n    _temp_row_index = _temp_row_index + 1      \n#endregion\n\n#region code\n{{#isEmpty sheet_name}}\n_temp_ws = {{handler_excel}}.active\n{{/isEmpty}}\n{{#isNotEmpty sheet_name}}\n_temp_ws = {{handler_excel}}.sheet[f\"{{sheet_name}}\"]\n{{/isNotEmpty}}\n{{#isEmpty from_cell}}\ntemp_append_rows_xlsx.appendAfter(_temp_ws, {{dataframe_to_append}})\n{{/isEmpty}}\n{{#isEmpty json_columns_format}}\n_temp__frmt = {}\n{{/isEmpty}}\n{{#isNotEmpty json_columns_format}}\n_temp__frmt = {{json_columns_format}}\n{{/isNotEmpty}}\n{{#isNotEmpty from_cell}}\ntemp_append_rows_xlsx.appendIn(_temp_ws, {{dataframe_to_append}}, f\"{{from_cell}}\", _temp__frmt)\n{{/isNotEmpty}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{dataframe_to_append}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler_excel\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler Excel\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler_excel', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler_excel}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheet_name}\",\n                    \"content_sources\": null\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"dataframe_to_append\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Dataframe to Append\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('dataframe_to_append', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${dataframe_to_append}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"from_cell\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"From Cell\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('from_cell', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${from_cell}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"json_columns_format\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Columns Format\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('json_columns_format', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${json_columns_format}\",\n                    \"content_sources\": null\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Append Rows to Excel Sheet",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "excel",
        "rows",
        "excel_append_row_sheet",
        "xlsx",
        "xls",
        "load",
        "save",
        "append",
        "to",
        "sheet",
        "read"
      ],
      "use_cases": [
        "Automating row sheet operations",
        "Processing row sheet in workflows",
        "Managing row sheet data efficiently",
        "Streamlining row sheet tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler_excel",
          "dataframe_to_append"
        ],
        "optional_inputs": [
          "sheet_name",
          "from_cell",
          "json_columns_format"
        ],
        "input_types": {
          "handler_excel": "variable_name",
          "sheet_name": "string",
          "dataframe_to_append": "string",
          "from_cell": "string",
          "json_columns_format": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of append rows to excel sheet",
        "output_variable": "handler_excel"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 76,
    "uid": "921aac86-6527-418f-8cf6-b214dd84bad6",
    "packageName": "SmartBots",
    "actionName": "files_copy_file",
    "actionDescription": "Copy File",
    "actionGroup": "Files",
    "actionLabel": "Copy File",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M17.0235 3.03358L16.0689 2.77924C13.369 2.05986 12.019 1.70018 10.9555 2.31074C9.89196 2.9213 9.53023 4.26367 8.80678 6.94841L7.78366 10.7452C7.0602 13.4299 6.69848 14.7723 7.3125 15.8298C7.92652 16.8874 9.27651 17.247 11.9765 17.9664L12.9311 18.2208C15.631 18.9401 16.981 19.2998 18.0445 18.6893C19.108 18.0787 19.4698 16.7363 20.1932 14.0516L21.2163 10.2548C21.9398 7.57005 22.3015 6.22768 21.6875 5.17016C21.0735 4.11264 19.7235 3.75295 17.0235 3.03358Z\" stroke=\"currentColor\" stroke-width=\"1.5\" />\n    <path d=\"M16.8538 7.43306C16.8538 8.24714 16.1901 8.90709 15.3714 8.90709C14.5527 8.90709 13.889 8.24714 13.889 7.43306C13.889 6.61898 14.5527 5.95904 15.3714 5.95904C16.1901 5.95904 16.8538 6.61898 16.8538 7.43306Z\" stroke=\"currentColor\" stroke-width=\"1.5\" />\n    <path d=\"M12 20.9463L11.0477 21.2056C8.35403 21.9391 7.00722 22.3059 5.94619 21.6833C4.88517 21.0608 4.52429 19.6921 3.80253 16.9547L2.78182 13.0834C2.06006 10.346 1.69918 8.97731 2.31177 7.89904C2.84167 6.96631 4 7.00027 5.5 7.00015\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" />\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport shutil\nimport os\n#endregion\n\n#region code\n{{#if action_if_exists == 'replace'}}\nshutil.copy2(f\"{{source_file}}\", f\"{{destination}}\")\n{{/if}}\n{{#if action_if_exists == 'no_copy'}}\n_temp_file_exists = os.path.exists(f\"{{destination}}\")\nif not _temp_file_exists:  \n  shutil.copy2(f\"{{source_file}}\", f\"{{destination}}\")\n{{/if}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{source_file}} > {{destination}} - if exists {{action_if_exists}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source_file\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source File\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source_file', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source_file}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"destination\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Destination\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('destination', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${destination}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\r\n            {\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"action_if_exists\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Action If Exists\"\r\n                    },\r\n                    \"items\": [\r\n                        \"replace\",\r\n                        \"no_copy\"\r\n                    ],\r\n                    \"initialValue\": \"${action_if_exists}\",\r\n                    \"value\": \"${action_if_exists}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Copy File",
      "intent_keywords": [
        "copy",
        "files_copy_file",
        "file"
      ],
      "use_cases": [
        "Automating file operations",
        "Processing file in workflows",
        "Managing file data efficiently",
        "Streamlining file tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source_file",
          "destination",
          "action_if_exists"
        ],
        "optional_inputs": [],
        "input_types": {
          "source_file": "file_path",
          "destination": "string",
          "action_if_exists": "selection"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of copy file",
        "output_variable": "source_file"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 77,
    "uid": "90439981-fb74-42f0-9f41-6aadeb94c7df",
    "packageName": "SmartBots",
    "actionName": "excel_close_workbook",
    "actionDescription": "Close Excel Book",
    "actionGroup": "Excel",
    "actionLabel": "Close Excel Book",
    "actionIcon": "<?xml version=\"1.0\" ?><svg height=\"28.000015\" id=\"svg8\" version=\"1.1\" viewBox=\"0 0 6.2595601 7.4083376\" width=\"23.65818\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:svg=\"http://www.w3.org/2000/svg\"><defs id=\"defs2\"/><g id=\"layer1\" transform=\"translate(-44.011789,-320.81248)\"><path d=\"m 173.00195,122 c -0.55226,-0.002 -1.00169,0.44383 -1.0039,0.99609 v 4.00196 c -0.0303,1.36326 2.03026,1.36326 2,0 V 124 h 14.0039 v 24 h -14.0039 v -2.99805 c 0.0303,-1.36326 -2.03026,-1.36326 -2,0 v 4.00196 c 0.002,0.55226 0.45164,0.99819 1.0039,0.99609 h 15.9961 c 0.55226,0.002 1.00169,-0.44383 1.0039,-0.99609 v -26.00782 c -0.002,-0.55226 -0.45164,-0.99819 -1.0039,-0.99609 z m -0.0156,7.3457 c -3.65973,0 -6.64258,2.99068 -6.64258,6.65039 0,3.65976 2.98285,6.64453 6.64258,6.64453 3.65973,0 6.65234,-2.98477 6.65234,-6.64453 0,-3.65971 -2.99261,-6.65039 -6.65234,-6.65039 z m 0,2 c 2.57885,0 4.65234,2.07155 4.65234,4.65039 0,2.57889 -2.07349,4.64258 -4.65234,4.64258 -2.57885,0 -4.64258,-2.06369 -4.64258,-4.64258 0,-2.57884 2.06373,-4.65039 4.64258,-4.65039 z m -2.81836,3.24024 1.41406,1.41406 -1.41406,1.41406 c -0.86543,0.94317 0.47283,2.28144 1.41601,1.41602 l 1.41407,-1.41406 1.41406,1.41406 c 0.94376,0.9866 2.40327,-0.4709 1.41797,-1.41602 L 174.41602,136 l 1.41406,-1.41406 c 0.93611,-0.93611 -0.47973,-2.35621 -1.41797,-1.41797 l -1.41406,1.41406 -1.41407,-1.41406 c -0.97013,-0.97013 -2.37322,0.46076 -1.41601,1.41797 z\" id=\"icon-20\" style=\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;writing-mode:lr-tb;direction:ltr;text-orientation:mixed;dominant-baseline:auto;baseline-shift:baseline;text-anchor:start;white-space:normal;shape-padding:0;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;vector-effect:none;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate\" transform=\"matrix(0.26458333,0,0,0.26458333,0,288.53332)\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport openpyxl\n#endregion\n\n#region code\n{{handler}}.close()\n#endregion\n\n#region requiredExtensions\nopenpyxl\n#endregion\n\n#region toString\n{{handler}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Close Excel Book",
      "intent_keywords": [
        "excel_close_workbook",
        "write",
        "spreadsheet",
        "book",
        "excel",
        "xlsx",
        "xls",
        "load",
        "save",
        "read",
        "close"
      ],
      "use_cases": [
        "Automating workbook operations",
        "Processing workbook in workflows",
        "Managing workbook data efficiently",
        "Streamlining workbook tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of close excel book",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 78,
    "uid": "409d9638-0bc9-4cfa-9a20-c7031ff2ebd9",
    "packageName": "SmartBots",
    "actionName": "excel_save_excel_book",
    "actionDescription": "Save Excel Book",
    "actionGroup": "Excel",
    "actionLabel": "Save Excel Book",
    "actionIcon": "<?xml version=\"1.0\" ?><svg fill=\"none\" height=\"24\" stroke-width=\"1.5\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 19V5C3 3.89543 3.89543 3 5 3H16.1716C16.702 3 17.2107 3.21071 17.5858 3.58579L20.4142 6.41421C20.7893 6.78929 21 7.29799 21 7.82843V19C21 20.1046 20.1046 21 19 21H5C3.89543 21 3 20.1046 3 19Z\" stroke=\"currentColor\" stroke-width=\"1.5\"/><path d=\"M8.6 9H15.4C15.7314 9 16 8.73137 16 8.4V3.6C16 3.26863 15.7314 3 15.4 3H8.6C8.26863 3 8 3.26863 8 3.6V8.4C8 8.73137 8.26863 9 8.6 9Z\" stroke=\"currentColor\" stroke-width=\"1.5\"/><path d=\"M6 13.6V21H18V13.6C18 13.2686 17.7314 13 17.4 13H6.6C6.26863 13 6 13.2686 6 13.6Z\" stroke=\"currentColor\" stroke-width=\"1.5\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport openpyxl\n#endregion\n\n#region code\n{{#isNotEmpty output_filename}} \n{{handler}}.save(f\"{{output_filename}}\")\n{{/isNotEmpty}}\n{{#isEmpty output_filename}} \n{{handler}}.save()\n{{/isEmpty}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{output_filename}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Excel Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"output_filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Save As\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('output_filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${output_filename}\",\n                    \"content_sources\": null\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Save Excel Book",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "book",
        "excel",
        "xlsx",
        "xls",
        "load",
        "excel_save_excel_book",
        "save",
        "read"
      ],
      "use_cases": [
        "Exporting processed data to Excel reports",
        "Creating financial summaries for stakeholders",
        "Generating inventory reports for management",
        "Saving analysis results for archival"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler"
        ],
        "optional_inputs": [
          "output_filename"
        ],
        "input_types": {
          "handler": "variable_name",
          "output_filename": "file_path"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of save excel book",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library",
        "file_system_access"
      ],
      "typical_next_steps": [
        "file_backup",
        "notification_email"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 79,
    "uid": "d4093b4e-e673-415c-bbc4-83aed896b4ed",
    "packageName": "SmartBots",
    "actionName": "excel_find_last_row",
    "actionDescription": "Locates and identifies last row using specified criteria",
    "actionGroup": "Excel",
    "actionLabel": "Find Last Row In Sheet",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{#isEmpty sheet_name}}\n_temp_ws = {{excel_handler}}.active\n{{/isEmpty}}\n{{#isNotEmpty sheet_name}}\n_temp_ws = {{excel_handler}}.sheet[f\"{{sheet_name}}\"]\n{{/isNotEmpty}}\n{{result}} = None\n_temp_col = f\"{{column_by}}\"\n_temp_row_ult = len(_temp_ws[_temp_col])\nwhile _temp_row_ult > 0:\n  _temp_v = _temp_ws[\"\\{\\}\\{\\}\".format(_temp_col, _temp_row_ult)].value\n  if _temp_v != None and _temp_v != \"\":\n    {{result}} = _temp_row_ult\n    break\n  _temp_row_ult = _temp_row_ult - 1\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{excel_handler}} - {{sheet_name}} - {{column_by}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"excel_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Excel Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('excel_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${excel_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheet_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"column_by\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Column By\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('column_by', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${column_by}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Locates and identifies last row using specified criteria",
      "intent_keywords": [
        "excel_find_last_row",
        "write",
        "spreadsheet",
        "excel",
        "select",
        "row",
        "sheet",
        "xlsx",
        "xls",
        "load",
        "identify",
        "in",
        "save",
        "find",
        "locate",
        "search",
        "read",
        "last"
      ],
      "use_cases": [
        "Automating last row operations",
        "Processing last row in workflows",
        "Managing last row data efficiently",
        "Streamlining last row tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "excel_handler",
          "column_by",
          "result"
        ],
        "optional_inputs": [
          "sheet_name"
        ],
        "input_types": {
          "excel_handler": "variable_name",
          "sheet_name": "string",
          "column_by": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of find last row in sheet",
        "output_variable": "excel_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [
        "extract",
        "click",
        "interact",
        "process"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 80,
    "uid": "e0c94dd6-917b-463d-93f6-cae3fe75bd6c",
    "packageName": "SmartBots",
    "actionName": "files_find_files_in_folder",
    "actionDescription": "Locates and identifies files in folder using specified criteria",
    "actionGroup": "Files",
    "actionLabel": "Find Files In Folder",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M8 6.99446H12.0179M12.0179 6.99446H20C21.1046 6.99446 22 7.88989 22 8.99446V11M12.0179 6.99446L9.30008 3.39718C9.11109 3.14703 8.81572 3 8.5022 3H3C2.44772 3 2 3.44772 2 4V19C2 20.1046 2.89543 21 4 21H12.0179\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M22 21L19.8529 18.8529M19.8529 18.8529C19.9675 18.7384 20.0739 18.6158 20.1714 18.486C20.602 17.913 20.8571 17.2006 20.8571 16.4286C20.8571 14.535 19.3221 13 17.4286 13C15.535 13 14 14.535 14 16.4286C14 18.3221 15.535 19.8571 17.4286 19.8571C18.3753 19.8571 19.2325 19.4734 19.8529 18.8529Z\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom pathlib import Path\n#endregion\n\n#region code\n{{result}} = []\n{{#if include_subfolders == 'no'}}\nfor _tmp_path in Path(f\"{{folder}}\").glob(f\"{{pattern}}\"):\n  {{result}}.append(_tmp_path)  \n{{/if}}\n{{#if include_subfolders == 'yes'}}\nfor _tmp_path in Path(f\"{{folder}}\").rglob(f\"{{pattern}}\"):\n  {{result}}.append(_tmp_path)  \n{{/if}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{folder}}  {{pattern}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"folder\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Folder for search\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('folder', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${folder}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"pattern\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Files pattern to search\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('pattern', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"*.*\",\n                    \"initialValue\": \"${pattern}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"dropdown_button_form_field\",\n                \"id\": \"include_subfolders\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Include sub folders\"\n                    },\n                    \"items\": [\n                        \"no\",\n                        \"yes\"\n                    ],\n                    \"initialValue\": \"${include_subfolders}\",\n                    \"value\": \"${include_subfolders}\",\n                    \"validators\": [\n                        {\n                            \"type\": \"required\"\n                        }\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Locates and identifies files in folder using specified criteria",
      "intent_keywords": [
        "files_find_files_in_folder",
        "folder",
        "select",
        "in",
        "locate",
        "find",
        "identify",
        "search",
        "files"
      ],
      "use_cases": [
        "Automating files in folder operations",
        "Processing files in folder in workflows",
        "Managing files in folder data efficiently",
        "Streamlining files in folder tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "folder",
          "include_subfolders",
          "result"
        ],
        "optional_inputs": [
          "pattern"
        ],
        "input_types": {
          "folder": "string",
          "pattern": "file_path",
          "include_subfolders": "selection",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of find files in folder",
        "output_variable": "folder"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [
        "extract",
        "click",
        "interact",
        "process"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 81,
    "uid": "fb11db95-39dc-4cf1-8ef7-c9cb7e71942e",
    "packageName": "SmartBots",
    "actionName": "strings_contains_string",
    "actionDescription": "String Contains",
    "actionGroup": "Strings",
    "actionLabel": "String Contains",
    "actionIcon": "<?xml version=\"1.0\" ?><svg height=\"309\" version=\"1.1\" width=\"338\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"dp_dp001\" transform=\"matrix(1,0,0,1,-1706.27,-120.16)\"><path d=\"M 1969.44,255.071 C 1969.44,326.196 1911.84,383.855 1840.78,383.855 C 1769.73,383.855 1712.12,326.196 1712.12,255.071 C 1712.12,183.944 1769.73,126.285 1840.78,126.285 C 1911.84,126.285 1969.44,183.944 1969.44,255.071 Z \" fill=\"none\" fill-rule=\"evenodd\" id=\"dp_path002\" stroke=\"black\" stroke-linejoin=\"round\" stroke-width=\"12\"/><path d=\"M 1943.54,337.143 L 2035.55,420.433\" fill=\"none\" fill-rule=\"evenodd\" id=\"dp_path003\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"17.3333\"/><path d=\"M 1763.98,314.429 L 1840.78,162.271 L 1917.58,315.869\" fill=\"none\" fill-rule=\"evenodd\" id=\"dp_path004\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\"/><path d=\"M 1806.71,266.429 L 1822.2,266.429 L 1873.83,266.429\" fill=\"none\" fill-rule=\"evenodd\" id=\"dp_path005\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"12\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = f\"{{substring}}\" in f\"{{string}}\"\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{substring}}  {{string}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"string\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"String\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('string', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${string}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"substring\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Substring\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('substring', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${substring}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "String Contains",
      "intent_keywords": [
        "contains",
        "strings_contains_string",
        "string"
      ],
      "use_cases": [
        "Automating string operations",
        "Processing string in workflows",
        "Managing string data efficiently",
        "Streamlining string tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "string",
          "substring",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "string": "string",
          "substring": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of string contains",
        "output_variable": "string"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 82,
    "uid": "4231aa1f-9a97-4fe7-b4c1-d124fdba7fb8",
    "packageName": "SmartBots",
    "actionName": "excel_set_cell_value",
    "actionDescription": "Set Cell Value",
    "actionGroup": "Excel",
    "actionLabel": "Set Cell Value",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport openpyxl\r\n#endregion\n\n#region code\n{{#isEmpty sheetname}}\n_temp_ws = {{excel_handler}}.active\n{{/isEmpty}}\n{{#isNotEmpty sheetname}}\n_temp_ws = {{excel_handler}}[f\"{{sheetname}}\"]\n{{/isNotEmpty}}\n_temp_ws[f\"{{cell}}\"] = {{value}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{cell}} = {{value}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"excel_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Excel Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('excel_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${excel_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheetname\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheetname', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheetname}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"cell\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Cell\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('cell', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${cell}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"value\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Value\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('value', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${value}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Set Cell Value",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "set",
        "excel_set_cell_value",
        "excel",
        "xlsx",
        "xls",
        "load",
        "value",
        "save",
        "cell",
        "read"
      ],
      "use_cases": [
        "Automating cell value operations",
        "Processing cell value in workflows",
        "Managing cell value data efficiently",
        "Streamlining cell value tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "excel_handler",
          "cell",
          "value"
        ],
        "optional_inputs": [
          "sheetname"
        ],
        "input_types": {
          "excel_handler": "variable_name",
          "sheetname": "string",
          "cell": "string",
          "value": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of set cell value",
        "output_variable": "excel_handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 83,
    "uid": "668a3edb-1513-43a7-a387-f392bffc992f",
    "packageName": "SmartBots",
    "actionName": "excel_get_cell_value",
    "actionDescription": "Get Cell Value",
    "actionGroup": "Excel",
    "actionLabel": "Get Cell Value",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport openpyxl\r\n#endregion\n\n#region code\n{{#isEmpty sheetname}}\n_temp_ws = {{excel_handler}}.active\n{{/isEmpty}}\n{{#isNotEmpty sheetname}}\n_temp_ws = {{excel_handler}}[f\"{{sheetname}}\"]\n{{/isNotEmpty}}\n{{result}} = _temp_ws[f\"{{cell}}\"].value\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{result}} = {{cell}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"excel_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Excel Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('excel_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${excel_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheetname\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheetname', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheetname}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"cell\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Cell\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('cell', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${cell}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('value', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Get Cell Value",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "excel",
        "xlsx",
        "xls",
        "load",
        "value",
        "excel_get_cell_value",
        "save",
        "cell",
        "get",
        "read"
      ],
      "use_cases": [
        "Automating cell value operations",
        "Processing cell value in workflows",
        "Managing cell value data efficiently",
        "Streamlining cell value tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "excel_handler",
          "cell",
          "result"
        ],
        "optional_inputs": [
          "sheetname"
        ],
        "input_types": {
          "excel_handler": "variable_name",
          "sheetname": "string",
          "cell": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of get cell value",
        "output_variable": "excel_handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 85,
    "uid": "9e1032f8-f1fd-469c-b55e-a63d46538b46",
    "packageName": "SmartBots",
    "actionName": "excel_read_cells_range_to_dataframe",
    "actionDescription": "Reads data from cells range to dataframe and loads it for processing",
    "actionGroup": "Excel",
    "actionLabel": "Read Cells Range To Dataframe",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport openpyxl\nimport pandas as pd\nimport os\nimport tempfile\nimport xlwings\n#endregion\n\n#region code\n_temp_fn = os.path.join(tempfile.mkdtemp(), 'tmp_readcells.xlsx')\n{{excel_handler}}.save(_temp_fn)\ntry:\n  _temp_excel_app = xlwings.App(visible=False)\n  try:\n    _temp_excel_book = _temp_excel_app.books.open(_temp_fn)\n    _temp_excel_book.save()\n    _temp_excel_book.close()\n  finally:\n    _temp_excel_app.quit()                        \n  _temp_wb = openpyxl.load_workbook(filename=_temp_fn, data_only=True)\n{{#isEmpty sheetname}}\n  _temp_ws = _temp_wb.active\n{{/isEmpty}}\n{{#isNotEmpty sheetname}}\n  _temp_ws = _temp_wb[f\"{{sheetname}}\"]\n{{/isNotEmpty}}\n  _temp_data = _temp_ws[f\"{{cells_range}}\"]\n  _temp_rows = []\n  for row in _temp_data:\n    _temp_cols = []\n    for cell in row:\n      _temp_cols.append(cell.value)\n    _temp_rows.append(_temp_cols)\n{{#isEmpty result_column_names}}\n  {{result_dataframe}} = pd.DataFrame(_temp_rows)\n{{/isEmpty}}    \n{{#isNotEmpty result_column_names}}\n  {{result_dataframe}} = pd.DataFrame(_temp_rows, columns={{result_column_names}})\n{{/isNotEmpty}}    \n  _temp_wb.close()\nfinally:\n  # os.remove(_temp_fn)\n  pass  \n#endregion\n\n#region requiredExtensions\npandas\nopenpyxl\nio\nxlwings\n#endregion\n\n#region toString\n{{excel_handler}}  {{cells_range}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"excel_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Excel Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('excel_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${excel_handler}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheetname\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheetname', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheetname}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"cells_range\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Cells Range\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('cells_range', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${cells_range}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\r\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result_column_names\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result Column Names\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result_column_names', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result_column_names}\",\n                    \"content_sources\": null\n                }\n            },\r\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result_dataframe\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result Dataframe\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result_dataframe', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result_dataframe}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Reads data from cells range to dataframe and loads it for processing",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "retrieve",
        "excel_read_cells_range_to_dataframe",
        "excel",
        "cells",
        "range",
        "xlsx",
        "xls",
        "load",
        "fetch",
        "save",
        "to",
        "import",
        "get",
        "read",
        "dataframe"
      ],
      "use_cases": [
        "Reading financial reports and budgets",
        "Processing customer data from Excel files",
        "Importing inventory lists and product catalogs",
        "Loading sales data for analysis"
      ],
      "input_requirements": {
        "required_inputs": [
          "excel_handler",
          "sheetname",
          "cells_range",
          "result_dataframe"
        ],
        "optional_inputs": [
          "result_column_names"
        ],
        "input_types": {
          "excel_handler": "variable_name",
          "sheetname": "string",
          "cells_range": "string",
          "result_column_names": "string",
          "result_dataframe": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of read cells range to dataframe",
        "output_variable": "excel_handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library",
        "openpyxl_library",
        "file_system_access"
      ],
      "typical_next_steps": [
        "data_transform",
        "filter",
        "transform",
        "data_filter",
        "data_analysis",
        "process",
        "analyze"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 86,
    "uid": "c2bd3b35-5a74-450a-8a70-3724a46a9588",
    "packageName": "SmartBots",
    "actionName": "dataframe_find_by_expression",
    "actionDescription": "Locates and identifies by expression using specified criteria",
    "actionGroup": "Dataframe",
    "actionLabel": "Find In Dataframe By Expression",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style>.cls-1{fill:none;stroke:#000;stroke-linejoin:round;stroke-width:2px;}</style></defs><title/><g data-name=\"38-Find\" id=\"_38-Find\"><path class=\"cls-1\" d=\"M25,13A12,12,0,1,1,13,1,12,12,0,0,1,25,13Z\"/><polygon class=\"cls-1\" points=\"25 28 28 31 31 28 28 25 25.43 22.43 23.93 23.93 22.43 25.43 25 28\"/><polyline class=\"cls-1\" points=\"24 24 23.93 23.93 21.49 21.49 21 21\"/><path class=\"cls-1\" d=\"M10,11a3,3,0,1,1,3,3v2\"/><line class=\"cls-1\" x1=\"12\" x2=\"14\" y1=\"18\" y2=\"18\"/><line class=\"cls-1\" x1=\"25\" x2=\"28\" y1=\"28\" y2=\"25\"/><circle class=\"cls-1\" cx=\"13\" cy=\"13\" r=\"8\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = None\n_temp_result = {{source_dataframe}}.query(f\"{{find_expression}}\")\n{{#isEmpty result_column}}\n{{result}} = _temp_result\n{{/isEmpty}}\n{{#isNotEmpty result_column}}\nif not _temp_result.empty:\n  {{result}} = _temp_result.iloc[0][f\"{{result_column}}\"]\n{{/isNotEmpty}}\n#endregion\n\n#region requiredExtensions\npandas\n#endregion\n\n#region toString\n{{source_dataframe}} - {{find_expression}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source_dataframe\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source Dataframe\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source_dataframe', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source_dataframe}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"find_expression\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Find Expression\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('find_expression', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${find_expression}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result_column\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result Column\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result_column', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result_column}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Locates and identifies by expression using specified criteria",
      "intent_keywords": [
        "by",
        "select",
        "dataframe_find_by_expression",
        "in",
        "expression",
        "locate",
        "find",
        "identify",
        "search",
        "dataframe"
      ],
      "use_cases": [
        "Automating by expression operations",
        "Processing by expression in workflows",
        "Managing by expression data efficiently",
        "Streamlining by expression tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source_dataframe",
          "find_expression",
          "result"
        ],
        "optional_inputs": [
          "result_column"
        ],
        "input_types": {
          "source_dataframe": "string",
          "find_expression": "string",
          "result_column": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of find in dataframe by expression",
        "output_variable": "source_dataframe"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library"
      ],
      "typical_next_steps": [
        "extract",
        "click",
        "interact",
        "process"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 87,
    "uid": "f6c0cde2-8427-4066-a500-df97ebd846d8",
    "packageName": "SmartBots",
    "actionName": "variable_has_value",
    "actionDescription": "Has Value",
    "actionGroup": "Variable",
    "actionLabel": "Has Value",
    "actionIcon": "<?xml version=\"1.0\" ?><svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 24 24\" width=\"512\" height=\"512\"><path d=\"M11.904,16c.828,0,1.5,.672,1.5,1.5s-.672,1.5-1.5,1.5-1.5-.672-1.5-1.5,.672-1.5,1.5-1.5Zm1-2c0-.561,.408-1.225,.928-1.512,1.5-.826,2.307-2.523,2.009-4.223-.283-1.613-1.607-2.938-3.221-3.221-1.182-.204-2.38,.112-3.289,.874-.907,.763-1.428,1.879-1.428,3.063,0,.553,.448,1,1,1s1-.447,1-1c0-.592,.26-1.15,.714-1.532,.461-.386,1.052-.542,1.657-.435,.787,.138,1.458,.81,1.596,1.596,.153,.871-.241,1.705-1.004,2.125-1.156,.637-1.963,1.979-1.963,3.264,0,.553,.448,1,1,1s1-.447,1-1Zm11.096,5v-6.66C24,5.861,19.096,.454,12.836,.028,9.361-.202,5.961,1.066,3.509,3.521,1.057,5.977-.211,9.378,.03,12.854c.44,6.354,6.052,11.146,13.054,11.146h5.917c2.757,0,5-2.243,5-5ZM12.701,2.024c5.215,.354,9.299,4.885,9.299,10.315v6.66c0,1.654-1.346,3-3,3h-5.917c-6.035,0-10.686-3.904-11.059-9.284-.201-2.899,.855-5.735,2.899-7.781,1.882-1.885,4.435-2.934,7.092-2.934,.228,0,.457,.008,.685,.023Z\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport math \n#endregion\n\n#region code\n{{result}} = True\nif {{variable}} is None:\n  {{result}} = False\nif math.isnan({{variable}}):    \n  {{result}} = False\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{variable}}  {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"variable\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Variable\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('variable', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${variable}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Has Value",
      "intent_keywords": [
        "has",
        "variable_has_value",
        "value"
      ],
      "use_cases": [
        "Automating value operations",
        "Processing value in workflows",
        "Managing value data efficiently",
        "Streamlining value tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "variable",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "variable": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of has value",
        "output_variable": "variable"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 88,
    "uid": "348769a8-acb3-4a72-a0fa-5b1e75d9404c",
    "packageName": "SmartBots",
    "actionName": "excel_app_open_book",
    "actionDescription": "Excel Application Open Book",
    "actionGroup": "Excel Application",
    "actionLabel": "Excel Application Open Book",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport xlwings\n#endregion\n\n#region code\n{{book_handler}} = {{app_handler}}.books.open(f\"{{filename}}\")\n#endregion\n\n#region requiredExtensions\nxlwings\n#endregion\n\n#region toString\n{{app_handler}} - {{filename}} - {{book_handler}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"app_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Application Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('app_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${app_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n{\n                \"type\": \"text_form_field\",\n                \"id\": \"book_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('book_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${book_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }            \n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Application Open Book",
      "intent_keywords": [
        "open",
        "book",
        "excel",
        "application",
        "excel_app_open_book"
      ],
      "use_cases": [
        "Automating open book operations",
        "Processing open book in workflows",
        "Managing open book data efficiently",
        "Streamlining open book tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "app_handler",
          "filename",
          "book_handler"
        ],
        "optional_inputs": [],
        "input_types": {
          "app_handler": "variable_name",
          "filename": "file_path",
          "book_handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel application open book",
        "output_variable": "app_handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 89,
    "uid": "7ffda662-5f01-46e3-be59-99981f45a5f2",
    "packageName": "SmartBots",
    "actionName": "excel_app_close_book",
    "actionDescription": "Excel Application Close Book",
    "actionGroup": "Excel Application",
    "actionLabel": "Excel Application Close Book",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{book_handler}}.close()\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{book_handler}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"book_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('book_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${book_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Application Close Book",
      "intent_keywords": [
        "book",
        "excel",
        "application",
        "excel_app_close_book",
        "close"
      ],
      "use_cases": [
        "Automating close book operations",
        "Processing close book in workflows",
        "Managing close book data efficiently",
        "Streamlining close book tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "book_handler"
        ],
        "optional_inputs": [],
        "input_types": {
          "book_handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel application close book",
        "output_variable": "book_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 90,
    "uid": "50daf500-c7f9-44d1-93f4-245bb4b417de",
    "packageName": "SmartBots",
    "actionName": "excel_app_read_table_to_dataframe",
    "actionDescription": "Excel Application Read Table To Dataframe",
    "actionGroup": "Excel Application",
    "actionLabel": "Excel Application Read Table To Dataframe",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport xlwings\n#endregion\n\n#region code\n{{#isEmpty excel_sheet_name}}\n_temp_ws = {{book_handler}}.sheets[0]\n{{/isEmpty}}\n{{#isNotEmpty excel_sheet_name}}\n_temp_ws = {{book_handler}}.sheets[f\"{{excel_sheet_name}}\"]\n{{/isNotEmpty}}\n{{#isEmpty cell_range}}\n{{result}} = _temp_ws.range('A1').options(pd.DataFrame, header=1, index=False).value\n{{/isEmpty}}\n{{#isNotEmpty cell_range}}\n{{result}} = _temp_ws.range(f\"{{cell_range}}\").options(pd.DataFrame, header=1, index=False).value\n{{/isNotEmpty}}\n#endregion\n\n#region requiredExtensions\nxlwings\n#endregion\n\n#region toString\n{{book_handler}} - {{excel_sheet_name}} - {{cell_range}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"book_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('book_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${book_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"excel_sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Excel Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('excel_sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"0\",\n                    \"initialValue\": \"${excel_sheet_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"cell_range\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Cell Range\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('cell_range', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${cell_range}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Application Read Table To Dataframe",
      "intent_keywords": [
        "excel",
        "excel_app_read_table_to_dataframe",
        "application",
        "to",
        "table",
        "read",
        "dataframe"
      ],
      "use_cases": [
        "Automating read table to dataframe operations",
        "Processing read table to dataframe in workflows",
        "Managing read table to dataframe data efficiently",
        "Streamlining read table to dataframe tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "book_handler",
          "result"
        ],
        "optional_inputs": [
          "excel_sheet_name",
          "cell_range"
        ],
        "input_types": {
          "book_handler": "variable_name",
          "excel_sheet_name": "string",
          "cell_range": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel application read table to dataframe",
        "output_variable": "book_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 91,
    "uid": "c01808c9-c3ea-4546-98fd-eca07e36c012",
    "packageName": "SmartBots",
    "actionName": "ai_extract_data_from_text",
    "actionDescription": "Extract data from text",
    "actionGroup": "AI",
    "actionLabel": "Extract data from text",
    "actionIcon": "<?xml version=\"1.0\" ?><!DOCTYPE svg  PUBLIC '-//W3C//DTD SVG 1.1//EN'  'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'><svg height=\"78px\" id=\"Capa_1\" style=\"enable-background:new 0 0 100 78;\" version=\"1.1\" viewBox=\"0 0 100 78\" width=\"100px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g><path d=\"M75,68H10V23h12.975c0,0,3.447-4.484,10.85-10H5c-2.762,0-5,2.238-5,5v55c0,2.762,2.238,5,5,5h75c2.762,0,5-2.238,5-5   V54.268l-10,8.226V68z M66.81,33.25V51L100,24.997L66.81,0v15.652C26.5,15.652,26.5,55.5,26.5,55.5   C37.908,36.759,44.93,33.25,66.81,33.25z\"/></g><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/><g/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code_add:temp_extract_data_txt\nimport openai\r\nimport instructor\r\nfrom pydantic import BaseModel\r\napi_key = \"YOUR_OPENAI_API_KEY\"\r\nclass Info(BaseModel):\r\n  importe: float\r\n  concepto_pago: str\r\n  beneficiario: str\r\n  comision: bool\r\n  honorarios: bool\nclient = instructor.from_openai(openai.OpenAI(api_key=api_key))\r\ndef ia_extract_info_from_text(s: str):\r\n    movimientos = client.chat.completions.create(\r\n        model=\"gpt-4.1-mini\",\r\n        messages=[\r\n            {\"role\": \"user\", \"content\": \"Extrae la información del texto: {{ data }}\"},\r\n        ],\r\n        response_model=Info,\r\n        context={\"data\": s},\r\n    )\r\n    r = {}\r\n    for info in movimientos:\r\n        r[info[0]] = info[1]\r\n    return r\r\n#endregion\n\n#region code\n{{result}} = temp_extract_data_txt.ia_extract_info_from_text(f\"{{source_text}}\")\r\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{source_text}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source_text\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source Text\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source_text', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source_text}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"data_extract\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Data to extract\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('data_extract', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${data_extract}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Extract data from text",
      "intent_keywords": [
        "ai_extract_data_from_text",
        "from",
        "data",
        "text",
        "extract"
      ],
      "use_cases": [
        "Automating data from text operations",
        "Processing data from text in workflows",
        "Managing data from text data efficiently",
        "Streamlining data from text tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source_text",
          "data_extract",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "source_text": "string",
          "data_extract": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of extract data from text",
        "output_variable": "source_text"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 92,
    "uid": "e94e49ab-a0bf-4b7b-9d11-5b32c673090b",
    "packageName": "SmartBots",
    "actionName": "excel_application_open",
    "actionDescription": "Open Excel Application",
    "actionGroup": "Excel Application",
    "actionLabel": "Open Excel Application",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport xlwings\n#endregion\n\n#region code\n{{#if app_visible == 'no'}}\n{{app_handler}} = xlwings.App(visible=False, add_book=False)\n{{/if}}\n{{#if app_visible != 'no'}}\n{{app_handler}} = xlwings.App(visible=True, add_book=False)\n{{/if}}\n#endregion\n\n#region requiredExtensions\nxlwings\n#endregion\n\n#region toString\n{{app_handler}} - {{app_visible}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"app_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Application Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('app_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${app_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\r\n            {\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"app_visible\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Visible\"\r\n                    },\r\n                    \"items\": [\r\n                        \"yes\",\r\n                        \"no\"\r\n                    ],\r\n                    \"initialValue\": \"\",\r\n                    \"value\": \"${app_visible}\"                }\r\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Open Excel Application",
      "intent_keywords": [
        "open",
        "application",
        "excel_application_open",
        "excel"
      ],
      "use_cases": [
        "Automating open operations",
        "Processing open in workflows",
        "Managing open data efficiently",
        "Streamlining open tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "app_handler",
          "app_visible"
        ],
        "optional_inputs": [],
        "input_types": {
          "app_handler": "variable_name",
          "app_visible": "selection"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of open excel application",
        "output_variable": "app_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 93,
    "uid": "fd83c0f9-03e7-4319-ac75-50c43459728a",
    "packageName": "SmartBots",
    "actionName": "excel_application_close",
    "actionDescription": "Close Excel Application",
    "actionGroup": "Excel Application",
    "actionLabel": "Close Excel Application",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{app_handler}}.quit()\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{app_handler}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"app_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Application Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('app_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${app_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Close Excel Application",
      "intent_keywords": [
        "excel",
        "application",
        "close",
        "excel_application_close"
      ],
      "use_cases": [
        "Automating close operations",
        "Processing close in workflows",
        "Managing close data efficiently",
        "Streamlining close tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "app_handler"
        ],
        "optional_inputs": [],
        "input_types": {
          "app_handler": "variable_name"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of close excel application",
        "output_variable": "app_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 94,
    "uid": "688653c7-3c1c-49d3-9933-562c566cc0d4",
    "packageName": "SmartBots",
    "actionName": "excel_application_save_book",
    "actionDescription": "Excel Application Save Book",
    "actionGroup": "Excel Application",
    "actionLabel": "Excel Application Save Book",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{#isEmpty save_as}}\n{{book_handler}}.save()\n{{/isEmpty}}\n{{#isNotEmpty save_as}}\n{{book_handler}}.save(f\"{{save_as}}\")\n{{/isNotEmpty}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{book_handler}} - {{save_as}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"book_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('book_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${book_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"save_as\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Save As\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('save_as', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${save_as}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Application Save Book",
      "intent_keywords": [
        "book",
        "excel",
        "save",
        "application",
        "excel_application_save_book"
      ],
      "use_cases": [
        "Automating save book operations",
        "Processing save book in workflows",
        "Managing save book data efficiently",
        "Streamlining save book tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "book_handler"
        ],
        "optional_inputs": [
          "save_as"
        ],
        "input_types": {
          "book_handler": "variable_name",
          "save_as": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel application save book",
        "output_variable": "book_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 95,
    "uid": "4f5cf53f-3f51-43c0-88c1-77c1c3f1ef47",
    "packageName": "SmartBots",
    "actionName": "excel_application_find_row",
    "actionDescription": "Excel Application Find Row In Sheet",
    "actionGroup": "Excel Application",
    "actionLabel": "Excel Application Find Row In Sheet",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = None\n{{#ifEmpty sheet_name}}\n_temp_sheet = {{book_handler}}.sheets[0]\n{{/ifEmpty}}\n{{#ifNotEmpty sheet_name}}\n_temp_sheet = {{book_handler}}.sheets[f\"{{sheet_name}}\"]\n{{/ifNotEmpty}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"book_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('book_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${book_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheet_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"cells_range\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Cells Range\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('cells_range', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${cells_range}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"find_expression\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Find Expression\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('find_expression', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${find_expression}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Application Find Row In Sheet",
      "intent_keywords": [
        "excel",
        "row",
        "in",
        "application",
        "excel_application_find_row",
        "find",
        "sheet"
      ],
      "use_cases": [
        "Automating find row operations",
        "Processing find row in workflows",
        "Managing find row data efficiently",
        "Streamlining find row tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "book_handler",
          "find_expression",
          "result"
        ],
        "optional_inputs": [
          "sheet_name",
          "cells_range"
        ],
        "input_types": {
          "book_handler": "variable_name",
          "sheet_name": "string",
          "cells_range": "string",
          "find_expression": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel application find row in sheet",
        "output_variable": "book_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 96,
    "uid": "96ac24b3-4b9e-4375-ad6a-0480a64ada4e",
    "packageName": "SmartBots",
    "actionName": "excel_application_last_row",
    "actionDescription": "Excel Application Last Row In Sheet",
    "actionGroup": "Excel Application",
    "actionLabel": "Excel Application Last Row In Sheet",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{#isEmpty sheet_name}}\n_temp_sheet = {{book_handler}}.sheets[0]\n{{/isEmpty}}\n{{#isNotEmpty sheet_name}}\n_temp_sheet = {{book_handler}}.sheets[f\"{{sheet_name}}\"]\n{{/isNotEmpty}}\n_temp_cell_from = 'A1'\n{{#isNotEmpty cell_from}}\n_temp_cell_from = f\"{{cell_from}}\"\n{{/isNotEmpty}}\n{{result}} = _temp_sheet.range(_temp_cell_from).end('down').row\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{book_handler}}   {{sheet_name}}   {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"book_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('book_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${book_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheet_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"cell_from\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Cell From\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('cell_from', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"A1\",\n                    \"initialValue\": \"${cell_from}\",\n                    \"content_sources\": null\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": null\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Application Last Row In Sheet",
      "intent_keywords": [
        "excel",
        "row",
        "in",
        "application",
        "sheet",
        "excel_application_last_row",
        "last"
      ],
      "use_cases": [
        "Automating last row operations",
        "Processing last row in workflows",
        "Managing last row data efficiently",
        "Streamlining last row tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "book_handler",
          "result"
        ],
        "optional_inputs": [
          "sheet_name",
          "cell_from"
        ],
        "input_types": {
          "book_handler": "variable_name",
          "sheet_name": "string",
          "cell_from": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel application last row in sheet",
        "output_variable": "book_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 97,
    "uid": "6c37e943-5c33-4465-8dfb-3029a5ee95bb",
    "packageName": "SmartBots",
    "actionName": "excel_application_get_cell_value",
    "actionDescription": "Excel Application Get Cell Value",
    "actionGroup": "Excel Application",
    "actionLabel": "Excel Application Get Cell Value",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{#isEmpty sheet_name}}\n_temp_sheet = {{book_handler}}.sheets[0]\n{{/isEmpty}}\n{{#isNotEmpty sheet_name}}\n_temp_sheet = {{book_handler}}.sheets[f\"{{sheet_name}}\"]\n{{/isNotEmpty}}\n{{result}} = _temp_sheet[f\"{{cell}}\"].value\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{book_handler}}   {{sheet_name}}   {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"book_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('book_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${book_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheet_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"cell\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Cell\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('cell', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${cell}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Application Get Cell Value",
      "intent_keywords": [
        "excel",
        "value",
        "application",
        "excel_application_get_cell_value",
        "cell",
        "get"
      ],
      "use_cases": [
        "Automating get cell value operations",
        "Processing get cell value in workflows",
        "Managing get cell value data efficiently",
        "Streamlining get cell value tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "book_handler",
          "cell",
          "result"
        ],
        "optional_inputs": [
          "sheet_name"
        ],
        "input_types": {
          "book_handler": "variable_name",
          "sheet_name": "string",
          "cell": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel application get cell value",
        "output_variable": "book_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 98,
    "uid": "c4e393fb-5708-401a-83fd-29434a390e52",
    "packageName": "SmartBots",
    "actionName": "excel_application_set_cell_value",
    "actionDescription": "Excel Application Set Cell Value",
    "actionGroup": "Excel Application",
    "actionLabel": "Excel Application Set Cell Value",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{#isEmpty sheet_name}}\n_temp_sheet = {{book_handler}}.sheets[0]\n{{/isEmpty}}\n{{#isNotEmpty sheet_name}}\n_temp_sheet = {{book_handler}}.sheets[f\"{{sheet_name}}\"]\n{{/isNotEmpty}}\n_temp_sheet[f\"{{cell}}\"].value = {{value}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{book_handler}}   {{sheet_name}}   {{value}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"book_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('book_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${book_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheet_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"cell\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Cell\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('cell', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${cell}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"value\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Value\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('value', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${value}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Application Set Cell Value",
      "intent_keywords": [
        "set",
        "excel",
        "value",
        "excel_application_set_cell_value",
        "application",
        "cell"
      ],
      "use_cases": [
        "Automating set cell value operations",
        "Processing set cell value in workflows",
        "Managing set cell value data efficiently",
        "Streamlining set cell value tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "book_handler",
          "cell",
          "value"
        ],
        "optional_inputs": [
          "sheet_name"
        ],
        "input_types": {
          "book_handler": "variable_name",
          "sheet_name": "string",
          "cell": "string",
          "value": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel application set cell value",
        "output_variable": "book_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 99,
    "uid": "1e735d2f-1886-48fd-80ab-70940cc40d83",
    "packageName": "SmartBots",
    "actionName": "excel_column_number_to_letter",
    "actionDescription": "Excel Column Number To Letter",
    "actionGroup": "Excel",
    "actionLabel": "Excel Column Number To Letter",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom openpyxl.utils import get_column_letter\n#endregion\n\n#region code\n{{result}} = get_column_letter({{column_number}})\n#endregion\n\n#region requiredExtensions\nopenpyxl\n#endregion\n\n#region toString\n{{column_number}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"column_number\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Column Number\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('column_number', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${column_number}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Column Number To Letter",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "number",
        "excel",
        "column",
        "xlsx",
        "xls",
        "load",
        "excel_column_number_to_letter",
        "letter",
        "save",
        "to",
        "read"
      ],
      "use_cases": [
        "Automating number to letter operations",
        "Processing number to letter in workflows",
        "Managing number to letter data efficiently",
        "Streamlining number to letter tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "column_number",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "column_number": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel column number to letter",
        "output_variable": "column_number"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 100,
    "uid": "35630547-cdd2-4d45-b2ca-7794c691e4be",
    "packageName": "SmartBots",
    "actionName": "array_add_item",
    "actionDescription": "Add Item To Array",
    "actionGroup": "Arrays",
    "actionLabel": "Add Item To Array",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M11.0343 2.24513L3.68134 6.11508C2.96901 6.49 2.96901 7.51 3.68134 7.88492L11.0343 11.7549C11.3258 11.9083 11.6742 11.9083 11.9657 11.7549L19.3187 7.88492C20.031 7.51 20.031 6.49 19.3187 6.11508L11.9657 2.24513C11.6742 2.09169 11.3258 2.09169 11.0343 2.24513Z\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n    <path d=\"M3 11L2.95978 11.0402C2.48334 11.5167 2.60489 12.3184 3.20116 12.6322L11.0343 16.7549C11.3258 16.9084 11.6742 16.9084 11.9657 16.7549L19.7988 12.6322C20.3951 12.3184 20.5167 11.5167 20.0402 11.0402L20 11\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n    <path d=\"M3 16L2.95978 16.0402C2.48334 16.5167 2.60489 17.3184 3.20116 17.6322L11.0343 21.7549C11.3258 21.9084 11.6742 21.9084 11.9657 21.7549L19.7988 17.6322C20.3951 17.3184 20.5167 16.5167 20.0402 16.0402L20 16\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport numpy as np \n#endregion\n\n#region code\nif isinstance({{array}}, list):\n  {{array}}.append({{item}})\nelse:  \n  {{array}} = np.append({{array}}, {{item}})\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{array}} - {{item}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"array\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Array\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('array', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${array}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"item\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Item To Add\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('item', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${item}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Add Item To Array",
      "intent_keywords": [
        "array",
        "to",
        "array_add_item",
        "item",
        "add"
      ],
      "use_cases": [
        "Automating item operations",
        "Processing item in workflows",
        "Managing item data efficiently",
        "Streamlining item tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "array",
          "item"
        ],
        "optional_inputs": [],
        "input_types": {
          "array": "string",
          "item": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of add item to array",
        "output_variable": "array"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 101,
    "uid": "a68c6ffb-9e1c-4875-91cb-82b753a79f93",
    "packageName": "SmartBots",
    "actionName": "arrays_insert_item",
    "actionDescription": "Insert Item To Array",
    "actionGroup": "Arrays",
    "actionLabel": "Insert Item To Array",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M11.0343 2.24513L3.68134 6.11508C2.96901 6.49 2.96901 7.51 3.68134 7.88492L11.0343 11.7549C11.3258 11.9083 11.6742 11.9083 11.9657 11.7549L19.3187 7.88492C20.031 7.51 20.031 6.49 19.3187 6.11508L11.9657 2.24513C11.6742 2.09169 11.3258 2.09169 11.0343 2.24513Z\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n    <path d=\"M3 11L2.95978 11.0402C2.48334 11.5167 2.60489 12.3184 3.20116 12.6322L11.0343 16.7549C11.3258 16.9084 11.6742 16.9084 11.9657 16.7549L19.7988 12.6322C20.3951 12.3184 20.5167 11.5167 20.0402 11.0402L20 11\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n    <path d=\"M3 16L2.95978 16.0402C2.48334 16.5167 2.60489 17.3184 3.20116 17.6322L11.0343 21.7549C11.3258 21.9084 11.6742 21.9084 11.9657 21.7549L19.7988 17.6322C20.3951 17.3184 20.5167 16.5167 20.0402 16.0402L20 16\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport numpy as np \n#endregion\n\n#region code\n{{array}} = np.insert({{array}}, {{index}}, {{item}})\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{array}} - {{index}} - {{item}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"array\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Array\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('array', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${array}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"index\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Index Where Insert\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('index', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${index}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"item\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Item To Insert\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('item', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${item}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Insert Item To Array",
      "intent_keywords": [
        "insert",
        "array",
        "to",
        "item",
        "arrays_insert_item"
      ],
      "use_cases": [
        "Automating item operations",
        "Processing item in workflows",
        "Managing item data efficiently",
        "Streamlining item tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "array",
          "index",
          "item"
        ],
        "optional_inputs": [],
        "input_types": {
          "array": "string",
          "index": "string",
          "item": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of insert item to array",
        "output_variable": "array"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 102,
    "uid": "520d9c20-64c6-42ff-ab5c-b68762c3e359",
    "packageName": "SmartBots",
    "actionName": "excel_application_sheet_exists",
    "actionDescription": "Excel Application Sheet Exists",
    "actionGroup": "Excel Application",
    "actionLabel": "Excel Application Sheet Exists",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Excel\"><g data-name=\"&lt;Group&gt;\" id=\"_Group_\"><polygon data-name=\"&lt;Path&gt;\" id=\"_Path_\" points=\"13.5 0.5 0.5 3 0.5 21 13.5 23.5 13.5 0.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><polyline data-name=\"&lt;Path&gt;\" id=\"_Path_2\" points=\"13.5 3.5 23.5 3.5 23.5 20.5 13.5 20.5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_2\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"5.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"8.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_5\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_6\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"11.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_7\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_8\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"14.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_9\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"13.5\" y=\"17.5\"/><rect data-name=\"&lt;Rectangle&gt;\" height=\"1\" id=\"_Rectangle_10\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" width=\"3\" x=\"18.5\" y=\"17.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_3\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"8.5\" y2=\"16.5\"/><line data-name=\"&lt;Path&gt;\" id=\"_Path_4\" style=\"fill:none;stroke:#303c42;stroke-linecap:round;stroke-linejoin:round\" x1=\"4.5\" x2=\"8.5\" y1=\"16.5\" y2=\"8.5\"/></g></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n_temp_list = [sh.name for sh in {{book_handler}}.sheets]\n{{result}} = f\"{{sheet_name}}\" in _temp_list\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{sheet_name}} - {{book_handler}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"book_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Book Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('book_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${book_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheet_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Excel Application Sheet Exists",
      "intent_keywords": [
        "excel",
        "excel_application_sheet_exists",
        "exists",
        "application",
        "sheet"
      ],
      "use_cases": [
        "Automating sheet exists operations",
        "Processing sheet exists in workflows",
        "Managing sheet exists data efficiently",
        "Streamlining sheet exists tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "book_handler",
          "sheet_name",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "book_handler": "variable_name",
          "sheet_name": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of excel application sheet exists",
        "output_variable": "book_handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 103,
    "uid": "4ec5f6a9-1202-4e33-a6c9-86c4e28dd4a8",
    "packageName": "SmartBots",
    "actionName": "files_find_folders_in_folder",
    "actionDescription": "Locates and identifies folders in folder using specified criteria",
    "actionGroup": "Files",
    "actionLabel": "Find Folders In Folder",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M8 6.99446H12.0179M12.0179 6.99446H20C21.1046 6.99446 22 7.88989 22 8.99446V11M12.0179 6.99446L9.30008 3.39718C9.11109 3.14703 8.81572 3 8.5022 3H3C2.44772 3 2 3.44772 2 4V19C2 20.1046 2.89543 21 4 21H12.0179\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n    <path d=\"M22 21L19.8529 18.8529M19.8529 18.8529C19.9675 18.7384 20.0739 18.6158 20.1714 18.486C20.602 17.913 20.8571 17.2006 20.8571 16.4286C20.8571 14.535 19.3221 13 17.4286 13C15.535 13 14 14.535 14 16.4286C14 18.3221 15.535 19.8571 17.4286 19.8571C18.3753 19.8571 19.2325 19.4734 19.8529 18.8529Z\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom pathlib import Path\n#endregion\n\n#region code\n_temp_p = Path(f\"{{folder}}\")\n{{#isEmpty pattern}}\n{{result}} = [x for x in _temp_p.iterdir() if x.is_dir()]\n{{/isEmpty}}\n{{#isNotEmpty pattern}}\n{{result}} = [x for x in _temp_p.iterdir() if x.is_dir() and x.match(f\"{{pattern}}\")]\n{{/isNotEmpty}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{folder}}  {{pattern}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"folder\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Folder for search\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('folder', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${folder}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"pattern\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Folder pattern to search\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('pattern', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"*.*\",\n                    \"initialValue\": \"${pattern}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"dropdown_button_form_field\",\n                \"id\": \"include_subfolders\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Include sub folders\"\n                    },\n                    \"items\": [\n                        \"no\",\n                        \"yes\"\n                    ],\n                    \"initialValue\": \"${include_subfolders}\",\n                    \"value\": \"${include_subfolders}\",\n                    \"validators\": [\n                        {\n                            \"type\": \"required\"\n                        }\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Locates and identifies folders in folder using specified criteria",
      "intent_keywords": [
        "folder",
        "select",
        "folders",
        "in",
        "files_find_folders_in_folder",
        "locate",
        "find",
        "identify",
        "search"
      ],
      "use_cases": [
        "Automating folders in folder operations",
        "Processing folders in folder in workflows",
        "Managing folders in folder data efficiently",
        "Streamlining folders in folder tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "folder",
          "include_subfolders",
          "result"
        ],
        "optional_inputs": [
          "pattern"
        ],
        "input_types": {
          "folder": "string",
          "pattern": "string",
          "include_subfolders": "selection",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of find folders in folder",
        "output_variable": "folder"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [
        "extract",
        "click",
        "interact",
        "process"
      ],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 104,
    "uid": "5e3b5367-37ba-4fd2-8591-a4a93dd0e3ab",
    "packageName": "SmartBots",
    "actionName": "files_file_exists",
    "actionDescription": "File Exists",
    "actionGroup": "Files",
    "actionLabel": "File Exists",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M8 6.99446H12.0179M12.0179 6.99446H20C21.1046 6.99446 22 7.88989 22 8.99446V11M12.0179 6.99446L9.30008 3.39718C9.11109 3.14703 8.81572 3 8.5022 3H3C2.44772 3 2 3.44772 2 4V19C2 20.1046 2.89543 21 4 21H12.0179\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n    <path d=\"M22 21L19.8529 18.8529M19.8529 18.8529C19.9675 18.7384 20.0739 18.6158 20.1714 18.486C20.602 17.913 20.8571 17.2006 20.8571 16.4286C20.8571 14.535 19.3221 13 17.4286 13C15.535 13 14 14.535 14 16.4286C14 18.3221 15.535 19.8571 17.4286 19.8571C18.3753 19.8571 19.2325 19.4734 19.8529 18.8529Z\" stroke=\"#000000\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom pathlib import Path\n#endregion\n\n#region code\n_temp_file = Path(f\"{{filename}}\")\n{{result}} = _temp_file.exists()\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{filename}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "File Exists",
      "intent_keywords": [
        "exists",
        "files_file_exists",
        "file"
      ],
      "use_cases": [
        "Automating exists operations",
        "Processing exists in workflows",
        "Managing exists data efficiently",
        "Streamlining exists tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "filename",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "filename": "file_path",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of file exists",
        "output_variable": "filename"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 105,
    "uid": "8ecb11c5-bc97-4c01-9544-b1303c0e6024",
    "packageName": "SmartBots",
    "actionName": "files_load_text_from_file",
    "actionDescription": "Load Text From File",
    "actionGroup": "Files",
    "actionLabel": "Load Text From File",
    "actionIcon": "<?xml version=\"1.0\" ?><svg fill=\"none\" height=\"24\" stroke-width=\"1.5\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 6.5V5C3 3.89543 3.89543 3 5 3H16.1716C16.702 3 17.2107 3.21071 17.5858 3.58579L20.4142 6.41421C20.7893 6.78929 21 7.29799 21 7.82843V19C21 20.1046 20.1046 21 19 21H5C3.89543 21 3 20.1046 3 19V17.5\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M8 3H16V8.4C16 8.73137 15.7314 9 15.4 9H8.6C8.26863 9 8 8.73137 8 8.4V3Z\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M18 21V13.6C18 13.2686 17.7314 13 17.4 13H15\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M6 21V17.5\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M12 12H1M1 12L4 9M1 12L4 15\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\n#endregion\r\n\n#region code\n{{#isEmpty encoding}}\n_temp_encoding = \"utf-8\"\n{{/isEmpty}}\n{{#isNotEmpty encoding}}\n_temp_encoding = f\"{{encoding}}\"\n{{/isNotEmpty}}\nwith open(f\"{{filename}}\", 'r', encoding=_temp_encoding) as _temp_archivo:\n  {{result}} = _temp_archivo.read()  \n#endregion\r\n\r\n#region requiredExtensions\r\n#endregion\r\n\r\n#region toString\r\n{{filename}} - {{encoding}} - {{result}}\n#endregion\r\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"filename\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Filename\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${filename}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"encoding\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Encoding\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('encoding', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"utf-8\",\n                    \"initialValue\": \"${encoding}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Load Text From File",
      "intent_keywords": [
        "from",
        "files_load_text_from_file",
        "load",
        "file",
        "text"
      ],
      "use_cases": [
        "Automating text from file operations",
        "Processing text from file in workflows",
        "Managing text from file data efficiently",
        "Streamlining text from file tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "filename",
          "result"
        ],
        "optional_inputs": [
          "encoding"
        ],
        "input_types": {
          "filename": "file_path",
          "encoding": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of load text from file",
        "output_variable": "filename"
      },
      "complexity_level": "basic",
      "dependencies": [
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 106,
    "uid": "d624b761-1876-49d5-9245-a5c7fa0635f3",
    "packageName": "SmartBots",
    "actionName": "convert_json_to_dataframe",
    "actionDescription": "Convert Json To Dataframe",
    "actionGroup": "Convert",
    "actionLabel": "Convert Json To Dataframe",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g data-name=\"transition, conversion, convert, transfer, motion, split, slide\" id=\"transition_conversion_convert_transfer_motion_split_slide\"><path d=\"M14,19a1,1,0,0,0-1,1v4H4V8h9v4a1,1,0,0,0,2,0V7a1,1,0,0,0-1-1H3A1,1,0,0,0,2,7V25a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V20A1,1,0,0,0,14,19Z\"/><path d=\"M29,6H18a1,1,0,0,0-1,1v5a1,1,0,0,0,2,0V8h9V24H19V20a1,1,0,0,0-2,0v5a1,1,0,0,0,1,1H29a1,1,0,0,0,1-1V7A1,1,0,0,0,29,6Z\"/><path d=\"M7,16a1,1,0,0,0,1,1H22.59l-.3.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0l2-2a1,1,0,0,0,0-1.42l-2-2a1,1,0,0,0-1.42,1.42l.3.29H8A1,1,0,0,0,7,16Z\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport pandas as pd\n#endregion\n\n#region code\n{{result}} = pd.DataFrame({{json_source}})\n#endregion\n\n#region requiredExtensions\npandas\n#endregion\n\n#region toString\n{{json_source}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"json_source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"JSON Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('json_source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${json_source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Convert Json To Dataframe",
      "intent_keywords": [
        "json",
        "dataframe",
        "convert",
        "to",
        "convert_json_to_dataframe"
      ],
      "use_cases": [
        "Automating to dataframe operations",
        "Processing to dataframe in workflows",
        "Managing to dataframe data efficiently",
        "Streamlining to dataframe tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "json_source",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "json_source": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of convert json to dataframe",
        "output_variable": "json_source"
      },
      "complexity_level": "basic",
      "dependencies": [
        "pandas_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 107,
    "uid": "bucar_file",
    "packageName": "SmartBots",
    "actionName": "buscar_archivo",
    "actionDescription": "Buscar Archivo",
    "actionGroup": "Files",
    "actionLabel": "Buscar Archivo",
    "actionIcon": null,
    "storageEntity": null,
    "info": null,
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Buscar Archivo",
      "intent_keywords": [
        "buscar",
        "buscar_archivo",
        "archivo"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of buscar archivo",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 108,
    "uid": "d5638d10-f861-4a13-9fb0-61471a19509f",
    "packageName": "SmartBots",
    "actionName": "system_current_yyyymmdd",
    "actionDescription": "Current Date, Year, Month or Day",
    "actionGroup": "System",
    "actionLabel": "Current Date, Year, Month or Day",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M10 18.5002V13.5002H9M14 18.4983L15.5 13.5H13\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M16.5 2V6M7.5 2V6\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M19 4H5C3.89543 4 3 4.89543 3 6V20C3 21.1046 3.89543 22 5 22H19C20.1046 22 21 21.1046 21 20V6C21 4.89543 20.1046 4 19 4Z\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M3 10H21\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom datetime import datetime\n#endregion\n\n#region code\n{{#if result_unit == 'date'}}\n{{result}} = datetime.now().date()\n{{/if}}\n{{#if result_unit != 'date'}}\n{{result}} = datetime.now().{{result_unit}}\n{{/if}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{result}}  {{result_unit}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n{\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"result_unit\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Current\"\r\n                    },\r\n                    \"items\": [\r\n                        \"date\",\r\n                        \"year\"\r,\n                        \"month\"\r,\n                        \"day\"\r                        \n                    ],\r\n                    \"initialValue\": \"${result_unit}\",\r\n                    \"value\": \"${result_unit}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r,        \n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Current Date, Year, Month or Day",
      "intent_keywords": [
        "day",
        "year",
        "or",
        "current",
        "month",
        "date",
        "system_current_yyyymmdd"
      ],
      "use_cases": [
        "Automating yyyymmdd operations",
        "Processing yyyymmdd in workflows",
        "Managing yyyymmdd data efficiently",
        "Streamlining yyyymmdd tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "result_unit",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "result_unit": "selection",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of current date, year, month or day",
        "output_variable": "result_unit"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 109,
    "uid": "576c512a-4f68-49c2-8e32-06c7012f9440",
    "packageName": "SmartBots",
    "actionName": "system_add_yyyymmdd_to_date",
    "actionDescription": "Add Years, Months or Days to Date",
    "actionGroup": "System",
    "actionLabel": "Add Years, Months or Days to Date",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M10 18.5002V13.5002H9M14 18.4983L15.5 13.5H13\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M16.5 2V6M7.5 2V6\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M19 4H5C3.89543 4 3 4.89543 3 6V20C3 21.1046 3.89543 22 5 22H19C20.1046 22 21 21.1046 21 20V6C21 4.89543 20.1046 4 19 4Z\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M3 10H21\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom dateutil.relativedelta import relativedelta\n#endregion\n\n#region code\n{{result}} = {{date_source}} + relativedelta({{unit_to_add}}={{num}})\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{date_source}} - {{num}} {{unit_to_add}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"date_source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Date Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('date_source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${date_source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"dropdown_button_form_field\",\n                \"id\": \"unit_to_add\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Unit To Add\"\n                    },\n                    \"items\": [\n                        \"years\",\n                        \"months\",\n                        \"days\"\n                    ],\n                    \"initialValue\": \"${unit_to_add}\",\n                    \"value\": \"${unit_to_add}\",\n                    \"validators\": [\n                        {\n                            \"type\": \"required\"\n                        }\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"num\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Quantity To Add\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('num', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${num}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Add Years, Months or Days to Date",
      "intent_keywords": [
        "system_add_yyyymmdd_to_date",
        "days",
        "months",
        "or",
        "years",
        "to",
        "date",
        "add"
      ],
      "use_cases": [
        "Automating yyyymmdd to date operations",
        "Processing yyyymmdd to date in workflows",
        "Managing yyyymmdd to date data efficiently",
        "Streamlining yyyymmdd to date tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "date_source",
          "unit_to_add",
          "num",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "date_source": "string",
          "unit_to_add": "selection",
          "num": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of add years, months or days to date",
        "output_variable": "date_source"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 110,
    "uid": "fc2149c2-375d-4bf9-852d-b12aa02165da",
    "packageName": "SmartBots",
    "actionName": "system_get_yyyymmdd_from_date",
    "actionDescription": "Get Year, Month or Day From Date",
    "actionGroup": "System",
    "actionLabel": "Get Year, Month or Day From Date",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M10 18.5002V13.5002H9M14 18.4983L15.5 13.5H13\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M16.5 2V6M7.5 2V6\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M19 4H5C3.89543 4 3 4.89543 3 6V20C3 21.1046 3.89543 22 5 22H19C20.1046 22 21 21.1046 21 20V6C21 4.89543 20.1046 4 19 4Z\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M3 10H21\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = {{date_source}}.{{unit_to_get}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{date_source}} - {{unit_to_get}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"date_source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Date Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('date_source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${date_source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"dropdown_button_form_field\",\n                \"id\": \"unit_to_get\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Unit To Get\"\n                    },\n                    \"items\": [\n                        \"year\",\n                        \"month\",\n                        \"day\"\n                    ],\n                    \"initialValue\": \"${unit_to_get}\",\n                    \"value\": \"${unit_to_get}\",\n                    \"validators\": [\n                        {\n                            \"type\": \"required\"\n                        }\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Get Year, Month or Day From Date",
      "intent_keywords": [
        "day",
        "from",
        "year",
        "or",
        "system_get_yyyymmdd_from_date",
        "month",
        "get",
        "date"
      ],
      "use_cases": [
        "Automating yyyymmdd from date operations",
        "Processing yyyymmdd from date in workflows",
        "Managing yyyymmdd from date data efficiently",
        "Streamlining yyyymmdd from date tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "date_source",
          "unit_to_get",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "date_source": "string",
          "unit_to_get": "selection",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of get year, month or day from date",
        "output_variable": "date_source"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 111,
    "uid": "7e918ea7-af9a-42d9-ad1b-5547bc18f93e",
    "packageName": "SmartBots",
    "actionName": "convert_to_str_leading_zero",
    "actionDescription": "Convert To String With Leading Zeros",
    "actionGroup": "Convert",
    "actionLabel": "Convert To String With Leading Zeros",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g data-name=\"transition, conversion, convert, transfer, motion, split, slide\" id=\"transition_conversion_convert_transfer_motion_split_slide\"><path d=\"M14,19a1,1,0,0,0-1,1v4H4V8h9v4a1,1,0,0,0,2,0V7a1,1,0,0,0-1-1H3A1,1,0,0,0,2,7V25a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V20A1,1,0,0,0,14,19Z\"/><path d=\"M29,6H18a1,1,0,0,0-1,1v5a1,1,0,0,0,2,0V8h9V24H19V20a1,1,0,0,0-2,0v5a1,1,0,0,0,1,1H29a1,1,0,0,0,1-1V7A1,1,0,0,0,29,6Z\"/><path d=\"M7,16a1,1,0,0,0,1,1H22.59l-.3.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0l2-2a1,1,0,0,0,0-1.42l-2-2a1,1,0,0,0-1.42,1.42l.3.29H8A1,1,0,0,0,7,16Z\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = str({{source}}).zfill({{zeros}})\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{source}} - {{zeros}} zeros - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"zeros\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Quantity Of Zeros\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('zeros', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${zeros}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Convert To String With Leading Zeros",
      "intent_keywords": [
        "zeros",
        "leading",
        "with",
        "string",
        "convert_to_str_leading_zero",
        "to",
        "convert"
      ],
      "use_cases": [
        "Automating str leading zero operations",
        "Processing str leading zero in workflows",
        "Managing str leading zero data efficiently",
        "Streamlining str leading zero tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source",
          "zeros",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "source": "string",
          "zeros": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of convert to string with leading zeros",
        "output_variable": "source"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 112,
    "uid": "03bd5768-fa1b-4cc2-a72b-b7dd5927f294",
    "packageName": "SmartBots",
    "actionName": "system_get_month_name",
    "actionDescription": "Get Month Name",
    "actionGroup": "System",
    "actionLabel": "Get Month Name",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M10 18.5002V13.5002H9M14 18.4983L15.5 13.5H13\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M16.5 2V6M7.5 2V6\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M19 4H5C3.89543 4 3 4.89543 3 6V20C3 21.1046 3.89543 22 5 22H19C20.1046 22 21 21.1046 21 20V6C21 4.89543 20.1046 4 19 4Z\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M3 10H21\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nfrom datetime import datetime\n#endregion\n\n#region code\nif type({{source}}) is datetime:\n  {{result}} = {{source}}.strftime('%B')\nelse:\n  {{result}} = datetime(1900, {{source}}, 1).strftime('%B')\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{source}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Get Month Name",
      "intent_keywords": [
        "get",
        "name",
        "system_get_month_name",
        "month"
      ],
      "use_cases": [
        "Automating month name operations",
        "Processing month name in workflows",
        "Managing month name data efficiently",
        "Streamlining month name tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "source": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of get month name",
        "output_variable": "source"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 113,
    "uid": "ee4db0a1-d10b-4726-9caa-7a13f6ea1753",
    "packageName": "SmartBots",
    "actionName": "strings_left_str",
    "actionDescription": "Left String",
    "actionGroup": "Strings",
    "actionLabel": "Left String",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M2 22V2\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M22 22V2\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M16.9976 18L15.1179 13.5M7 18L8.86945 13.5M15.1179 13.5L11.9852 6L8.86945 13.5M15.1179 13.5H8.86945\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = str({{source}})[:{{num}}]\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{source}} - {{num}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"num\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Number Of Characters\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('num', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${num}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Left String",
      "intent_keywords": [
        "left",
        "strings_left_str",
        "string"
      ],
      "use_cases": [
        "Automating str operations",
        "Processing str in workflows",
        "Managing str data efficiently",
        "Streamlining str tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source",
          "num",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "source": "string",
          "num": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of left string",
        "output_variable": "source"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 114,
    "uid": "b52aaa02-552f-4b13-867b-10834716244a",
    "packageName": "SmartBots",
    "actionName": "strings_right_str",
    "actionDescription": "Right String",
    "actionGroup": "Strings",
    "actionLabel": "Right String",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M2 22V2\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M22 22V2\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M16.9976 18L15.1179 13.5M7 18L8.86945 13.5M15.1179 13.5L11.9852 6L8.86945 13.5M15.1179 13.5H8.86945\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = str({{source}})[{{num}}:]\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{source}} - {{num}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"num\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Number Of Characters\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('num', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${num}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Right String",
      "intent_keywords": [
        "right",
        "strings_right_str",
        "string"
      ],
      "use_cases": [
        "Automating str operations",
        "Processing str in workflows",
        "Managing str data efficiently",
        "Streamlining str tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source",
          "num",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "source": "string",
          "num": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of right string",
        "output_variable": "source"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 115,
    "uid": "2a4f6e3f-4cce-4ff3-a328-ec4b52dea2a9",
    "packageName": "SmartBots",
    "actionName": "string_substring",
    "actionDescription": "Substring",
    "actionGroup": "Strings",
    "actionLabel": "Substring",
    "actionIcon": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" color=\"#000000\" fill=\"none\">\n    <path d=\"M2 22V2\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M22 22V2\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    <path d=\"M16.9976 18L15.1179 13.5M7 18L8.86945 13.5M15.1179 13.5L11.9852 6L8.86945 13.5M15.1179 13.5H8.86945\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n</svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = str({{source}})[{{pos_from}}:{{pos_from}}+{{num}}]\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{source}} - {{num}} - {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"pos_from\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Index Of Start\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('pos_from', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${pos_from}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"num\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Number Of Characters\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('num', 'numeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${num}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Substring",
      "intent_keywords": [
        "string_substring",
        "substring"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "source",
          "pos_from",
          "num",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "source": "string",
          "pos_from": "string",
          "num": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of substring",
        "output_variable": "source"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 116,
    "uid": "99663a4d-af11-4d96-8f14-de75c58b7548",
    "packageName": "SmartBots",
    "actionName": "excel_extrae_valores",
    "actionDescription": "Open Excel Only Values",
    "actionGroup": "Excel",
    "actionLabel": "Open Excel Only Values",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><path d=\"M200,24H72A16,16,0,0,0,56,40V64H40A16,16,0,0,0,24,80v96a16,16,0,0,0,16,16H56v24a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24ZM69.2,158.4a8,8,0,0,1-1.6-11.2L82,128,67.6,108.8a8,8,0,1,1,12.8-9.6L92,114.7l11.6-15.5a8,8,0,0,1,12.8,9.6L102,128l14.4,19.2a8,8,0,0,1-1.6,11.2A7.7,7.7,0,0,1,110,160a8,8,0,0,1-6.4-3.2L92,141.3,80.4,156.8A8,8,0,0,1,74,160,7.7,7.7,0,0,1,69.2,158.4ZM128,216H72V192h56Zm0-152H72V40h56Zm72,152H144V192a16,16,0,0,0,16-16v-8h40Zm0-64H160V104h40Zm0-64H160V80a16,16,0,0,0-16-16V40h56Z\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport openpyxl\r\n#endregion\r\n\r\n#region code\r\n{{handler}} = openpyxl.load_workbook(f'{{filename}}', data_only=True)\r\n#endregion\r\n\r\n#region requiredExtensions\r\nopenpyxl\r\n#endregion\r\n\r\n#region toString\r\n({{handler}} - {{filename}}\r\n#endregion\r\n",
    "parameters": " {\r\n    \"type\": \"wrap\",\r\n    \"args\": {\r\n        \"runSpacing\": 12.0,\r\n        \"children\": [\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"handler\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Handler\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": null,\r\n                    \"initialValue\": \"${handler}\",\r\n                    \"content_sources\": null\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"text_form_field\",\r\n                \"id\": \"filename\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Filename\",\r\n                        \"suffixIcon\": {\r\n                            \"type\": \"icon_button\",\r\n                            \"args\": {\r\n                                \"icon\": {\r\n                                    \"type\": \"icon\",\r\n                                    \"args\": {\r\n                                        \"icon\": {\r\n                                            \"codePoint\": 58369,\r\n                                            \"fontFamily\": \"MaterialIcons\",\r\n                                            \"size\": 50\r\n                                        }\r\n                                    }\r\n                                },\r\n                                \"onPressed\": \"${select_content_source('filename', 'alphanumeric', 'variable|local_filename')}\"\r\n                            }\r\n                        }\r\n                    },\r\n                    \"value\": null,\r\n                    \"initialValue\": \"${filename}\",\r\n                    \"content_sources\": [\r\n                        \"variable\",\r\n                        \"local_filename\"\r\n                    ]\r\n                },\r\n                \"validators\": [\r\n                    {\r\n                        \"type\": \"required\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}    ",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Open Excel Only Values",
      "intent_keywords": [
        "open",
        "only",
        "write",
        "spreadsheet",
        "excel_extrae_valores",
        "excel",
        "xlsx",
        "xls",
        "load",
        "save",
        "values",
        "read"
      ],
      "use_cases": [
        "Automating valores operations",
        "Processing valores in workflows",
        "Managing valores data efficiently",
        "Streamlining valores tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "filename"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "filename": "file_path"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of open excel only values",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library",
        "file_system_access"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 117,
    "uid": "Get_Row_Excel",
    "packageName": "SmartBots",
    "actionName": "Get row Excel",
    "actionDescription": "Get row Excel",
    "actionGroup": "Excel",
    "actionLabel": "Get row Excel",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><path d=\"M200,24H72A16,16,0,0,0,56,40V64H40A16,16,0,0,0,24,80v96a16,16,0,0,0,16,16H56v24a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24ZM69.2,158.4a8,8,0,0,1-1.6-11.2L82,128,67.6,108.8a8,8,0,1,1,12.8-9.6L92,114.7l11.6-15.5a8,8,0,0,1,12.8,9.6L102,128l14.4,19.2a8,8,0,0,1-1.6,11.2A7.7,7.7,0,0,1,110,160a8,8,0,0,1-6.4-3.2L92,141.3,80.4,156.8A8,8,0,0,1,74,160,7.7,7.7,0,0,1,69.2,158.4ZM128,216H72V192h56Zm0-152H72V40h56Zm72,152H144V192a16,16,0,0,0,16-16v-8h40Zm0-64H160V104h40Zm0-64H160V80a16,16,0,0,0-16-16V40h56Z\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\r\nimport openpyxl\r\n#endregion\r\n\r\n#region code\r\n{{#isEmpty sheetname}}\r\n_temp_ws = {{excel_handler}}.active\r\n{{/isEmpty}}\r\n{{#isNotEmpty sheetname}}\r\n_temp_ws = {{excel_handler}}[f\"{{sheetname}}\"]\r\n{{/isNotEmpty}}\r\n_temp_row = {{cell}}\r\n{{result}} = [fila for fila in _temp_ws.iter_rows(min_row=_temp_row, max_row=_temp_row, values_only=True)][0]\r\n#endregion\r\n\r\n#region requiredExtensions\r\n#endregion\r\n\r\n#region toString\r\n{{result}} = {{cell}}\r\n#endregion\r\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"excel_handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Excel Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('excel_handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${excel_handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheetname\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheetname', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheetname}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"cell\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Row\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('cell', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${cell}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('value', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n}        \n    }",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Get row Excel",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "excel",
        "row",
        "xlsx",
        "xls",
        "load",
        "save",
        "get",
        "read"
      ],
      "use_cases": [
        "Automating data operations",
        "Processing data in workflows",
        "Managing data data efficiently",
        "Streamlining data tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "excel_handler",
          "cell",
          "result"
        ],
        "optional_inputs": [
          "sheetname"
        ],
        "input_types": {
          "excel_handler": "variable_name",
          "sheetname": "string",
          "cell": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of get row excel",
        "output_variable": "excel_handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 118,
    "uid": "5c83dbee-00ab-4cf1-812b-66af3045773c",
    "packageName": "SmartBots",
    "actionName": "excel_select_sheet",
    "actionDescription": "Select Sheet Excel Book",
    "actionGroup": "Excel",
    "actionLabel": "Select Sheet Excel Book",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\nimport openpyxl\n#endregion\n\n#region code\n{{result}} = {{handler}}[f\"{{sheet_name}}\"]\n#endregion\n\n#region requiredExtensions\nopenpyxl\n#endregion\n\n#region toString\n{{handler}} {{sheet_name}} {{result}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Handler Excel Book\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"sheet_name\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Name\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('sheet_name', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${sheet_name}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Select Sheet Excel Book",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "book",
        "excel",
        "select",
        "xlsx",
        "xls",
        "load",
        "save",
        "sheet",
        "excel_select_sheet",
        "read"
      ],
      "use_cases": [
        "Automating sheet operations",
        "Processing sheet in workflows",
        "Managing sheet data efficiently",
        "Streamlining sheet tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "sheet_name",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "sheet_name": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of select sheet excel book",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [
        "openpyxl_library"
      ],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 119,
    "uid": "ab2852e4-1843-4f8d-b5e3-a44360674fb5",
    "packageName": "SmartBots",
    "actionName": "excel_show_hide_sheet",
    "actionDescription": "Show/Hide Excel Sheet Book",
    "actionGroup": "Excel",
    "actionLabel": "Show/Hide Excel Sheet Book",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{#if show_hide == \"show\"}}\n{{handler}}.sheet_state = \"visible\"\n{{/if}}\n{{#if show_hide == \"hide\"}}\n{{handler}}.sheet_state = \"hidden\"\n{{/if}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{handler}} {{show_hide}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\r\n            {\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"show_hide\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Show/Hide\"\r\n                    },\r\n                    \"items\": [\r\n                        \"show\",\r\n                        \"hide\"\r\n                    ],\r\n                    \"initialValue\": \"${show_hide}\",\r\n                    \"value\": \"${show_hide}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Show/Hide Excel Sheet Book",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "show",
        "book",
        "excel",
        "xlsx",
        "xls",
        "load",
        "save",
        "excel_show_hide_sheet",
        "sheet",
        "read",
        "hide"
      ],
      "use_cases": [
        "Automating hide sheet operations",
        "Processing hide sheet in workflows",
        "Managing hide sheet data efficiently",
        "Streamlining hide sheet tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "show_hide"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "show_hide": "selection"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of show/hide excel sheet book",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 120,
    "uid": "a4c4622d-df76-4b3e-b8ae-952c26b95ceb",
    "packageName": "SmartBots",
    "actionName": "excel_show_hide_columns",
    "actionDescription": "Show/Hide Excel Sheet Columns",
    "actionGroup": "Excel",
    "actionLabel": "Show/Hide Excel Sheet Columns",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\"><rect fill=\"none\" height=\"256\" width=\"256\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"96\" y2=\"96\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"152\" x2=\"208\" y1=\"160\" y2=\"160\"/><path d=\"M64,72V40a8,8,0,0,1,8-8H200a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H72a8,8,0,0,1-8-8V184\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"184\" y2=\"224\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"136\" x2=\"136\" y1=\"32\" y2=\"72\"/><rect fill=\"none\" height=\"112\" rx=\"8\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" width=\"120\" x=\"32\" y=\"72\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"74\" x2=\"110\" y1=\"104\" y2=\"152\"/><line fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"16\" x1=\"110\" x2=\"74\" y1=\"104\" y2=\"152\"/></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{#if show_hide == \"show\"}}\n{{handler}}.column_dimensions[f\"{{column}}\"].hidden = False\n{{/if}}\n{{#if show_hide == \"hide\"}}\n{{handler}}.column_dimensions[f\"{{column}}\"].hidden = True\n{{/if}}\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{handler}} {{column}} {{show_hide}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"handler\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Sheet Handler\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('handler', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${handler}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"column\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Column\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('column', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${column}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\r\n            {\r\n                \"type\": \"dropdown_button_form_field\",\r\n                \"id\": \"show_hide\",\r\n                \"args\": {\r\n                    \"decoration\": {\r\n                        \"labelText\": \"Show/Hide\"\r\n                    },\r\n                    \"items\": [\r\n                        \"show\",\r\n                        \"hide\"\r\n                    ],\r\n                    \"initialValue\": \"${show_hide}\",\r\n                    \"value\": \"${show_hide}\",\r\n                    \"validators\": [\r\n                        {\r\n                            \"type\": \"required\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Show/Hide Excel Sheet Columns",
      "intent_keywords": [
        "write",
        "spreadsheet",
        "show",
        "excel",
        "xlsx",
        "xls",
        "load",
        "excel_show_hide_columns",
        "save",
        "sheet",
        "columns",
        "read",
        "hide"
      ],
      "use_cases": [
        "Automating hide columns operations",
        "Processing hide columns in workflows",
        "Managing hide columns data efficiently",
        "Streamlining hide columns tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "handler",
          "column",
          "show_hide"
        ],
        "optional_inputs": [],
        "input_types": {
          "handler": "variable_name",
          "column": "string",
          "show_hide": "selection"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of show/hide excel sheet columns",
        "output_variable": "handler"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout",
        "File not found or access denied",
        "Invalid Excel file format",
        "Sheet name not found"
      ],
      "performance_notes": "Performance scales with file size. Consider chunking for large Excel files (>100MB)"
    }
  },
  {
    "id": 121,
    "uid": "fefac056-5194-4ff4-af1a-e418f92abe86",
    "packageName": "SmartBots",
    "actionName": "convert_dataframe_json",
    "actionDescription": "Convert Dataframe to Json",
    "actionGroup": "Convert",
    "actionLabel": "Convert Dataframe to Json",
    "actionIcon": "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g data-name=\"transition, conversion, convert, transfer, motion, split, slide\" id=\"transition_conversion_convert_transfer_motion_split_slide\"><path d=\"M14,19a1,1,0,0,0-1,1v4H4V8h9v4a1,1,0,0,0,2,0V7a1,1,0,0,0-1-1H3A1,1,0,0,0,2,7V25a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V20A1,1,0,0,0,14,19Z\"/><path d=\"M29,6H18a1,1,0,0,0-1,1v5a1,1,0,0,0,2,0V8h9V24H19V20a1,1,0,0,0-2,0v5a1,1,0,0,0,1,1H29a1,1,0,0,0,1-1V7A1,1,0,0,0,29,6Z\"/><path d=\"M7,16a1,1,0,0,0,1,1H22.59l-.3.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0l2-2a1,1,0,0,0,0-1.42l-2-2a1,1,0,0,0-1.42,1.42l.3.29H8A1,1,0,0,0,7,16Z\"/></g></svg>",
    "storageEntity": null,
    "info": null,
    "code": "#region import\n#endregion\n\n#region code\n{{result}} = {{dataframe_source}}.to_json()\n#endregion\n\n#region requiredExtensions\n#endregion\n\n#region toString\n{{result}} - {{dataframe_source}}\n#endregion\n",
    "parameters": "{\n    \"type\": \"wrap\",\n    \"args\": {\n        \"runSpacing\": 12.0,\n        \"children\": [\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"dataframe_source\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Dataframe Source\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('dataframe_source', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${dataframe_source}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"text_form_field\",\n                \"id\": \"result\",\n                \"args\": {\n                    \"decoration\": {\n                        \"labelText\": \"Result Json\",\n                        \"suffixIcon\": {\n                            \"type\": \"icon_button\",\n                            \"args\": {\n                                \"icon\": {\n                                    \"type\": \"icon\",\n                                    \"args\": {\n                                        \"icon\": {\n                                            \"codePoint\": 58369,\n                                            \"fontFamily\": \"MaterialIcons\",\n                                            \"size\": 50\n                                        }\n                                    }\n                                },\n                                \"onPressed\": \"${select_content_source('result', 'alphanumeric', 'variable|local_filename|cloud_filename')}\"\n                            }\n                        }\n                    },\n                    \"value\": \"\",\n                    \"initialValue\": \"${result}\",\n                    \"content_sources\": [\n                        \"variable\"\n                    ]\n                },\n                \"validators\": [\n                    {\n                        \"type\": \"required\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": "S",
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Convert Dataframe to Json",
      "intent_keywords": [
        "json",
        "convert_dataframe_json",
        "convert",
        "to",
        "dataframe"
      ],
      "use_cases": [
        "Automating json operations",
        "Processing json in workflows",
        "Managing json data efficiently",
        "Streamlining json tasks"
      ],
      "input_requirements": {
        "required_inputs": [
          "dataframe_source",
          "result"
        ],
        "optional_inputs": [],
        "input_types": {
          "dataframe_source": "string",
          "result": "string"
        }
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of convert dataframe to json",
        "output_variable": "dataframe_source"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  },
  {
    "id": 122,
    "uid": "0d298063-3e98-4e3a-ac95-9e2a1b5614d6",
    "packageName": "SmartBots",
    "actionName": "message_envia_telegram",
    "actionDescription": "Send a message with Telegram",
    "actionGroup": "Messages",
    "actionLabel": "Send a message with Telegram",
    "actionIcon": null,
    "storageEntity": null,
    "info": null,
    "code": null,
    "parameters": null,
    "origin": "SmartBots",
    "global": 1,
    "canHaveChildren": null,
    "status": null,
    "childrenIdent": null,
    "blockPropName": null,
    "ai_metadata": {
      "natural_language_description": "Send a message with Telegram",
      "intent_keywords": [
        "send",
        "telegram",
        "message",
        "with",
        "message_envia_telegram",
        "a"
      ],
      "use_cases": [
        "Automating telegram operations",
        "Processing telegram in workflows",
        "Managing telegram data efficiently",
        "Streamlining telegram tasks"
      ],
      "input_requirements": {
        "required_inputs": [],
        "optional_inputs": [],
        "input_types": {}
      },
      "output_description": {
        "output_type": "variable",
        "output_description": "Result of send a message with telegram",
        "output_variable": "result"
      },
      "complexity_level": "basic",
      "dependencies": [],
      "typical_next_steps": [],
      "error_scenarios": [
        "Invalid input parameters",
        "Component execution timeout"
      ],
      "performance_notes": "Standard performance considerations apply"
    }
  }
]